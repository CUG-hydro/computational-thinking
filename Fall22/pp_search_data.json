[{"url":"cheatsheets/","title":"Cheatsheets","tags":["welcome"],"text":"Cheatsheets Getting Started with Julia - live . Fastrack to Julia  cheatsheet. MATLAB-Julia-Python comparative cheatsheet  by  QuantEcon group Plots.jl cheatsheet"},{"url":"clips/","title":"clips","tags":[],"text":"Submit A Short Clip Did you have a favorite (or many favorite) 1-2 minute clips from one of the lectures in this course? Consider sending them to us and that way we can share them on Twitter so more people can get exposure to computational thinking. Use  this form  to upload clips."},{"url":"homework/","title":"Homework","tags":["welcome"],"text":"Homework Assignment Due Date Submission Discord HW 0 Feb 19, 2021 Canvas N/A MITx  Week 1 Problems Feb 24, 2021 MITx N/A HW 1 Feb 26, 2021 Canvas #hw1-sp21 MITx  Week 2 Problems Mar 3, 2021 MITx N/A HW 2 Mar 5, 2021 Canvas #hw2-sp21 HW 3 Mar 12, 2021 Canvas #hw3-sp21 MITx  Week 3 Problems Mar 12, 2021 MITx N/A HW 4 Mar 19, 2021 Canvas #hw4-sp21 HW 5 Mar 26, 2021 Canvas #hw5-sp21 MITx  Week 6 Problems Mar 29, 2021 MITx N/A HW 6 April 9, 2021 Canvas #hw6-sp21 HW 7 April 16, 2021 Canvas #hw7-sp21 HW 8 April 23, 2021 Canvas #hw8-sp21 HW 9 May 4, 2021 Canvas #hw9-sp21 HW 10 May 20, 2021 Canvas #hw10-sp21"},{"url":"how_to_collaborate_on_software/","title":"How to collaborate on software","tags":["module1","github","open source","software","collaboration"],"text":" A Pluto.jl notebook v0.19.12 frontmatter image \"https user images.githubusercontent.com 6933510 136199704 ba6d0586 34bf 490c 8fd0 6959ab42cd23.png\" title \"How to collaborate on software\" layout \"layout.jlhtml\" date \"2022 05 01\" description \"A simple introduction to Open Source and GitHub, for scientist who use Google Drive.\" tags \"module1\", \"github\", \"open source\", \"software\", \"collaboration\" youtube id \"7N9Vvc8amGM\" using Markdown using InteractiveUtils md\"\"\" How to collaborate on software What is the simplest way to collaborate on project online? You can email files to each other This works for small projects, but at some point, you will need something more suited to the task. For example Encyclopedia a wiki system School essay Google Drive Software project GitHub For software projects, people of use GitHub, or similar git based tools to collaborate on their work. Why is that? \"\"\" TableOfContents aside false, depth 1 md\"\"\" Why not Google Drive? \"\"\" html\"\"\" p If you have not used Google Drive before, here is a small demonstration p video src \"https user images.githubusercontent.com 6933510 117038375 d8497080 ad07 11eb 8260 34e96414131a.mov\" data canonical src \"https user images.githubusercontent.com 6933510 117038375 d8497080 ad07 11eb 8260 34e96414131a.mov\" controls \"controls\" muted \"muted\" class \"d block rounded bottom 2 width fit\" style \"max height 640px \" video \"\"\" | aside md\"\"\" Google Drive or Dropbox, Nextcloud, etc is a platform for realtime collaboration on files. Besides synchronizing single files like the video above , Google Drive also allows you to synchronize entire folders between multiple computers and the cloud. That's awesome So do people use it for collaborative software projects? Well, generally not. Software projects have some unique properties that require different tools. As today's introduction into git , let's look at the differences between a software project and a non software project , and why platforms like Google Drive don't work well for collaborating on code. Note that we will take a different perspective that other introductions to git . Let's start out with a realtime synchronization system like Google Drive as our default, and think about why we might want to change its functionality to make it more suitable for software. \"\"\" md\"\"\" Reason 1 sensitive to change Reason 1 In software projects, small changes often make a big difference. Changes to one file affect the entire program. For example, here is what Pluto.jl looks like after adding a single character to the source code \"\"\" flex md\"\"\" Before Schermafbeelding 2021 05 04 om 18 51 27 https user images.githubusercontent.com 6933510 117040056 c10b8280 ad09 11eb 9384 d211156440b1.png \"\"\", md\"\"\" After a single change Schermafbeelding 2021 05 04 om 18 50 00 https user images.githubusercontent.com 6933510 117039958 a46f4a80 ad09 11eb 90fa c1264d896648.png \"\"\" | outline outline x Div x, Dict \"border\" \"3px solid rgba 0,0,0,.3 \", \"border radius\" \"3px\", \"padding\" \"5px\", md\"\"\" While a single character can mean disaster, this sensitivity also means that programming languages are quite powerful A small change will often do the trick. \"\"\" md\"\"\" Synchronizing every change This sensitivity to changes makes realtime synchronization unsuitable for software projects. To see why, let's say that I want to change `sqrt` to `log` in the following code \"\"\" Div md\"\"\" ```julia function height p c1 sqrt p c2 end ``` \"\"\", md\"to\", md\"\"\" ```julia function height p c1 log p c2 end ``` \"\"\" , Dict \"display\" \"flex\", \"justify content\" \"space evenly\", \"align items\" \"center\", md\"\"\" If you would synchronize every change while making that edit removing the letters `s`, `q`, `r`, `t`, typing `l`, `o`, `g` , then you are publishing broken code to your online code repository. If you were sharing changes in realtime like Google Drive , then other people would get those broken states while working on their features. \"\"\" md\"\"\" Synchronizing every keystroke \"\"\" grid nothing md\"`sqrt`\" md\"`sq`\" md\"` `\" md\"`lo`\" md\"`log`\" \"Your computer local \" pass fail fail fail pass \"Online remote \" pass fail fail fail pass md\"\"\" However, if we only publish code manually , we can make sure that we never publish broken code. This means that my collaborators, who might be working on the project at the same time, will not have to deal with errors that are coming from my work in progress changes. \"\"\" md\"\"\" Synchronizing manually \"\"\" grid nothing md\"`sqrt`\" md\"`sq`\" md\"` `\" md\"`lo`\" md\"`log`\" md\"Your computer local \" pass fail fail fail pass md\"Online remote \" pass nothing nothing nothing pass md\"\"\" ^sidenote Language design side note There are languages that are designed to be robust against small changes, and you can actually use realtime collaboration with those Examples are glitch.com glitch.com for collaborative HTML and CSS editing these languages can ignore syntax errors and continue , and the more experimental language Dark https darklang.com which uses a special editor that does not allow you to type errors . \"\"\" | aside md\"\"\" Even larger chunks In the previous example, we found that we can avoid publishing invalid syntax by not synchronizing on every keystroke like Google Docs, but by synchronizing manually. We also don't want to synchronize the file every time it is saved , because you often try multiple things before finding something that works. \"\"\" md\"\"\" Synchronizing every save \"\"\" grid nothing md\"`sqrt`\" md\"Let's try `sin`\" md\"Let's try `cos`\" md\"Try `log`\" \"Your computer local \" pass fail fail pass \"Online remote \" pass fail fail pass md\"\"\" Synchronizing manually \"\"\" grid nothing md\"`sqrt`\" md\"Let's try `sin`\" md\"Let's try `cos`\" md\"Try `log`\" \"Your computer local \" pass fail fail pass \"Online remote \" pass nothing nothing pass pass2 html\" span style 'opacity .3' ✅ span \" pass \"✅\" | HTML fail \"❌\" | HTML bigbreak md\"\"\" Reason 2 branches and forks Reason 2 It should be easy to split a project into multiple branches copies of the codebase that can be worked on independently. And after some time, we want to compare branches and merge the new additions into one. Something that you may have done create a copy of your `presentation.ppt` called `presentation with pictures.ppt` before adding your pictures, and if it didn't work, you can go back to yesterday's backup. Now that's great, but what if your teammate also made a copy `presentation with titlepage.ppt` where they also made a change? In this situation, you have created two branches of the same file in parallel, and it will be difficult to combine those changes back into a single `presentation this one really.ppt` file. \"\"\" bigbreak md\"\"\" Reason 3 automation Reason 3 Git is a platform for automation , and can be a mechanism to automatically test and review changes, release weekly versions, etc etc. Programmers love to automate things, and git allows all sorts of automation. At first, this can be intimidating , and it will take years of experience to learn all the possible tricks. Someone who does 'git magic' as a profession is called a DevOps https en.wikipedia.org wiki DevOps engineer . Don't worry about this too much when getting started with GitHub, and ask others for help if necessary. \"\"\" md\"\"\" Automatic testing While we don't recommend learning about git automation right away, one thing you will probably encounter when contributing to an open source project is automatic testing . More on this later \"\"\" bigbreak html\"\"\" br br br br br br br br \"\"\" md\"\"\" Our first contribution documentation Today will be a kick start into contributing to open source projects The easiest way to make a great contribution to packages is to contribute a documentation improvement . For our example today, we will look at the package ClimateMARGO.jl https github.com ClimateMARGO ClimateMARGO.jl , a climate economic model. This package is hosted on GitHub, which means that all code and previous versions of code is available at github.com ClimateMARGO ClimateMARGO.jl https github.com ClimateMARGO ClimateMARGO.jl . The authors also use the same GitHub site to manage their TO DOs — called Issues https github.com ClimateMARGO ClimateMARGO.jl issues — and to accept contributions from others — called Pull Requests https github.com ClimateMARGO ClimateMARGO.jl pulls . Today, we are going to make a Pull Request \"\"\" md\"\"\" What is a Pull Request? Julia packages are open source , which means that you are allowed and encouraged to make your own copy of the source code we call this a fork and modify it. If you made some good changes on your fork then you can suggest to changes to the original project by submitting your code as a Pull Request PR . This is a feature built in to GitHub, and this is how most code collaboration happens online. \"\"\" md\"\"\" Video tutorial will be available here after the live lecture. \"\"\" md\"\"\" After the Pull Request Submitting your Pull Request is a great feeling, but it's not the last step After your submission, the PR will be reviewed by the project authors, and they will leave their feedback. It is common that a PR is not merged accepted directly, but that you are asked to make some small changes. This is possible because a Pull Request is not static — you can make changes to the PR after submitting it Remember that a PR is from one branch to another . You can make changes to your PR simply by adding additional commits to the from branch. \"\"\" md\"\"\" ^1 If you are working on a fork , then by creating a PR, you also give the original project authors access to make changes to the from branch of the PR. This is a useful feature, allowing you to work together on the same codebase. \"\"\" | aside md\"\"\" As an example of a Pull Request in the wild, let's look at this PR to `JuliaLang julia` github.com JuliaLang julia pull 40596 https github.com JuliaLang julia pull 40596 . The code change is not so important to us right now, but pay attention to the communication around the code change. \"\"\" md\"\"\" How to use GitHub Enough talk, let's create our first repository \"\"\" md\"\"\" Requirements To follow this introduction, you will need Create an account at github.com github.com . Add a friendly profile picture For Windows & MacOS users, download GitHub Desktop https desktop.github.com , a graphical program to easily manage git repositories on your disk. Linux users can use the slightly more advanced program GitKraken https www.gitkraken.com . A code editor. If you don't have a code editor yet, or if you are using Notepad, gedit or Notepad , we highly recommend VS Code https code.visualstudio.com , an open source, beginner friendly programming environment. It may seem like something new and difficult to learn, but it is easy to use, and because it understands the code that you are writing, it will help you as a beginner programmer. \"\"\" md\"\"\" Video tutorial will be available here after the live lecture. \"\"\" htl \" em remote em \" md\"The version that is on the internet, you browse the remote on github.com.\", htl \" em local em \" md\"What's on your computer. Use `pull`, `commit` and `push` to synchronize this with the remote. Google Drive does this all the time.\" | vocabulary \"fetch\" md\"Make your local git aware of any changes online. Do this often \", \"pull\" md\"Apply any changes on the remote version to your local copy. This will get the two in sync . Do this often \", \"commit\" md\"Create a collection of changes to files, ready to be `push`ed.\", \"push\" md\"Publish any local `commit`s to the remote version.\", | vocabulary md\"\"\" ⛑ Git trouble Sooner or later, you will find yourself in git trouble . Unlike Google Drive, it can happen that synchronization requires manual intervention, for example, git might say `🤐 merge conflict` Which means that someone changed a file right before you were going to commit. \"\"\" md\"\"\" Fonsi's Git Trouble Fix™ Many git problems have an 'official' solution, and it will take time to learn all of these techniques. In the meantime, here is my fool proof way of solving many tricky git situations \"\"\" md\"\"\" Step 1 Use GitHub Desktop to find out which files you have changed. Are the changes important? Step 2 Take any files that you want to keep, and copy them to a different folder, e.g. your desktop. Step 3 Remove your local clone of the repository, and move any leftover files to the trash. Step 4 Clone the repository again, and copy your files back to their original place, overwriting the cloned files. \"\"\" bigbreak md\"\"\" How to fork and contribute code \"\"\" md\"\"\" Video tutorial will be available here after the live lecture. \"\"\" md\"\"\" Tests People often write tests for their code As part of the codebase, there will be a `test` folder containing scripts that will import the project and run some basic checks. \"\"\" function double x x x end test double 3 6 test double 0 0 md\"\"\" One reason to write tests is to pin specific behaviour, protecting yourself from accidentally changing it later. For example, if you fix a bug that `double 2 ` returns `40` instead of `4`, you would also add a test for `double 2 4`. Months later, when you are changing `double` for another use case, the old test insures that you are not accidentally breaking something that was once fixed. \"\"\" md\"\"\" Test driven design Some people like to first write their tests, which will fail initially, and then write the code to solve the problem. While working on the code, they keep re running the tests, until all checks are green This can be an effective and rewarding way to work on a software problem If you are following this course, then you will already be familiar with this concept The homework exercises were all designed with the test driven principle. \"\"\" | aside md\"\"\" Running tests You can run the tests of any Julia package by opening the Julia REPL, and typing ```julia julia v1.6 pkg test Example ``` As mentioned before, many project use github magic to automatically run their tests on a server for every change, and you can view the test results online. An important application is running tests for every Pull Request. This means that package authors can quickly review your changes, knowing that it does not break anything. \"\"\" bigbreak md\"\"\" Extra tips \"\"\" md\"\"\" Contributing does not only mean contributing code https opensource.guide how to contribute https opensource.guide how to contribute \"\"\" md\"\"\" Create a \"test\" repository Create multiple \"\"\" md\"\"\" Appendix \"\"\" begin using HypertextLiteral using PlutoTest using PlutoUI end function ingredients path String this is from the Julia source code evalfile in base loading.jl but with the modification that it returns the module instead of the last object name Symbol basename path m Module name Core.eval m, Expr toplevel, eval x Expr core, eval name, x , include x Expr top, include name, x , include mapexpr Function, x Expr top, include mapexpr, name, x , include path m end Layout ingredients download \"https raw.githubusercontent.com fonsp disorganised mess 5a59ad7cff1e760b997a54ffa0f8fa202ac16db3 Layout.jl\" stackrows x permutedims hcat x... , 2, 1 vocabulary x grid stackrows htl \" span style 'font size 1.2rem font weight 700 ' code k code span \" , v for k, v in x fill width false function flex args... kwargs... Div contents collect args , style Dict \"display\" \"flex\", \"flex \" String k string v for k, v in kwargs ... end flex x Union AbstractVector,Base.Generator kwargs... flex x... kwargs... begin Base. kwdef struct Div contents style Dict end Div x Div contents x function Base.show io IO, m MIME\"text html\", d Div h htl \"\"\" div style d.style d.contents div \"\"\" show io, m, h end end function grid items AbstractMatrix fill width Bool true Div contents Div. vec permutedims items, 2,1 , style Dict \"display\" fill width ? \"grid\" \"inline grid\", \"grid template columns\" \"repeat size items,2 , auto \", \"column gap\" \"1em\", , end function aside x htl \"\"\" style media min width calc 700px 30px 300px aside.plutoui aside wrapper position absolute right 11px width 0px transform translate 0, 40% aside.plutoui aside wrapper div width 300px style aside class \"plutoui aside wrapper\" div x div aside \"\"\" end "},{"url":".","title":"index","tags":["homepage"],"text":""},{"url":"installation/","title":"Software installation","tags":["welcome"],"text":"First-time setup: Install Julia & Pluto Video version: Text and pictures version: Step 1: Install Julia  1.7.2 Go to  https://julialang.org/downloads  and download the current stable release, Julia  1.7.2 , using the correct version for your operating system (Linux x86, Mac, Windows, etc). Step 2: Run Julia After installing,  make sure that you can run Julia . On some systems, this means searching for the “Julia  1.7.2 ” program installed on your computer; in others, it means running the command  julia  in a terminal. Make sure that you can execute  1 + 1 : Make sure that you are able to launch Julia and calculate  1+1  before proceeding! Step 3: Install  Pluto Next we will install the  Pluto notebook  that we will be using during the course. Pluto is a Julia  programming environment  designed for interactivity and quick experiments. Open the  Julia REPL . This is the command-line interface to Julia, similar to the previous screenshot. Here you type  Julia commands , and when you press ENTER, it runs, and you see the result. To install Pluto, we want to run a  package manager command . To switch from  Julia  mode to  Pkg  mode, type  ]  (closing square bracket) at the  julia>  prompt: julia> ]\n\n(@v1.x) pkg>\n The line turns blue and the prompt changes to  pkg> , telling you that you are now in  package manager mode . This mode allows you to do operations on  packages  (also called libraries). To install Pluto, run the following (case sensitive) command to  add  (install) the package to your system by downloading it from the internet.\nYou should only need to do this  once  for each installation of Julia: (@v1.x) pkg> add Pluto\n This might take a couple of minutes, so you can go get yourself a cup of tea! You can now close the terminal. Step 4: Use a modern browser: Mozilla Firefox or Google Chrome We need a modern browser to view Pluto notebooks with. Firefox and Chrome work best. Second time:  Running Pluto & opening a notebook Repeat the following steps whenever you want to work on a project or homework assignment. Step 1: Start Pluto Start the Julia REPL, like you did during the setup. In the REPL, type: julia> using Pluto\n\njulia> Pluto.run()\n The terminal tells us to go to  http://localhost:1234/  (or a similar URL). Let’s open Firefox or Chrome and type that into the address bar. If you’re curious about what a  Pluto notebook  looks like, have a look at the  sample notebooks . Samples 1, 2 and 6 may be useful for learning some basics of Julia programming. If you want to hear the story behind Pluto, have a look a the  JuliaCon presentation . If nothing happens in the browser the first time, close Julia and try again. And please let us know! Step 2a: Opening a notebook from the web This is the main menu - here you can create new notebooks, or open existing ones. Our homework assignments will always be based on a  template notebook , available in this GitHub repository. To start from a template notebook on the web, you can  paste the URL into the blue box  and press ENTER. For example, homework 0 is available  here . Go to this page, and on the top right, click on the button that says “Edit or run this notebook”. From these instructions, copy the notebook link, and paste it into the box. Press ENTER, and select OK in the confirmation box. The first thing we will want to do is to save the notebook somewhere on our own computer; see below. Step 2b: Opening an existing notebook file When you launch Pluto for the second time, your recent notebooks will appear in the main menu. You can click on them to continue where you left off. If you want to run a local notebook file that you have not opened before, then you need to enter its  full path  into the blue box in the main menu. More on finding full paths in step 3. Step 3: Saving a notebook We first need a folder to save our homework in. Open your file explorer and create one. Next, we need to know the  absolute path  of that folder. Here’s how you do that in  Windows ,  MacOS  and  Ubuntu . For example, you might have: C:\\Users\\fonsi\\Documents\\18S191_assignments\\  on Windows /Users/fonsi/Documents/18S191_assignments/  on MacOS /home/fonsi/Documents/18S191_assignments/  on Ubuntu Now that we know the absolute path, go back to your Pluto notebook, and at the top of the page, click on  “Save notebook…” . This is where you type the  new path+filename for your notebook : Click  Choose . Step 4: Sharing a notebook After working on your notebook (your code is autosaved when you run it), you will find your notebook file in the folder we created in step 3. This the file that you can share with others, or submit as your homework assignment to Canvas. \nconst run = f => f();\nrun(async () => {\nconst versions = await (await fetch(`https://julialang-s3.julialang.org/bin/versions.json`)).json()\nconst version_names = Object.keys(versions).sort().reverse()\nconst stable = version_names.find(v => versions[v].stable)\nconsole.log({stable})\nconst pkg_stable = /\\d+\\.\\d+/.exec(stable)[0]\ndocument.querySelectorAll(\"auto-julia-version\").forEach(el => {\nel.innerText = el.getAttribute(\"short\") == null ? stable : pkg_stable\n})\n});"},{"url":"logistics/","title":"Class logistics","tags":["welcome"],"text":"main a img {\n    width: 5rem;\n    margin: 1rem;\n}\n Course logistics MIT Students Only Suggestion : Bookmark this page for easy access to everything you need to follow this class! Counts as 6.0001 and 6.0002 credit, or can be taken in addition.  Counts as a course\n6 elective. Course materials will be published on this website on  Monday 1:00pm . Each week is a new  chapter , which includes: Asynchronous video lectures  (total 60 minutes) Interactive visualizations Exercises Live lectures On  Monday 1:00pm - 2:30pm , after the material is published, there will also be: Q&A on Discord Live overview lecture  (30 minutes) On  Wednesday 1:00pm 2:30pm (MIT students only) , you will meet with fellow students and your TA to: Review the lecture Work on problem sets in small groups or individually, with the opportunity to ask questions to your TA Start date: February 16, 2021 Discussion forum and homework submission Discord : discussion (we encourage you to hang out here during class!) MIT Only:  Canvas : Homework submissions, Piazza Link. If you’re a non-MIT student, don’t worry, the  homework has built-in answers checks , or you can find a partner to cross-grade homeworks via Discord. Evaluation The final grade is 80% problem sets, and 20% MITx  quick questions . Problem sets are released on Friday and due the folllwing Friday by 11:59pm EST. They have equal weight; your lowest score will be dropped. MITx  exercises ( quick questions ) are due before Wednesday (11:59pm), but are best done on Monday, during or right after the lectures."},{"url":"search/","title":"Search results","tags":[],"text":"window.init_search(); Search Results \nLoading..."},{"url":"semesters/","title":"Previous semesters","tags":["welcome"],"text":"This is the  Fall 2022  edition For previous versions of this class, see: Spring 2021 Fall 2020 Spring 2020 Fall 2019"},{"url":"sidebar data/","title":"sidebar data","tags":[],"text":"Dict \"main\" \"welcome\" collections \"welcome\" .pages, \"Module 1 Images, Transformations, Abstractions\" collections \"module1\" .pages, , "},{"url":"structure/","title":"structure","tags":[],"text":""},{"url":"week1/abstraction/","title":"Abstraction","tags":["lecture","module1"],"text":" A Pluto.jl notebook v0.19.12 frontmatter chapter 1 video \"https www.youtube.com watch?v 3zTO3LEY cM\" image \"\" section 2 order 2 title \"Abstraction\" layout \"layout.jlhtml\" youtube id \"3zTO3LEY cM\" description \"\" tags \"lecture\", \"module1\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end PlutoUI.TableOfContents aside true md\"\"\" Intializing packages When running this notebook for the first time, this could take up to 15 minutes. Hang in there \"\"\" begin import ImageMagick using PlutoUI using Images end md\" Introduction The goal of this section is to introduce you to the notion of abstraction. You can think of abstraction as an opposite to specialization. We will illustrate this by looking at the following example. What is one ? Before we get lost talking about the foundations of number theory, I will present you with a few examples that represent one to me. \" one 1, 1.0, \"one\", 1 1, oneimage, 1 0 0 1 , corgi, md\"Each of the items in this list is a specific, or specialized representation of one 1. as an integer 1. as a float 1. as a string 1. as a rational number 1. as a cute picture 1. as an 2x2 identity matrix 1. as a singular dog Of course, these are just a few examples of one . People have been representing one for ages in different langauges, scripts, artistic expression, etc. The difference between these ones to me is clear. In fact, I just articulated it to you. Now, let's turn to how a computer sees one differently based on what I type. \" computer ones typeof. one md\"So to a computer, all of these are different types.\" md\" What is a collection of one s? Now, I want to make a collection of ones for some reason. Below is a way for you to experiment building this collection with different one s. As you do this experiment, I want you to look at what stays in the same in the Julia output, and what doesn't.\" begin one keys \"1\", \"1.0\", \"one\", \"1 1\", \"Cute One\", \"2x2 Identity\", \"One Corgi\" selections one keys . one keys lookup element Dict one keys . one md\" bind element key Select selections \" end your chosen one element lookup element element key its type typeof element a 3x4 array of this one. array fill element,3,4 md\"\"\" Before we even look at the output, I am amazed that this code even ran. Are you telling me that the computer doesn't care which one I am using in my array? Yes That's exactly what abstraction is. By stepping back, we can now think and operate at a level that doesn't care about which specific one I am using. This is what we mean by abstraction is the opposite of specialization . The information that Julia gives back is quite informative. Here is an example of the first line of the output for a few different types ``` array 3x4 Array Int64, 2 array 3x4 Array Float64, 2 array 3x4 Array Rational Int64 , 2 ``` Notice that for all of these, we have the same `3x4 Array , 2 `. \"\"\" md\"\"\" First Taste of Abstraction Now, I want to do something to a collection of ones, that doesn't care about which one I'm using. So I'm going to write a function that takes in my collection, and add a corgi whereever I desire. \"\"\" function insert new, A, i, j B copy A B i,j new return B end begin A fill 0, 3, 4 md\"\"\" bind i Slider 1 size A,1 , show value true bind j Slider 1 size A,2 , show value true \"\"\" end begin one image array fill oneimage,3,4 insert corgi, one image array, i, j end begin one number array fill 1,3,4 insert 5, one number array, i, j end md\"This is still amazing. I wrote one function that just cares about how to insert an object into an array, without knowing anything about what's inside, and it worked for two completely different arrays, collections of ones of any kind .\" md\" Conclusion The key idea here is that a computer language should allow you to do operations that make sense. Often times, an operation can make sense for many different objects. So we can abstract away the specifics of the object in our implementation. It should let you step back from there. \" md\"\"\" Appendix \"\"\" begin oneimage load download \"https gallery.yopriceville.com var albums Free Clipart Pictures Decorative Numbers Cute Number One PNG Clipart Image.png?m 1437447301\" corgi load download \"https i.barkpost.com wp content uploads 2015 01 corgi2.jpg?q 70&fit crop&crop entropy&w 808&h 500\" nothing end "},{"url":"week1/hw1/","title":"hw1","tags":[],"text":" A Pluto.jl notebook v0.19.12 using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end md\"\"\" Submission by student.name student.kerberos id mit.edu \"\"\" md\"\"\" Homework 1 images and arrays `18.S191`, Spring 2021 `Due Date` Friday Feb 26, 2021 at 11 59pm EST This notebook contains built in, live answer checks In some exercises you will see a coloured box, which runs a test case on your code, and provides feedback based on the result. Simply edit the code, run it, and the check runs again. For MIT students there will also be some additional secret test cases that will be run as part of the grading process, and we will look at your notebook and write comments. Feel free to ask questions \"\"\" edit the code below to set your name and kerberos ID i.e. email without mit.edu student name \"Jazzy Doe\", kerberos id \"jazz\" press the ▶ button in the bottom right of this cell to run your edits or use Shift Enter you might need to wait until all other cells in this notebook have completed running. scroll down the page to see what's up md\"\"\" Intializing packages When running this notebook for the first time, this could take up to 15 minutes. Hang in there \"\"\" begin import ImageMagick using Images using PlutoUI using HypertextLiteral end bigbreak md\"\"\" Exercise 1 Manipulating vectors 1D images A `Vector` is a 1D array. We can think of that as a 1D image. \"\"\" example vector 0.5, 0.4, 0.3, 0.2, 0.1, 0.0, 0.7, 0.0, 0.7, 0.9 colored line example vector md\"\"\" html\" br \" Exerise 1.1 👉 Make a random vector `random vect` of length 10 using the `rand` function. \"\"\" random vect missing replace `missing` with your code colored line random vect if isdefined random vect not defined random vect elseif ismissing random vect still missing elseif random vect isa Vector keep working md\"`random vect` should be a `Vector`.\" elseif eltype random vect Float64 almost md\"\"\" You generated a vector of random integers. For the remaining exercises, we want a vector of `Float64` numbers. The optional first argument to `rand` specifies the type of elements to generate. For example `rand Bool, 10 ` generates 10 values that are either `true` or `false`. Try it \"\"\" elseif length random vect 10 keep working md\"`random vect` does not have the correct size.\" elseif length Set random vect 10 keep working md\"`random vect` is not 'random enough'\" else correct md\"Well done You can run your code again to generate a new vector \" end md\"\"\" You can find out more about any function like `rand` by clicking on the Live Docs in the bottom right of this Pluto window, and typing a function name in the top. image https user images.githubusercontent.com 6933510 107848812 c934df80 6df6 11eb 8a32 663d802f5d11.png image https user images.githubusercontent.com 6933510 107848846 0f8a3e80 6df7 11eb 818a 7271ecb9e127.png We recommend that you leave the window open while you work on Julia code. It will continually look up documentation for anything you type Help, I don't see the Live Docs Try the following 🙋 Are you viewing a static preview? The Live Docs only work if you run the notebook. If you are reading this on our course website, then click the button in the top right to run the notebook. 🙋 Is your screen too small? Try resizing your window or zooming out. \"\"\" | hint begin colored line x Vector hcat Gray. Float64. x ' colored line x Any nothing end md\" Exerise 1.2 👉 Make a function `my sum` using a `for` loop, which computes the total of a vector of numbers.\" function my sum xs your code here return missing end my sum 1,2,3 if isdefined my sum not defined my sum else let result my sum 1,2,3 if ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result 6 keep working else correct end end end hint md\"\"\"Check out this page for a refresher on basic Julia syntax Basic Julia Syntax https computationalthinking.mit.edu Spring21 basic syntax \"\"\" md\" Exerise 1.3 👉 Use your `my sum` function to write a function `mean`, which computes the mean average of a vector of numbers.\" function mean xs your code here return missing end mean 1, 2, 3 if isdefined mean not defined mean else let result mean 1,2,3 if ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result 2 keep working else correct end end end md\"👉 Define `m` to be the mean of `random vect`.\" m missing replace `missing` with your code if isdefined m not defined m elseif ismissing m still missing elseif m isa Number keep working md\"`m` should be a number.\" elseif m mean random vect keep working else correct end md\"\"\" Exerise 1.4 👉 Write a function `demean`, which takes a vector `xs` and subtracts the mean from each value in `xs`. Use your `mean` function \"\"\" md\"\"\" Note about mutation There are two ways to think about this exercise, you could modify the original vector, or you can create a new vector . We often prefer the second version, so that the original data is preserved. We generally only use code of the first variant in the most performance sensitive parts of a program, as it requires more care to write and use correctly. Be careful not to get carried away in optimizing code , especially when learning a new language There is a convention among Julians that functions that modify their argument have a ` ` in their name. For example, `sort x ` returns a sorted copy of `x`, while `sort x ` modifies `x` to be sorted. Tips for writing non mutating code 1. Rewriting an existing mutating function to be non mutating can feel like a 'tedious' and 'inefficient' process. Often, instead of trying to rewrite a mutating function, it's best to take a step back and try to think of your problem as constructing something new . Instead of a `for` loop, it might make more sense to use descriptive primitives like broadcasting with the dot syntax https docs.julialang.org en v1 manual functions man vectorized also for math operators https docs.julialang.org en v1 manual mathematical operations man dot operators , and map and filter https www.youtube.com watch?v O HBDZMLrM . 2. If a mutating algorithm makes the most sense for your problem, then you can first use `copy` to create a copy of an array, and then modify that copy. We will cover this topic more in the later exercises \"\"\" function demean xs your code here return missing end test vect let feel free to change your test case here to create 1.0, 1.5, 8.5 this cell is a bit funky to deal with a common pitfall from last year it regenerates the vector if you accidentally wrote a mutating function don't worry about how it works for this exercise demean to create end md\"To verify our function, let's check that the mean of the `demean test vect ` is 0 Due to floating point round off error it may not be exactly 0. \" mean demeaned test vect demeaned test vect demean test vect if isdefined mean not defined mean else let input Float64 1,2,3 result demean input if input result almost md\"\"\" It looks like you modified `xs` inside the function. It is preferable to avoid mutation inside functions, because you might want to use the original data again. For example, applying `demean` to a dataset of sensor readings would modify the original data, and the rest of your analysis would be erroneous. \"\"\" elseif ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result isa AbstractVector || length result 3 keep working md\"Return a vector of the same size as `xs`.\" elseif abs sum result 3 1e 10 correct else keep working end end end md\"\"\" Exercise 1.5 👉 Generate a vector of 100 elements. Where the center 20 elements are set to `1`, and all other elements are `0`. \"\"\" function create bar your code here return missing end create bar colored line create bar hint md\"\"\" In Section 1.1 https computationalthinking.mit.edu Spring21 week1 , we drew a red square on top of the image Philip with a simple command... \"\"\" if isdefined create bar not defined create bar else let result create bar if ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result isa Vector || length result 100 keep working md\"The result should be a `Vector` with 100 elements.\" elseif result 1,50,100 0,1,0 keep working else correct end end end md\"\"\" bigbreak Exercise 2 Manipulating images In this exercise we will get familiar with matrices 2D arrays in Julia, by manipulating images. Recall that in Julia images are matrices of `RGB` color objects. Let's load a picture of Philip again. \"\"\" url \"https user images.githubusercontent.com 6933510 107239146 dcc3fd00 6a28 11eb 8c7b 41aaf6618935.png\" philip filename download url download to a local file. The filename is returned philip load philip filename md\" Hi there Philip \" philip head philip 470 800, 140 410 md\"\"\" Recall from Section 1.1 https computationalthinking.mit.edu Spring21 week1 that in Julia, an image is just a 2D array of color objects \"\"\" typeof philip md\"\"\" Every pixel i.e. element of the 2D array is of the `RGB` type \"\"\" philip pixel philip 100,100 typeof philip pixel md\"\"\" To get the values of its individual color channels, use the `r`, `g` and `b` attributes \"\"\" philip pixel.r, philip pixel.g, philip pixel.b md\"\"\" And to create an `RGB` object yourself \"\"\" RGB 0.1, 0.4, 0.7 md\"\"\" Exerise 2.1 👉 Write a function `get red` that takes a single pixel, and returns the value of its red channel. \"\"\" function get red pixel AbstractRGB your code here return missing end get red RGB 0.8, 0.1, 0.0 let result get red RGB 0.2, 0.3, 0.4 if ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result 0.2 correct else keep working end end md\"\"\" Exerise 2.2 👉 Write a function `get reds` note the extra `s` that accepts a 2D color array called `image`, and returns a 2D array with the red channel value of each pixel. The result should be a 2D array of numbers . Use your function `get red` from the previous exercise. \"\"\" function get reds image AbstractMatrix your code here return missing end get reds philip head let test RGB 0.2, 0, 0 RGB 0.6, 0, 0 result get reds test if ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result 0.2 0.6 correct else keep working end end md\"\"\" This exercise can be quite difficult if you use a `for` loop or list comprehension. Instead, you should use the dot syntax https docs.julialang.org en v1 manual functions man vectorized to apply a function element wise to an array. For example, this is how you get the square root of `3` ``` sqrt 3 ``` and this is how you get the square roots of 1, 2 and 3 ``` sqrt. 1, 2, 3 ``` \"\"\" | hint md\"\"\" Great By extracting the red channel value of each pixel, we get a 2D array of numbers. We went from an image 2D array of RGB colors to a matrix 2D array of numbers . Exerise 2.3 Let's try to visualize this matrix. Right now, it is displayed in text form, but because the image is quite large, most rows and columns don't fit on the screen. Instead, a better way to visualize it is to view a number matrix as an image . This is easier than you might think We just want to map each number to an `RGB` object, and the result will be a 2D array of `RGB` objects, which Julia will display as an image. First, let's define a function that turns a number into a color . \"\"\" function value as color x return RGB x, 0, 0 end value as color 0.0 , value as color 0.6 , value as color 1.0 md\"\"\" 👉 Use the functions `get reds` and `value as color` to visualize the red channel values of `philip head`. Tip Like in previous exercises, use broadcasting 'dot syntax' to apply a function element wise . Use the ➕ button at the bottom left of this cell to add more cells. \"\"\" md\"\"\" Exerise 2.4 👉 Write four more functions, `get green`, `get greens`, `get blue` and `get blues`, to be the equivalents of `get red` and `get reds`. Use the ➕ button at the bottom left of this cell to add new cells. \"\"\" md\"\"\" Exercise 2.5 👉 Write a function `mean color` that accepts an object called `image`. It should calculate the mean amounts of red, green and blue in the image and return the average color. Be sure to use functions from previous exercises \"\"\" function mean color image your code here return missing end mean color philip if isdefined mean color not defined mean color else let input reshape RGB 1.0, 1.0, 1.0 , RGB 1.0, 1.0, 0.0 , 2, 1 result mean color input shouldbe RGB 1.0, 1.0, 0.5 if ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result isa AbstractRGB keep working md\"You need to return a color , i.e. an object of type `RGB`. Use `RGB r, g, b ` to create a color with channel values `r`, `g` and `b`.\" elseif result shouldbe keep working else correct end end end md\"\"\" At the end of this homework, you can see all of your filters applied to your webcam image \"\"\" md\"\"\" bigbreak Exercise 3 More filters In the previous exercises, we learned how to use Julia's dot syntax to apply a function element wise to an array. In this exercise, we will use this to write more image filters, that you can then apply to your own webcam image Exercise 3.1 👉 Write a function `invert` that inverts a color, i.e. sends r, g, b to 1 r, 1 g, 1 b . \"\"\" function invert color AbstractRGB your code here return missing end let result invert RGB 1.0, 0.5, 0.25 I chose these values because they can be represented exactly by Float64 shouldbe RGB 0.0, 0.5, 0.75 if ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result isa AbstractRGB keep working md\"You need to return a color , i.e. an object of type `RGB`. Use `RGB r, g, b ` to create a color with channel values `r`, `g` and `b`.\" elseif result shouldbe keep working else correct end end md\"Let's invert some colors \" color black RGB 0.0, 0.0, 0.0 invert color black color red RGB 0.8, 0.1, 0.1 invert color red md\"👉 Can you invert the picture of Philip?\" philip inverted missing replace `missing` with your code md\"\"\" At the end of this homework, you can see all of your filters applied to your webcam image \"\"\" md\"\"\" Exercise 3.2 👉 Look up the documentation on the `floor` function. Use it to write a function `quantize x Number ` that takes in a value x which you can assume is between 0 and 1 and \"quantizes\" it into bins of width 0.1. For example, check that 0.267 gets mapped to 0.2. \"\"\" function quantize x Number your code here return missing end quantize 0.267 , quantize 0.91 if isdefined quantize not defined quantize else let result quantize .3 if ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result .3 if quantize 0.35 .3 almost md\"What should quantize `0.2` be?\" else keep working end else correct end end end md\"\"\" Intermezzo multiple methods In Julia, we often write multiple methods for the same function. When a function is called, the method is chosen based on the input arguments. Let's look at an example These are two methods to the same function, because they have the same name, but different input types \"\"\" function double x Number return x 2 end function double x Vector return x..., x... end md\"\"\" When we call the function `double`, Julia will decide which method to call based on the given input argument \"\"\" double 24 double 1,2,37 md\"\"\" We call this multiple dispatch , and it is one of Julia's key features. Throughout this course, you will see lots of real world application, and learn to use multiple dispatch to create flexible and readable abstractions \"\"\" md\"\"\" Exercise 3.3 👉 Write the second method of the function `quantize`, i.e. a new version of the function with the same name. This method will accept a color object called `color`, of the type `AbstractRGB`. Here, ` AbstractRGB` is a type annotation . This ensures that this version of the function will be chosen when passing in an object whose type is a subtype of the `AbstractRGB` abstract type. For example, both the `RGB` and `RGBX` types satisfy this. The method you write should return a new `RGB` object, in which each component r , g and b are quantized. Use your previous method for `quantize` \"\"\" function quantize color AbstractRGB your code here return missing end let result quantize RGB .297, .1, .0 if ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result isa AbstractRGB keep working md\"You need to return a color , i.e. an object of type `RGB`. Use `RGB r, g, b ` to create a color with channel values `r`, `g` and `b`.\" elseif result RGB 0.2, .1, .0 keep working else correct end end md\"\"\" Exercise 3.4 👉 Write a method `quantize image AbstractMatrix ` that quantizes an image by quantizing each pixel in the image. You may assume that the matrix is a matrix of color objects. \"\"\" function quantize image AbstractMatrix your code here return missing end md\"Let's apply your method \" quantize philip md\"\"\" Exercise 3.5 👉 Write a function `noisify x Number, s ` to add randomness of intensity s to a value x , i.e. to add a random value between s and s to x . If the result falls outside the range 0, 1 you should \"clamp\" it to that range. Julia has a built in `clamp` function, or you can write your own function. \"\"\" function noisify x Number, s your code here return missing end noisify 0.5, 0.1 edit this test case let result noisify 0.5, 0 if ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result 0.5 results noisify 0.9, 0.1 for in 1 1000 if 0.8 ≤ minimum results 0.81 && 0.99 ≤ maximum results ≤ 1 result noisify 5, 3 if result 1 correct else keep working md\"The result should be restricted to the range `` 0,1 ``.\" end else keep working end else keep working md\"What should `noisify 0.5, 0 ` be?\" correct end end hint md\"`rand ` generates a uniformly random floating point number between 0 and 1 .\" md\"\"\" 👉 Write the second method `noisify c AbstractRGB, s ` to add random noise of intensity s to each of the r, g, b values in a colour. Use your previous method for `noisify`. Remember that Julia chooses which method to use based on the input arguments. So to call the method from the previous exercise, the first argument should be a number. \"\"\" function noisify color AbstractRGB, s your code here return missing end md\"\"\" Noise strength \"\"\" bind color noise Slider 0 0.01 1, show value true original color red, with noise noisify color red, color noise md\"\"\" Note about array comprehension At this point, you already know of a few ways to make a new array based on one that already exists. 1. you can use a for loop to go through a array 1. you can use function broadcasting over a array 1. you can use array comprehension The third option you are about to see demonstrated below and following the following syntax ``` function to apply args for args in some iterable of your choice ``` This creates a new iterable that matches what you iterate through in the second part of the comprehension. Below is an example with `for` loops through two iterables that creates a 2 dimensional `Array`. \"\"\" noisify color red, strength for strength in 0 0.05 1, row in 1 10 ' md\"\"\" 👉 Write the third method `noisify image AbstractMatrix, s ` to noisify each pixel of an image. This function should be a single line \"\"\" function noisify image AbstractMatrix, s your code here return missing end md\"\"\" Exerise 3.6 Move the slider below to set the amount of noise applied to the image of Philip. \"\"\" bind philip noise Slider 0 0.01 1, show value true noisify philip head, philip noise if philip noise 1 md\"\"\" What's this? The noise intensity is `1.0`, but we can still recognise Philip in the picture... 👉 Modify the definition of the slider to go further than `1.0`. \"\"\" end md\"\"\" 👉 For which noise intensity does it become unrecognisable? You may need noise intensities larger than 1. Why? \"\"\" answer about noise intensity md\"\"\" The image is unrecognisable with intensity ... \"\"\" md\"\"\" bigbreak Camera input \"\"\" bind cam data camera input cam image process raw camera data cam data md\"\"\" Results \"\"\" mean color cam image invert. cam image quantize cam image noisify cam image, .5 invert. cam image quantize cam image noisify cam image, .5 custom filter cam image md\"\"\" bigbreak Write your own filter \"\"\" custom filter cam image function custom filter pixel AbstractRGB your code here return pixel end function custom filter image AbstractMatrix return custom filter. image end bigbreak if student.kerberos id \"jazz\" md\"\"\" danger \"Oops \" Before you submit , remember to fill in your name and kerberos ID at the top of this notebook \"\"\" end bigbreak md\" Function library Just some helper functions used in the notebook.\" hint text Markdown.MD Markdown.Admonition \"hint\", \"Hint\", text almost text Markdown.MD Markdown.Admonition \"warning\", \"Almost there \", text still missing text md\"Replace `missing` with your answer.\" Markdown.MD Markdown.Admonition \"warning\", \"Here we go \", text keep working text md\"The answer is not quite right.\" Markdown.MD Markdown.Admonition \"danger\", \"Keep working on it \", text yays md\"Fantastic \", md\"Splendid \", md\"Great \", md\"Yay ❤\", md\"Great 🎉\", md\"Well done \", md\"Keep it up \", md\"Good job \", md\"Awesome \", md\"You got the right answer \", md\"Let's move on to the next section.\" correct text rand yays Markdown.MD Markdown.Admonition \"correct\", \"Got it \", text not defined variable name Markdown.MD Markdown.Admonition \"danger\", \"Oopsie \", md\"Make sure that you define a variable called Markdown.Code string variable name \" todo text HTML \"\"\" div style \"background rgb 220, 200, 255 padding 2em border radius 1em \" h1 TODO h1 repr MIME\"text html\" , text div \"\"\" bigbreak html\" br br br br br \" function camera input max size 200, default url \"https i.imgur.com SUmi94P.png\" \"\"\" span class \"pl image waiting for permission\" style .pl image.popped out position fixed top 0 right 0 z index 5 .pl image video container width 250px .pl image video border radius 1rem 1rem 0 0 .pl image.waiting for permission video container display none .pl image prompt display none .pl image.waiting for permission prompt width 250px height 200px display grid place items center font family monospace font weight bold text decoration underline cursor pointer border 5px dashed rgba 0,0,0,.5 .pl image video display block .pl image .bar width inherit display flex z index 6 .pl image .bar top position absolute flex direction column .pl image .bar bottom background black border radius 0 0 1rem 1rem .pl image .bar button flex 0 0 auto background rgba 255,255,255,.8 border none width 2rem height 2rem border radius 100% cursor pointer z index 7 .pl image .bar button shutter width 3rem height 3rem margin 1.5rem auto .2rem auto .pl image video.takepicture animation pictureflash 200ms linear keyframes pictureflash 0% filter grayscale 1.0 contrast 2.0 100% filter grayscale 0.0 contrast 1.0 style div id \"video container\" div id \"top\" class \"bar\" button id \"stop\" title \"Stop video\" ✖ button button id \"pop out\" title \"Pop out pop in\" ⏏ button div video playsinline autoplay video div id \"bottom\" class \"bar\" button id \"shutter\" title \"Click to take a picture\" 📷 button div div div id \"prompt\" span Enable webcam span div script based on https github.com fonsp printi static by the same author const span currentScript.parentElement const video span.querySelector \"video\" const popout span.querySelector \"button pop out\" const stop span.querySelector \"button stop\" const shutter span.querySelector \"button shutter\" const prompt span.querySelector \".pl image prompt\" const maxsize max size const send source source, src width, src height const scale Math.min 1.0, maxsize src width, maxsize src height const width Math.floor src width scale const height Math.floor src height scale const canvas html` canvas width \\ width height \\ height ` const ctx canvas.getContext \"2d\" ctx.drawImage source, 0, 0, width, height span.value width width, height height, data ctx.getImageData 0, 0, width, height .data, span.dispatchEvent new CustomEvent \"input\" const clear camera window.stream.getTracks .forEach s s.stop video.srcObject null span.classList.add \"waiting for permission\" prompt.onclick navigator.mediaDevices.getUserMedia audio false, video facingMode \"environment\", , .then function stream stream.onend console.log window.stream stream video.srcObject stream window.cameraConnected true video.controls false video.play video.controls false span.classList.remove \"waiting for permission\" .catch function error console.log error stop.onclick clear camera popout.onclick span.classList.toggle \"popped out\" shutter.onclick const cl video.classList cl.remove \"takepicture\" void video.offsetHeight cl.add \"takepicture\" video.play video.controls false console.log video send source video, video.videoWidth, video.videoHeight document.addEventListener \"visibilitychange\", if document.visibilityState \"visible\" clear camera Set a default image const img html` img crossOrigin \"anonymous\" ` img.onload console.log \"helloo\" send source img, img.width, img.height img.src \" default url \" console.log img script span \"\"\" | HTML end function process raw camera data raw camera data the raw image data is a long byte array, we need to transform it into something more \"Julian\" something with more structure . The encoding of the raw byte stream is every 4 bytes is a single pixel every pixel has 4 values Red, Green, Blue, Alpha we ignore alpha for this notebook So to get the red values for each pixel, we take every 4th value, starting at the 1st reds flat UInt8. raw camera data \"data\" 1 4 end greens flat UInt8. raw camera data \"data\" 2 4 end blues flat UInt8. raw camera data \"data\" 3 4 end but these are still 1 dimensional arrays, nicknamed 'flat' arrays We will 'reshape' this into 2D arrays width raw camera data \"width\" height raw camera data \"height\" shuffle and flip to get it in the right shape reds reshape reds flat, width, height ' 255.0 greens reshape greens flat, width, height ' 255.0 blues reshape blues flat, width, height ' 255.0 we have our 2D array for each color Let's create a single 2D array, where each value contains the R, G and B value of that pixel RGB. reds, greens, blues end md\" homework 1, version 9 \" "},{"url":"week1/images/","title":"Images as Data and Arrays","tags":["lecture","module1"],"text":" A Pluto.jl notebook v0.19.12 frontmatter chapter 1 video \"https www.youtube.com watch?v 3zTO3LEY cM\" image \"https user images.githubusercontent.com 6933510 136196634 2294d0a7 e79a 40d0 bbb8 81da70f4d398.png\" section 1 order 1 title \"Images as Data and Arrays\" layout \"layout.jlhtml\" youtube id \"3zTO3LEY cM\" description \"\" tags \"lecture\", \"module1\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end PlutoUI.TableOfContents aside true md\"\"\" Intializing packages When running this notebook for the first time, this could take up to 15 minutes. Hang in there \"\"\" begin using Colors, ColorVectorSpace, ImageShow, FileIO, ImageIO using PlutoUI using HypertextLiteral end md\"\"\" Images as examples of data all around us Welcome to the Computational Thinking using Julia for Real World Problems, at MIT in Spring 2021 The aim of this course is to bring together concepts from computer science and applied math with coding in the modern Julia language , and to see how to apply these techniques to study interesting applications and of course to have fun . We would be pleased if students who have been interested in computer science now become interested in computational science and those interested in scientific applications learn computer science they may not see elsewhere. ... and for all students, we wish to share the value of the Julia language as the best of both worlds. \"\"\" md\"\"\" Alan's Essay Are all programming languages the same? Superficially, many programming languages are very similar. \"Showoffs\" will compare functional programming vs imperative programming. Others will compare compiled languages vs dynamic languages. I will avoid such fancy terms in this little essay, preferring to provide this course's pedagogical viewpoint. Generally speaking beginning programmers should learn to create \"arrays\" write \"for loops\", \"conditionals\", \"comparisons\", express mathematical formulas, etc. So why Julia at a time when Python seems to be the language of teaching, and Java and C so prominent in the corporate world? As you might imagine, we believe Julia is special. Oh you will still have the nitty gritty of when to use a bracket and a comma. You might have strong opinions as to whether arrays should begin with 0 or 1 joke some say it's time to compromise and use ½. Getting past these irrelevant issues, you will begin to experience one by one what makes Julia so very special. For starters, a language that runs fast is more fun. We can have you try things that would just be so slow in other languages it would be boring. We also think you will start to notice how natural Julia is, how it feels like the mathematics, and how flexible it can be. Getting to see the true value of fancy terms like multiple dispatch, strong typing, generic programming, and composable software will take a little longer, but stick with us, and you too will see why Julia is so very special. \"\"\" md\"\"\" Computer Science and Computational Science Working Together \"\"\" md\"\"\" Applications of computer science in the real world use data , i.e. information that we can measure in some way. Data take many different forms, for example Numbers that change over time time series Stock price each second minute day Weekly number of infections Earth's global average temperature Video The view from a window of a self driving car A hurricane monitoring station Ultrasound e.g. prenatal Images Diseased versus healthy tissue in a medical scan Pictures of your favourite dog \"\"\" md\"\"\" Exercise Think of another two examples in each category. Can you think of other categories of data? \"\"\" md\"\"\" Computational science can be summed up by a simplified workflow \"\"\" md\"\"\" data ⟶ input ⟶ process ⟶ model ⟶ visualize ⟶ output \"\"\" md\"\"\" html\" br \" To use any data source, we need to input the data of interest, for example by downloading it, reading in the resulting file, and converting it into a form that we can use in the computer. Then we need to process it in some way to extract information of interest. We usually want to visualize the results, and we may want to output them, for example by saving to disc or putting them on a website. We often want to make a mathematical or computational model that can help us to understand and predict the behavior of the system of interest. In this course we aim to show how programming, computer science and applied math combine to help us with these goals. \"\"\" md\"\"\" Data Images as an example of data Let's start off by looking at images and how we can process them. Our goal is to process the data contained in an image in some way, which we will do by developing and coding certain algorithms . Here is the the Fall 2020 version of this lecture small variations by 3 Blue 1 Brown Grant Sanderson for your reference. \"\"\" html\"\"\" div notthestyle \"position relative right 0 top 0 z index 300 \" iframe src \"https www.youtube.com embed DGojI9xcCfg\" width 400 height 250 frameborder \"0\" allow \"accelerometer autoplay encrypted media gyroscope picture in picture\" allowfullscreen iframe div \"\"\" md\"\"\" If we open an image on our computer or the web and zoom in enough, we will see that it consists of many tiny squares, or pixels \"picture elements\" . Each pixel is a block of one single colour, and the pixels are arranged in a two dimensional square grid. You probably already know that these pixels are stored in a computer numerically perhaps in some form of RGB red,green,blue format. This is the computer's represenation of the data. Note that an image is already an approximation of the real world it is a two dimensional, discrete representation of a three dimensional reality. \"\"\" md\"\"\" Input and Visualize loading and viewing an Image in Julia \"\"\" md\"\"\" Let's use Julia to load actual images and play around with them. We can download images from the internet, your own file, or your own webcam. \"\"\" md\"\"\" Downloading an image from the internet or a local file We can use the `Images.jl` package to load an image file in three steps. \"\"\" md\"\"\" Step 1 from internet we specify the URL web address to download from html\" br \" note that Pluto places results before commands because some people believe output is more interesting than code. This takes some getting used to. \"\"\" url \"https user images.githubusercontent.com 6933510 107239146 dcc3fd00 6a28 11eb 8c7b 41aaf6618935.png\" md\"\"\" Step 2 Now we use the aptly named `download` function to download the image file to our own computer. Philip is Prof. Edelman's corgi. \"\"\" philip filename download url download to a local file. The filename is returned md\"\"\" Step 3 Using the `Images.jl` package loaded at the start of this notebook scroll up and take a look. we can load the file, which automatically converts it into usable data. We'll store the result in a variable. Remember the code is after the output. \"\"\" philip load philip filename md\" Hi there Philip \" md\"\"\" We see that the Pluto notebook has recognised that we created an object representing an image, and automatically displayed the resulting image of Philip, the cute Welsh Pembroke corgi and co professor of this course. Poor Philip will undergo quite a few transformations as we go along \"\"\" md\"\"\" Exercise change the url. Exercise download a file that is already on your own computer. \"\"\" md\"\"\" Capturing an Image from your own camera \"\"\" md\"\"\" Even more fun is to use your own webcam. Try pressing the enable button below. Then press the camera to capture an image. Kind of fun to keep pressing the button as you move your hand etc. \"\"\" bind webcam data1 camera input myface1 process raw camera data webcam data1 myface1 myface1 , end 1 1 myface1 end 1 1, myface1 end 1 1, end 1 1 md\"\"\" Inspecting your data \"\"\" md\"\"\" Image size \"\"\" md\"\"\" The first thing we might want to know is the size of the image \"\"\" philip size size philip md\"\"\" Julia returns a pair of two numbers. Comparing these with the picture of the image, we see that the first number is the height, i.e. the vertical number of pixels, and the second is the width. \"\"\" philip height philip size 1 philip width philip size 2 md\"\"\" Locations in an image Indexing Now suppose that we want to examine a piece of the image in more detail. We need some way of specifying which piece of the image we want. Thinking of the image as a grid of pixels, we need a way to tell the computer which pixel or group of pixels we want to refer to. Since the image is a two dimensional grid, we can use two integers whole numbers to give the coordinates of a single pixel. Specifying coordinates like this is called indexing think of the index of a book, which tells you on which page an idea is discussed. In Julia we use square brackets, ` ` and ` ` for indexing \"\"\" a pixel philip 200, 100 md\"\"\" We see that Julia knows to draw our pixel object for us a block of the relevant color. When we index into an image like this, the first number indicates the row in the image, starting from the top, and the second the column , starting from the left. In Julia, the first row and column are numbered starting from 1, not from 0 as in some other programming languages. \"\"\" md\"\"\" We can also use variables as indices... \"\"\" row i,col i philip row i, col i md\"\"\" ...and these variables can be controlled by sliders \"\"\" bind row i Slider 1 size philip 1 , show value true bind col i Slider 1 size philip 2 , show value true md\"\"\" Locations in an image Range indexing We saw that we can use the row number and column number to index a single pixel of our image. Next, we will use a range of numbers to index multiple rows or columns at once, returning a subarray \"\"\" philip 550 650, 1 philip width md\"\"\" Here, we use `a b` to mean \" all numbers between `a` and `b` \". For example \"\"\" collect 1 10 md\"\"\" You can also use a ` ` without start and end to mean \" every index \" \"\"\" philip 550 650, md\"\"\" Let's get a single row of pixels \"\"\" philip 550, philip head philip 470 800, 140 410 md\"\"\" Scroll in on Philip's nose Use the widgets below slide left and right sides . \"\"\" bind range rows RangeSlider 1 size philip head 1 bind range cols RangeSlider 1 size philip head 2 nose philip head range rows, range cols md\"\"\" Process Modifying an image Now that we have access to image data, we can start to process that data to extract information and or modify it in some way. We might want to detect what type of objects are in the image, say to detect whether a patient has a certain disease. To achieve a high level goal like this, we will need to perform mid level operations, such as detecting edges that separate different objects based on their color. And, in turn, to carry that out we will need to do low level operations like comparing colors of neighboring pixels and somehow deciding if they are \"different\". \"\"\" md\"\"\" Representing colors We can use indexing to modify a pixel's color. To do so, we need a way to specify a new color. Color turns out to be a complicated concept, having to do with the interaction of the physical properties of light with the physiological mechanisms and mental processes by which we detect it We will ignore this complexity by using a standard method of representing colours in the computer as an RGB triple , i.e. a triple of three numbers r, g, b , giving the amount of red, of green and of blue in a colour, respectively. These are numbers between 0 none and 1 full . The final colour that we perceive is the result of \"adding\" the corresponding amount of light of each colour the details are fascinating, but beyond the scope of this course \"\"\" md\"\"\" We can create a new color in Julia as follows \"\"\" RGB 1.0, 0.0, 0.0 begin md\"\"\" A pixel with bind test r Scrubbable 0 0.1 1 default 0.1 red, bind test g Scrubbable 0 0.1 1 default 0.5 green and bind test b Scrubbable 0 0.1 1 default 1.0 blue looks like \"\"\" end RGB test r, test g, test b md\"\"\" Exercise 2.5 👉 Write a function `invert` that inverts a color, i.e. sends r, g, b to 1 r, 1 g, 1 b . \"\"\" function invert color AbstractRGB return missing end md\"Let's invert some colors \" black RGB 0.0, 0.0, 0.0 invert black red RGB 0.8, 0.1, 0.1 invert red md\"Can you invert the picture of Philip?\" philip inverted missing md\"\"\" Modifying a pixel Let's start by seeing how to modify an image, e.g. in order to hide sensitive information. We do this by assigning a new value to the color of a pixel \"\"\" let temp copy philip head temp 100, 200 RGB 1.0, 0.0, 0.0 temp end md\"\"\" Groups of pixels We probably want to examine and modify several pixels at once. For example, we can extract a horizontal strip 1 pixel tall \"\"\" philip head 50, 50 100 md\"\"\" Here, Julia is showing the strip as a collection of rectangles in a row. \"\"\" md\"\"\" And then modify it \"\"\" let temp copy philip head temp 50, 50 100 . RGB 1.0, 0.0, 0.0 temp end md\"\"\" Similarly we can modify a whole rectangular block of pixels \"\"\" let temp copy philip head temp 50 100, 50 100 . RGB 1.0, 0.0, 0.0 temp end md\"\"\" Exercise 1.2 👉 Generate a vector of 100 zeros. Change the center 20 elements to 1. \"\"\" function create bar return missing end colored line create bar if isdefined create bar not defined create bar else let result create bar if ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result isa Vector || length result 100 keep working md\"The result should be a `Vector` with 100 elements.\" elseif result 1,50,100 0,1,0 keep working else correct end end end md\"\"\" Reducing the size of an image \"\"\" md\"\"\" Maybe we would also like to reduce the size of this image, since it's rather large. For example, we could take every 10th row and every 10th column and make a new image from the result \"\"\" reduced image philip 1 10 end, 1 10 end md\"\"\" Note that the resulting image doesn't look very good, since we seem to have lost too much detail. Exercise Think about what we might do to reduce the size of an image without losing so much detail. \"\"\" md\"\"\" Model Creating synthetic images Think about your favorite Pixar movie e.g. Monsters Inc. Movie frames are images that are generated from complicated mathematical models. Ray tracing which may be covered in this class is a method for making images feel realistic. \"\"\" md\"\"\" Output Saving an image to a file Finally, we want to be able to save our new creation to a file. To do so, you can right click on a displayed image, or you can write it to a file. Fill in a path below \"\"\" save \"reduced phil.png\", reduced image md\"\"\" html\" br \" \"\"\" md\"\"\" Computer science Arrays An image is a concrete example of a fundamental concept in computer science, namely an array . Just as an image is a rectangular grid, where each grid cell contains a single color, an array is a rectangular grid for storing data. Data is stored and retrieved using indexing, just as in the image examples each cell in the grid can store a single \"piece of data\" of a given type. Dimension of an array An array can be one dimensional, like the strip of pixels above, two dimensional, three dimensional, and so on. The dimension tells us the number of indices that we need to specify a unique location in the grid. The array object also needs to know the length of the data in each dimension. Names for different types of array One dimensional arrays are often called vectors or, in some other languages, \"lists\" and two dimensional arrays are matrices . Higher dimensional arrays are tensors . Arrays as data structures An array is an example of a data structure , i.e. a way of arranging data such that we can access it. A key theme in computer science is that of designing different data structures that represent data in different ways. Conceptually, we can think of an array as a block of data that has a position or location in space. This can be a useful way to arrange data if, for example, we want to represent the fact that values in nearby locations in array are somehow near to one another. Images are a good example of this neighbouring pixels often represent different pieces of the same object, for example the rug or floor, or Philip himself, in the photo. We thus expect neighbouring pixels to be of a similar color. On the other hand, if they are not, this is also useful information, since that may correspond to the edge of an object. \"\"\" md\"\"\" Julia constructing arrays Creating vectors and matrices Julia has strong support for arrays of any dimension. Vectors, or one dimensional arrays, are written using square brackets and commas \"\"\" 1, 20, \"hello\" RGB 1, 0, 0 , RGB 0, 1, 0 , RGB 0, 0, 1 md\"\"\" Matrices, or two dimensional arrays, also use square brackets, but with spaces and new lines instead of commas \"\"\" RGB 1, 0, 0 RGB 0, 1, 0 RGB 0, 0, 1 RGB 0.5, 0.5, 0.5 md\"\"\" Array comprehensions It's clear that if we want to create an array with more than a few elements, it will be very tedious to do so by hand like this. Rather, we want to automate the process of creating an array by following some pattern, for example to create a whole palette of colors Let's start with all the possible colors interpolating between black, `RGB 0, 0, 0 `, and red, `RGB 1, 0, 0 `. Since only one of the values is changing, we can represent this as a vector, i.e. a one dimensional array. A neat method to do this is an array comprehension . Again we use square brackets to create an array, but now we use a variable that varies over a given range values \"\"\" RGB x, 0, 0 for x in 0 0.1 1 md\"\"\" Here, `0 0.1 1` is a range the first and last numbers are the start and end values, and the middle number is the size of the step. \"\"\" md\"\"\" In a similar way we can create two dimensional matrices, by separating the two variables for each dimension with a comma `,` \"\"\" RGB i, j, 0 for i in 0 0.1 1, j in 0 0.1 1 md\"\"\" Joining matrices We often want to join vectors and matrices together. We can do so using an extension of the array creation syntax \"\"\" philip head philip head philip head reverse philip head, dims 2 reverse philip head, dims 1 rot180 philip head md\"\"\" Pluto Interactivity using sliders \"\"\" md\"\"\" Suppose we want to see the effect of changing the number of colors in our vector or matrix. We could, of course, do so by manually fiddling with the range. It would be nice if we could do so using a user interface , for example with a slider . Fortunately, the Pluto notebook allows us to do so \"\"\" md\"\"\" We can define a slider using \"\"\" bind number reds Slider 1 100, show value true md\"\"\" The `Slider` type is defined in the `PlutoUI.jl` package. \"\"\" md\"\"\" This creates a new variable called `number reds`, whose value is the value shown by the slider. When we move the slider, the value of the variable gets updated. Since Pluto is a reactive notebook, other cells which use the value of this variable will automatically be updated too \"\"\" md\"\"\" Let's use this to make a slider for our one dimensional collection of reds \"\"\" RGB red value number reds, 0, 0 for red value in 0 number reds md\"\"\" When you move the slider, you should see the number of red color patches change \"\"\" md\"\"\" What is going on here is that we are creating a vector in which `red value` takes each value in turn from the range from `0` up to the current value of `number reds`. If we change `number reds`, then we create a new vector with that new number of red patches. \"\"\" md\"\"\" Exercise Make three sliders with variables `r`, `g` and `b`. Then make a single color patch with the RGB color given by those values. \"\"\" md\"\"\" We can do the same to create different size matrices, by creating two sliders, one for reds and one for greens. Try it out \"\"\" bind webcam data camera input myface process raw camera data webcam data myface myface , end 1 1 myface end 1 1, myface end 1 1, end 1 1 md\"\"\" Summary \"\"\" md\"\"\" Let's summarize the main ideas from this notebook Images are arrays of colors We can inspect and modify arrays using indexing We can create arrays directly or using array comprehensions \"\"\" md\"\"\" \"\"\" bigbreak begin colored line x Vector Real Gray. Float64. hcat x ' colored line x Any nothing end hint text Markdown.MD Markdown.Admonition \"hint\", \"Hint\", text almost text Markdown.MD Markdown.Admonition \"warning\", \"Almost there \", text still missing text md\"Replace `missing` with your answer.\" Markdown.MD Markdown.Admonition \"warning\", \"Here we go \", text keep working text md\"The answer is not quite right.\" Markdown.MD Markdown.Admonition \"danger\", \"Keep working on it \", text yays md\"Great \", md\"Yay ❤\", md\"Great 🎉\", md\"Well done \", md\"Keep it up \", md\"Good job \", md\"Awesome \", md\"You got the right answer \", md\"Let's move on to the next section.\" correct text rand yays Markdown.MD Markdown.Admonition \"correct\", \"Got it \", text not defined variable name Markdown.MD Markdown.Admonition \"danger\", \"Oopsie \", md\"Make sure that you define a variable called Markdown.Code string variable name \" bigbreak html\" br br br br br \" function camera input max size 150, default url \"https i.imgur.com SUmi94P.png\" \"\"\" span class \"pl image waiting for permission\" style .pl image.popped out position fixed top 0 right 0 z index 5 .pl image video container width 250px .pl image video border radius 1rem 1rem 0 0 .pl image.waiting for permission video container display none .pl image prompt display none .pl image.waiting for permission prompt width 250px height 200px display grid place items center font family monospace font weight bold text decoration underline cursor pointer border 5px dashed rgba 0,0,0,.5 .pl image video display block .pl image .bar width inherit display flex z index 6 .pl image .bar top position absolute flex direction column .pl image .bar bottom background black border radius 0 0 1rem 1rem .pl image .bar button flex 0 0 auto background rgba 255,255,255,.8 border none width 2rem height 2rem border radius 100% cursor pointer z index 7 .pl image .bar button shutter width 3rem height 3rem margin 1.5rem auto .2rem auto .pl image video.takepicture animation pictureflash 200ms linear keyframes pictureflash 0% filter grayscale 1.0 contrast 2.0 100% filter grayscale 0.0 contrast 1.0 style div id \"video container\" div id \"top\" class \"bar\" button id \"stop\" title \"Stop video\" ✖ button button id \"pop out\" title \"Pop out pop in\" ⏏ button div video playsinline autoplay video div id \"bottom\" class \"bar\" button id \"shutter\" title \"Click to take a picture\" 📷 button div div div id \"prompt\" span Enable webcam span div script based on https github.com fonsp printi static by the same author const span currentScript.parentElement const video span.querySelector \"video\" const popout span.querySelector \"button pop out\" const stop span.querySelector \"button stop\" const shutter span.querySelector \"button shutter\" const prompt span.querySelector \".pl image prompt\" const maxsize max size const send source source, src width, src height const scale Math.min 1.0, maxsize src width, maxsize src height const width Math.floor src width scale const height Math.floor src height scale const canvas html` canvas width \\ width height \\ height ` const ctx canvas.getContext \"2d\" ctx.drawImage source, 0, 0, width, height span.value width width, height height, data ctx.getImageData 0, 0, width, height .data, span.dispatchEvent new CustomEvent \"input\" const clear camera window.stream.getTracks .forEach s s.stop video.srcObject null span.classList.add \"waiting for permission\" prompt.onclick navigator.mediaDevices.getUserMedia audio false, video facingMode \"environment\", , .then function stream stream.onend console.log window.stream stream video.srcObject stream window.cameraConnected true video.controls false video.play video.controls false span.classList.remove \"waiting for permission\" .catch function error console.log error stop.onclick clear camera popout.onclick span.classList.toggle \"popped out\" shutter.onclick const cl video.classList cl.remove \"takepicture\" void video.offsetHeight cl.add \"takepicture\" video.play video.controls false console.log video send source video, video.videoWidth, video.videoHeight document.addEventListener \"visibilitychange\", if document.visibilityState \"visible\" clear camera Set a default image const img html` img crossOrigin \"anonymous\" ` img.onload console.log \"helloo\" send source img, img.width, img.height img.src \" default url \" console.log img script span \"\"\" | HTML end function process raw camera data raw camera data the raw image data is a long byte array, we need to transform it into something more \"Julian\" something with more structure . The encoding of the raw byte stream is every 4 bytes is a single pixel every pixel has 4 values Red, Green, Blue, Alpha we ignore alpha for this notebook So to get the red values for each pixel, we take every 4th value, starting at the 1st reds flat UInt8. raw camera data \"data\" 1 4 end greens flat UInt8. raw camera data \"data\" 2 4 end blues flat UInt8. raw camera data \"data\" 3 4 end but these are still 1 dimensional arrays, nicknamed 'flat' arrays We will 'reshape' this into 2D arrays width raw camera data \"width\" height raw camera data \"height\" shuffle and flip to get it in the right shape reds reshape reds flat, width, height ' 255.0 greens reshape greens flat, width, height ' 255.0 blues reshape blues flat, width, height ' 255.0 we have our 2D array for each color Let's create a single 2D array, where each value contains the R, G and B value of that pixel RGB. reds, greens, blues end exercise css html\"\"\" style ct exercise h4 background 73789a color white padding 0rem 1.5rem font size 1.2rem border radius .6rem .6rem 0rem 0rem margin left .5rem display inline block ct exercise section background 31b3ff1a border radius 0rem 1rem 1rem 1rem padding .7rem margin .5rem margin top 0rem position relative ct exercise section before content \"👉\" display block position absolute left 0px top 0px background ffffff8c border radius 100% width 1rem height 1rem padding .5rem .5rem font size 1rem line height 1rem left 1rem ct answer display flex style \"\"\" exercise x, number \"\" htl \"\"\" ct exercise class \"exercise\" h4 Exercise span number span h4 section x section ct exercise \"\"\" quick question x, number, options, correct let name join rand 'a' 'z',16 htl \"\"\" ct exercise class \"quick question\" h4 Quick Question span number span h4 section x ct answers map enumerate options do i, o htl \" ct answer input type radio name name id i o ct answer \" end ct answers section ct exercise \"\"\" end md\" Lecture 1, Spring 2021, version 0 \" "},{"url":"week2/hw2/","title":"hw2","tags":[],"text":" A Pluto.jl notebook v0.19.12 using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end md\" homework 2, version 2 \" md\"\"\" Submission by student.name student.kerberos id mit.edu \"\"\" md\"\"\" Homework 2 convolutions `18.S191`, Spring 2021 `Due Date` Friday Mar 5, 2021 at 11 59pm EST This notebook contains built in, live answer checks In some exercises you will see a coloured box, which runs a test case on your code, and provides feedback based on the result. Simply edit the code, run it, and the check runs again. For MIT students there will also be some additional secret test cases that will be run as part of the grading process, and we will look at your notebook and write comments. Feel free to ask questions \"\"\" edit the code below to set your name and kerberos ID i.e. email without mit.edu student name \"SOLUTIONS\", kerberos id \"SOLUTIONS\" press the ▶ button in the bottom right of this cell to run your edits or use Shift Enter you might need to wait until all other cells in this notebook have completed running. scroll down the page to see what's up md\" Let's create a package environment \" begin import ImageMagick using Images using PlutoUI using HypertextLiteral using OffsetArrays end bigbreak md\"\"\" Exercise 1 Convolutions in 1D As we have seen in the lectures, we can produce cool effects using the mathematical technique of convolutions . We input one image M and get a new image M' back. Conceptually we think of M as a matrix. In practice, in Julia it will be a `Matrix` of color objects, and we may need to take that into account. Ideally, however, we should write a generic function that will work for any type of data contained in the matrix. A convolution works on a small window of an image, i.e. a region centered around a given point i, j . We will suppose that the window is a square region with odd side length 2\\ell 1 , running from \\ell, \\ldots, 0, \\ldots, \\ell . The result of the convolution over a given window, centred at the point i, j is a single number this number is the value that we will use for M' i, j . Note that neighbouring windows overlap. To get started, in Exercise 1 we'll restrict ourselves to convolutions in 1D. So a window is just a 1D region from \\ell to \\ell . \"\"\" bigbreak md\"\"\" Exercise 1.1 Let's create a vector `v` of random numbers of length `n 100`. \"\"\" n 60 v rand n md\" Feel free to experiment with different values Let's use the function `colored line` to view this 1D number array as a 1D image. \" colored line v begin colored line x Vector hcat Gray. Float64. x ' colored line x Any nothing end md\"👉 Try changing `n` and `v` around. Notice that you can run the cell `v rand n ` again to regenerate new random values.\" md\"\"\" Exercise 1.2 We need to decide how to handle the boundary conditions , i.e. what happens if we try to access a position in the vector `v` beyond `1 n`. The simplest solution is to assume that v i is 0 outside the original vector however, this may lead to strange boundary effects. A better solution is to use the closest value that is inside the vector. Effectively we are extending the vector and copying the extreme values into the extended positions. Indeed, this is one way we could implement this these extra positions are called ghost cells . 👉 Write a function `extend v, i ` that checks whether the position i is inside `1 n`. If so, return the HTML \" br \" ``i``th component of `v` otherwise, return the nearest end value. \"\"\" function extend v AbstractVector, i return missing end md\" Some test cases \" extend 5,6,7 , 1 extend 5,6,7 , 8 extend 5,6,7 , 10 if isdefined extend not defined extend else let result extend 6,7 , 10 if ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result 6 || extend 6,7 ,10 7 keep working else correct end end end example vector 0.8, 0.2, 0.1, 0.7, 0.6, 0.4 colored line example vector md\" Extended with 0 \" colored line 0, 0, example vector..., 0, 0 md\" Extended with your `extend` function \" if extend v,1 missing missing else colored line extend example vector, i for i in 1 length example vector 2 end md\"\"\" Exercise 1.3 👉 Write or copy the `mean` function from Homework 1, which takes a vector and returns the mean. \"\"\" function mean v return missing end md\"\"\" 👉 Write a function `box blur v, l ` that blurs a vector `v` with a window of length `l` by averaging the elements within a window from \\ell to \\ell . This is called a box blur . Use your function `extend` to handle the boundaries correctly. Return a vector of the same size as `v`. \"\"\" function box blur v AbstractArray, l return missing end colored line box blur example vector, 1 let try test v rand n original copy test v box blur test v, 5 if test v original md\"\"\" danger \"Oopsie \" It looks like your function modifies `v`. Can you write it without doing so? Maybe you can use `copy`. \"\"\" end catch end end md\"\"\" Exercise 1.4 👉 Apply the box blur to your vector `v`. Show the original and the new vector by creating two cells that call `colored line`. Make the parameter \\ell interactive, and call it `l box` instead of `l` to avoid a naming conflict. \"\"\" hint md\"Have a look at the lecture notes to see examples of adding interactivity with a slider. You can read the Interactivity and the PlutoUI sample notebooks to learn more, you can find them in Pluto's main menu. Right click the Pluto logo in the top left Open in new tab .\" md\"\"\" Exercise 1.5 The box blur is a simple example of a convolution , i.e. a linear function of a window around each point, given by v' i \\sum m \\, v i m \\, k m , where k is a vector called a kernel . Again, we need to take care about what happens if v i m falls off the end of the vector. 👉 Write a function `convolve v, k ` that performs this convolution. You need to think of the vector k as being centred on the position i . So m in the above formula runs between \\ell and \\ell , where 2\\ell 1 is the length of the vector k . You will either need to do the necessary manipulation of indices by hand, or use the `OffsetArrays.jl` package. \"\"\" function convolve v AbstractVector, k return missing end md\"\"\" You can use the `÷` operator you type `\\div TAB ` to get it with autocomplete to do integer division . For example ```julia 8 6 ≈ 1.3333333 a floating point number 8 6 4 3 a fraction 8 ÷ 6 1 an integer ``` \"\"\" | hint colored line test convolution test convolution let v 1, 10, 100, 1000, 10000 k 1, 1, 0 convolve v, k end md\" Edit the cell above, or create a new cell with your own test cases \" if isdefined convolve not defined convolve else let x 1, 10, 100 result convolve x, 0, 1, 1 shouldbe 11, 110, 200 shouldbe2 2, 11, 110 if ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result isa AbstractVector keep working md\"The returned object is not a `Vector`.\" elseif size result size x keep working md\"The returned vector has the wrong dimensions.\" elseif result shouldbe && result shouldbe2 keep working else correct end end end md\"\"\" Exercise 1.6 👉 Define a function `box blur kernel l ` which returns a kernel i.e. a vector which, when used as the kernel in `convolve`, will reproduce a box blur of length `l`. \"\"\" function box blur kernel l return missing end bind box kernel l Slider 1 5 box blur kernel test box blur kernel box kernel l md\"\"\" Let's apply your kernel to our test vector `v` first cell , and compare the result to our previous box blur function second cell . The two should be identical. \"\"\" let result convolve v, box blur kernel test colored line result end let result box blur v, box kernel l colored line result end if isdefined box blur kernel not defined box blur kernel else let result box blur kernel 2 if ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result isa AbstractVector keep working md\"The returned object is not a `Vector`.\" elseif size result 5, hint md\"The returned vector has the wrong dimensions.\" else x 1, 10, 100 result1 box blur x, 2 result2 convolve x, result if result1 ≈ result2 correct else keep working end end end end md\"\"\" Exercise 1.7 👉 Write a function `gaussian kernel`. The definition of a Gaussian in 1D is G x \\frac 1 \\sqrt 2\\pi \\sigma^2 \\exp \\left \\frac x^2 2\\sigma^2 \\right , or as a Julia function \"\"\" md\"\"\" Write a function `gauss` that takes `σ` as a keyword argument and implements this function. \"\"\" gauss x Real σ 1 1 sqrt 2π σ^2 exp x^2 2 σ^2 md\"\"\" We need to sample i.e. evaluate this at each pixel in an interval of length 2n 1 , and then normalize so that the sum of the resulting kernel is 1. \"\"\" function gaussian kernel 1D n σ 1 return missing end let result gaussian kernel 1D 5 if ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result isa AbstractVector keep working md\"The returned object is not a `Vector`.\" elseif size result 11, hint md\"The returned vector has the wrong dimensions.\" elseif sum result ≈ 1.0 keep working md\"You need to normalize the result.\" elseif gaussian kernel 1D 3 σ 1 gaussian kernel 1D 3 σ 2 keep working md\"Use the keyword argument `σ` in your function.\" else correct end end colored line gaussian kernel 1D 4 σ 1 md\"\"\" You can edit the cell above to test your kernel function Let's try applying it in a convolution. \"\"\" bind gaussian kernel size 1D Slider 0 6 colored line test gauss 1D a test gauss 1D a let k gaussian kernel 1D gaussian kernel size 1D if k missing convolve v, k end end colored line test gauss 1D b test gauss 1D b let v create bar k gaussian kernel 1D gaussian kernel size 1D if k missing convolve v, k end end function create bar x zeros 100 x 41 60 . 1 x end bigbreak md\"\"\" Exercise 2 Convolutions in 2D Now let's move to 2D images. The convolution is then given by a kernel matrix K M' i, j \\sum k, l \\, M i k, j l \\, K k, l , where the sum is over the possible values of k and l in the window. Again we think of the window as being centered at i, j . A common notation for this operation is \\star ```math M' M \\star K ``` \"\"\" md\"\"\" Exercise 2.1 👉 Write a new method for `extend` that takes a matrix `M` and indices `i` and `j`, and returns the closest element of the matrix. \"\"\" function extend M AbstractMatrix, i, j return missing end hint md\"`num rows, num columns size M `\" md\" Let's test it \" small image Gray. rand 5,5 md\" Extended with `0` \" get small image, i, j , Gray 0 for i,j in Iterators.product 1 7, 1 7 md\" Extended with your `extend` function \" extend small image, i, j for i,j in Iterators.product 1 7, 1 7 if isdefined extend not defined extend else let input 42 37 1 0 result extend input, 2, 2 if ismissing result still missing elseif isnothing result keep working md\"Did you forget to write `return`?\" elseif result 42 || extend input, 1, 3 37 keep working else correct end end end md\"\"\" Extending Philip \"\"\" url \"https user images.githubusercontent.com 6933510 107239146 dcc3fd00 6a28 11eb 8c7b 41aaf6618935.png\" philip filename download url download to a local file. The filename is returned philip load philip filename philip head philip 470 800, 140 410 extend philip head, i, j for i in 50 size philip head,1 51, j in 50 size philip head,2 51 md\"\"\" Exercise 2.2 👉 Implement a new method `convolve M, K ` that applies a convolution to a 2D array `M`, using a 2D kernel `K`. Use your new method `extend` from the last exercise. \"\"\" function convolve M AbstractMatrix, K AbstractMatrix return missing end hint md\"`num rows, num columns size K `\" md\" Let's test it out 🎃 \" test image with border get small image, i, j , Gray 0 for i,j in Iterators.product 1 7, 1 7 K test 0 0 0 1 2 0 1 2 0 0 0 convolve test image with border, K test md\" Edit `K test` to create your own test case \" convolve philip head, K test md\"\"\" You can create all sorts of effects by choosing the kernel in a smart way. Today, we will implement two special kernels, to produce a Gaussian blur and a Sobel edge detection filter. Make sure that you have watched the lecture about convolutions \"\"\" md\"\"\" Exercise 2.3 The 2D Gaussian kernel will be defined using G x,y \\frac 1 2\\pi \\sigma^2 \\exp\\left \\frac x^2 y^2 2\\sigma^2 \\right How can you express this mathematically using the 1D Gaussian function that we defined before? \"\"\" gauss x, y σ 1 2π σ^2 gauss x σ σ gauss y σ σ md\"\"\" 👉 Write a function that applies a Gaussian blur to an image. Use your previous functions, and add cells to write helper functions as needed \"\"\" function with gaussian blur image σ 3, l 5 return missing end hint md\"Can we just copy the 1D code? What is different in 2D?\" md\" Let's make it interactive. 💫 \" bind gauss raw camera data camera input max size 100 with gaussian blur gauss camera image σ face σ, l face l bind face σ Slider 0.1 0.1 10 show value true bind face l Slider 0 20 show value true md\"\"\" When you set `face σ` to a low number e.g. `2.0` , what effect does `face l` have? And vice versa? \"\"\" gauss camera image process raw camera data gauss raw camera data md\"\"\" Exercise 2.4 👉 Create a Sobel edge detection filter . Here, we will need to create two filters that separately detect edges in the horizontal and vertical directions, given by the following kernels ```math G x \\begin bmatrix 1 & 0 & 1 \\\\ 2 & 0 & 2 \\\\ 1 & 0 & 1 \\\\ \\end bmatrix \\qquad G y \\begin bmatrix 1 & 2 & 1 \\\\ 0 & 0 & 0 \\\\ 1 & 2 & 1 \\\\ \\end bmatrix ``` We can think of these filterrs as derivatives in the x and y directions, as we discussed in lectures. Then we combine them by finding the magnitude of the gradient in the sense of multivariate calculus by defining G \\text total \\sqrt G x^2 G y^2 , where each operation applies element wise on the matrices. Use your previous functions, and add cells to write helper functions as needed \"\"\" function with sobel edge detect image return missing end bind sobel raw camera data camera input max size 200 Gray. with sobel edge detect sobel camera image sobel camera image Gray. process raw camera data sobel raw camera data bigbreak if student.kerberos id \"jazz\" md\"\"\" danger \"Oops \" Before you submit , remember to fill in your name and kerberos ID at the top of this notebook \"\"\" end bigbreak md\" Function library Just some helper functions used in the notebook.\" hint text Markdown.MD Markdown.Admonition \"hint\", \"Hint\", text almost text Markdown.MD Markdown.Admonition \"warning\", \"Almost there \", text still missing text md\"Replace `missing` with your answer.\" Markdown.MD Markdown.Admonition \"warning\", \"Here we go \", text keep working text md\"The answer is not quite right.\" Markdown.MD Markdown.Admonition \"danger\", \"Keep working on it \", text yays md\"Great \", md\"Yay ❤\", md\"Great 🎉\", md\"Well done \", md\"Keep it up \", md\"Good job \", md\"Awesome \", md\"You got the right answer \", md\"Let's move on to the next exercise.\" correct text rand yays Markdown.MD Markdown.Admonition \"correct\", \"Got it \", text not defined variable name Markdown.MD Markdown.Admonition \"danger\", \"Oopsie \", md\"Make sure that you define a variable called Markdown.Code string variable name \" bigbreak html\" br br br br br \" function camera input max size 200, default url \"https i.imgur.com SUmi94P.png\" \"\"\" span class \"pl image waiting for permission\" style .pl image.popped out position fixed top 0 right 0 z index 5 .pl image video container width 250px .pl image video border radius 1rem 1rem 0 0 .pl image.waiting for permission video container display none .pl image prompt display none .pl image.waiting for permission prompt width 250px height 200px display grid place items center font family monospace font weight bold text decoration underline cursor pointer border 5px dashed rgba 0,0,0,.5 .pl image video display block .pl image .bar width inherit display flex z index 6 .pl image .bar top position absolute flex direction column .pl image .bar bottom background black border radius 0 0 1rem 1rem .pl image .bar button flex 0 0 auto background rgba 255,255,255,.8 border none width 2rem height 2rem border radius 100% cursor pointer z index 7 .pl image .bar button shutter width 3rem height 3rem margin 1.5rem auto .2rem auto .pl image video.takepicture animation pictureflash 200ms linear keyframes pictureflash 0% filter grayscale 1.0 contrast 2.0 100% filter grayscale 0.0 contrast 1.0 style div id \"video container\" div id \"top\" class \"bar\" button id \"stop\" title \"Stop video\" ✖ button button id \"pop out\" title \"Pop out pop in\" ⏏ button div video playsinline autoplay video div id \"bottom\" class \"bar\" button id \"shutter\" title \"Click to take a picture\" 📷 button div div div id \"prompt\" span Enable webcam span div script based on https github.com fonsp printi static by the same author const span currentScript.parentElement const video span.querySelector \"video\" const popout span.querySelector \"button pop out\" const stop span.querySelector \"button stop\" const shutter span.querySelector \"button shutter\" const prompt span.querySelector \".pl image prompt\" const maxsize max size const send source source, src width, src height const scale Math.min 1.0, maxsize src width, maxsize src height const width Math.floor src width scale const height Math.floor src height scale const canvas html` canvas width \\ width height \\ height ` const ctx canvas.getContext \"2d\" ctx.drawImage source, 0, 0, width, height span.value width width, height height, data ctx.getImageData 0, 0, width, height .data, span.dispatchEvent new CustomEvent \"input\" const clear camera window.stream.getTracks .forEach s s.stop video.srcObject null span.classList.add \"waiting for permission\" prompt.onclick navigator.mediaDevices.getUserMedia audio false, video facingMode \"environment\", , .then function stream stream.onend console.log window.stream stream video.srcObject stream window.cameraConnected true video.controls false video.play video.controls false span.classList.remove \"waiting for permission\" .catch function error console.log error stop.onclick clear camera popout.onclick span.classList.toggle \"popped out\" shutter.onclick const cl video.classList cl.remove \"takepicture\" void video.offsetHeight cl.add \"takepicture\" video.play video.controls false console.log video send source video, video.videoWidth, video.videoHeight document.addEventListener \"visibilitychange\", if document.visibilityState \"visible\" clear camera Set a default image const img html` img crossOrigin \"anonymous\" ` img.onload console.log \"helloo\" send source img, img.width, img.height img.src \" default url \" console.log img script span \"\"\" | HTML end function process raw camera data raw camera data the raw image data is a long byte array, we need to transform it into something more \"Julian\" something with more structure . The encoding of the raw byte stream is every 4 bytes is a single pixel every pixel has 4 values Red, Green, Blue, Alpha we ignore alpha for this notebook So to get the red values for each pixel, we take every 4th value, starting at the 1st reds flat UInt8. raw camera data \"data\" 1 4 end greens flat UInt8. raw camera data \"data\" 2 4 end blues flat UInt8. raw camera data \"data\" 3 4 end but these are still 1 dimensional arrays, nicknamed 'flat' arrays We will 'reshape' this into 2D arrays width raw camera data \"width\" height raw camera data \"height\" shuffle and flip to get it in the right shape reds reshape reds flat, width, height ' 255.0 greens reshape greens flat, width, height ' 255.0 blues reshape blues flat, width, height ' 255.0 we have our 2D array for each color Let's create a single 2D array, where each value contains the R, G and B value of that pixel RGB. reds, greens, blues end "},{"url":"week2/linear_transformation/","title":"linear_transformation","tags":[],"text":" A Pluto.jl notebook v0.19.12 using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using Colors, ColorVectorSpace, ImageShow, FileIO, ImageIO using PlutoUI using HypertextLiteral using LinearAlgebra end md\"\"\" Choose an image bind img source Select img sources \"\"\" md\"Show grid lines bind show grid CheckBox default true \" if det A 0 RGB 1.0, 1.0, 1.0 else in x, in y invA out x, out y trygetpixel img, in x, in y end for out y in LinRange 2, 2, 300 , out x in LinRange 2, 2, 300 let range 2 .1 2 md\"\"\" a bind a Slider range default 1.0, show value true b bind b Slider range default 0.0, show value true c bind c Slider range default 0.0, show value true d bind d Slider range default 1.0, show value true Re run this cell to reset to identity transformation \"\"\" end A a b c d md\" Det A a d c b det A \" md\"\"\" Appendix \"\"\" det A det A if det A 0 invA inv A end img sources \"https user images.githubusercontent.com 6933510 108605549 fb28e180 73b4 11eb 8520 7e29db0cc965.png\" \"Corgis\", \"https user images.githubusercontent.com 6933510 108883855 39690f80 7606 11eb 8eb1 e595c6c8d829.png\" \"Arrows\", \"https images.squarespace cdn.com content v1 5cb62a904d546e33119fa495 1589302981165 HHQ2A4JI07C43294HVPD ke17ZwdGBToddI8pDm48kA7bHnZXCqgRu4g0 U7hbNpZw zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3 s 4yszcp2ryTI0HqTOaaUohrI8PISCdr 3EAHMyS8K84wLA7X0UZoBreocI4zSJRMe1GOxcKMshLAGzx4R3EDFOm1kBS fluffy corgi?format 2500w\" \"Alan\" img original load download img source typeof img original img if show grid with gridlines img original else img original end function trygetpixel img AbstractMatrix, x Float64, y Float64 rows, cols size img \"The linear map 1,1 ↦ 0,1 \" f t t 1.0 1.0 1.0 i floor Int, rows f y j floor Int, cols f x rows cols if 1 i ≤ rows && 1 j ≤ cols img i,j else zero eltype img end end function with gridlines img Array Any,2 n 8 sep i size img, 1 ÷ n sep j size img, 2 ÷ n result copy img stroke zero eltype img RGBA RGB 1,1,1 , 0.75 stroke RGBA 1, 1, 1, 0.75 result 1 sep i end, . stroke result , 1 sep j end . stroke a second time, to create a line 2 pixels wide result 2 sep i end, . stroke result , 2 sep j end . stroke return result end "},{"url":"week2/transformations_and_autodiff/","title":"Automatic Differentiation","tags":["lecture","module1"],"text":" A Pluto.jl notebook v0.19.12 frontmatter chapter 1 video \"https www.youtube.com watch?v AAREeuaKCic\" image \"https user images.githubusercontent.com 6933510 136196632 ad67cb84 a4c9 410e ab72 f4fcfc26f69a.png\" section 3 order 3 title \"Automatic Differentiation\" layout \"layout.jlhtml\" youtube id \"AAREeuaKCic\" description \"\" tags \"lecture\", \"module1\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end PlutoUI.TableOfContents aside true md\"\"\" Intializing packages When running this notebook for the first time, this could take up to 15 minutes. Hang in there \"\"\" begin using Colors, ColorVectorSpace, ImageShow, FileIO, ImageIO using PlutoUI using HypertextLiteral using LinearAlgebra using ForwardDiff Small patch to make images look more crisp https github.com JuliaImages ImageShow.jl pull 50 Base.showable MIME\"text html\", AbstractMatrix Colorant false end md\"\"\" Last time, recall we defined linear combinations of images. Remember we scaled an image by multiplying by a constant combined images by adding the colors in each pixel possibly saturating In general if we perform both of these operations, we get a linear combination. \"\"\" md\"\"\" 4.1 Functions in Math and Julia \"\"\" md\"\"\" 4.1.1 Univariate Functions \"\"\" md\"\"\" In high school you learned about univariate functions e.g. f₁ x x^2 f₂ x \\sin x f₃ x x^\\alpha In Julia, functions can be written in short form, anonymous form, or long form. \"\"\" short form f₁ x x^2 subscript unicode \\ 1 tab f₁ 5 anonymous form x sin x x sin x π 2 long form function f₃ x,α 3 default parameter return x^α the \"return\" is optional end f₃ 5 f₃ 5,2 md\"\"\" Keywords \"\"\" f₄ x α x^α f₄ 2, α 5 md\"\"\" See Julia's function documentation https docs.julialang.org en v1 manual functions for more. \"\"\" md\"\"\" 4.1.2 Automatic Differentiation of Univariates \"\"\" md\"\"\" Automatic differentiation is a key enabling technology for machine learning and so much of scientific computing. It derives the answer in a manner that is interestingly different from the symbolic differentiation of elementary calculus classes and the numerical differentiation of simple finite differences. See the video at the end of this lecture. \"\"\" ForwardDiff.derivative f₁, 5 ForwardDiff.derivative x f₃ x,3 , 5 md\"\"\" Notice the use of anonymous functions to fix the parameter α 3 \"\"\" md\"\"\" In case you have forgotten what a derivative is, we remind you with a simple finite difference approximation \"\"\" begin md\"\"\" bind e Slider 6 1, default 1, show value true \"\"\" end ϵ 10.0^e sin 1 ϵ sin 1 ϵ , cos 1 , ForwardDiff.derivative sin,1 md\"\"\" 4.1.3 Scalar Valued Multivariate Functions \"\"\" md\"\"\" Sometimes we are interested in scalar valued functions of more than 1 variable. This can be written in Julia as a function of many variables or a function of a vector. e.g. f 5 x 5\\sin x 1 x 2 2x 2 4x 3 \"\"\" begin f₅ v 5sin v 1 v 2 2 v 2 4v 3 f₅ x,y,z 5sin x y 2 y 4z end f₅ 1,2,3 , f₅ 1,2,3 md\"\"\" Better yet if you must write it the two ways you probably won't need to, but if you must , don't copy code , reuse code so if it changes in one place it changes everywhere. \"\"\" begin f₆ x,y,z 5sin x y 2 y 4z f₆ v f₆ v 1 ,v 2 ,v 3 end f₆ 1,2,3 , f₆ 1,2,3 md\"\"\" There's one other julia idea that is a trick to make vector code more readable. If you give a tuple argument, the function works directly on vectors but is defined with readable letters. \"\"\" f₇ x,y,z 5sin x y 2 y 4z more readable then 5sin v 1 v 2 2 v 2 4v 3 f₇ 1,2,3 this works with vector arguments, but not scalars f₇ 1,2,3 errros md\"\"\" You can see that the functions f 5 and f 6 has two julia methods, one with one variable, and one with three variables. \"\"\" methods f₅ md\"\"\" 4.1.4 Automatic Differentiation Scalar valued multivariate functions \"\"\" md\"\"\" In many applications, including machine learning, one needs to take derivatives of the function in every argument direction. This is known as the gradient . Automatic differentiation works again \"\"\" ForwardDiff.gradient f₅, 1,2,3 md\"\"\" Remember f 5 x 5\\sin x 1 x 2 2x 2 4x 3 \"\"\" md\"\"\" One can check numerically by adding a small change to each of the arguments.m \"\"\" begin ∂f₅∂x f₅ 1 ϵ, 2, 3 f₅ 1, 2, 3 ϵ ∂f₅∂y f₅ 1, 2 ϵ, 3 f₅ 1, 2, 3 ϵ ∂f₅∂z f₅ 1, 2, 3 ϵ f₅ 1, 2, 3 ϵ ∇f ∂f₅∂x , ∂f₅∂y, ∂f₅∂z end md\"\"\" Whether you are an expert at multivariable calculus, or you have never seen this before, I hope seeing it numerically makes the idea intuitive. \"\"\" md\"\"\" Important Remark In machine learning, and other optimization contexts, we want to minimize a scalar function of many parameters known as a \"loss function.\" Following the negative gradient is a standard technique for minimizing functions especially when there are many variables. When there are only a few variables, there are better techniques. \"\"\" md\"\"\" 4.1.5. Transformations Vector Valued Multivariate Functions \"\"\" md\"\"\" While scalar functions might technically be called a transformation, it is more common to use the term when both the input and output are multidimensional. \"\"\" md\"\"\" Let us consider a few functions that take in a vector of size 2 and returns a vector of size 2. \"\"\" begin idy x,y x,y lin1 x,y 2x 3y, 5x 4x scalex α x,y , α x, y scaley α x,y , x, α y rot θ x,y , cos θ x sin θ y, sin θ x cos θ y shear α x,y , x α y,y genlin a,b,c,d x,y , a x b y c x d y end rot π 2 4,5 md\"\"\" We bet you have noticed that these functions could all have been defined with matrices. Indeed the general case can be written \"\"\" a b c d x,y md\"\"\" or in math `` \\begin pmatrix a & b \\\\ c & d \\end pmatrix \\begin pmatrix x \\\\ y \\end pmatrix `` . \"\"\" md\"\"\" By contrast here are a few fun functions that can not be written as matrix times vector. What characterizes the matrix ones from the non matrix ones? \"\"\" begin function warp α x,y , begin r √ x^2 y^2 θ α r rot θ x,y end end rθ x norm x , atan x 2 ,x 1 maybe vectors are more readable here? xy r,θ r cos θ , r sin θ end md\"\"\" This may be a little fancy, but we see that warp is a rotation, but the rotation depends on the point where it is applied. \"\"\" begin warp₂ α,x,y rot α √ x^2 y^2 warp₂ α x,y , warp₂ α,x,y x,y end warp 1 5,6 warp₂ 1.0 5.0,6.0 md\"\"\" 4.1.6 Automatic Differentiation of Transformations \"\"\" ForwardDiff.jacobian warp 3.0 , 4,5 md\"\"\" What is this thing? \"\"\" begin ∂w∂x warp 3.0 4 ϵ, 5 warp 3.0 4,5 ϵ This is a vector, right? ∂w∂y warp 3.0 4, 5 ϵ warp 3.0 4,5 ϵ This too ∂w∂x ∂w∂y end md\"\"\" 4.2 But what is a transformation, really? You have very likely learned how to multiply matrices times vectors. I'll bet you think of a matrix as a table of numbers, and a vector as a column of numbers, and if you are well practiced, you know just when to multiply and just when to add. Congratulations, you now can do what computers excel at. \"\"\" md\"\"\" Matrices are often thought of as containers of numbers in a rectangular array, and hence one thinks of manipulating these tables like a spreadsheet, but actually the deeper meaning is that it is a transformation. \"\"\" md\"\"\" Choose an image bind img source Select img sources \"\"\" md\"\"\" α bind α Slider .1 .1 3, show value true \"\"\" let range 1.5 .1 1.5 md\"\"\" This is a \"scrubbable matrix\" click on the number and drag to change. `` `` bind a Scrubbable range default 1.0 bind b Scrubbable range default 0.0 `` `` `` `` bind c Scrubbable range default 0.0 bind d Scrubbable range default 1.0 `` `` Re run this cell to reset to identity transformation \"\"\" end T shear 1 Pick a transformation T genlin a,b,c,d md\"\"\" center zoom bind z Slider .1 .1 3, show value true, default 1 \"\"\" md\"\"\" top left zoom bind f Slider .1 1 3, show value true, default 1 \"\"\" md\"Show grid lines bind show grid CheckBox default true \" if det A 0 RGB 1.0, 1.0, 1.0 else in x, in y A \\ out x, out y in x, in y xy out x, out y in x, in y T out x, out y trygetpixel img, in x, in y end for out y in LinRange f, f, 500 , out x in LinRange f, f, 500 A a b c d md\" Det A a d c b det A \" md\"\"\" We never seem to see this in linear algebra classes do we? Check out Linear Map Wikipedia https en.wikipedia.org wiki Linear map Transformation Matrix Wikipedia https en.wikipedia.org wiki Transformation matrix \"\"\" md\"\"\" Geometry of determinant, how areas scale. \"\"\" md\"\"\" Why are we doing this backwards? \"\"\" md\"\"\" Computer Science Solving 2 equations in 2 unknowns, and higher dimensional analogs. THe top 500 supercomputers, and how many equations in how many unknowns are being solved today. \"\"\" md\"\"\" 4.4 Automatic Differentiation in 10 mins ok 11 \"\"\" html\"\"\" div notthestyle \"position relative right 0 top 0 z index 300 \" iframe src \"https www.youtube.com embed vAp6nUMrKYg\" width 400 height 250 frameborder \"0\" allow \"accelerometer autoplay encrypted media gyroscope picture in picture\" allowfullscreen iframe div \"\"\" md\"\"\" What about more than 3 dimensions? Oh I've heard it all, there is no such thing as more than 3 dimensions. The fourth dimension is time, isn't it? I have trouble visualizing 3 dimensions, let alone contemplating 4. ... but mathematicians have no trouble with n spatial dimensions, and they do not usually worry about silly questions like whether these exist. \"\"\" md\"\"\" Appendix \"\"\" det A det A img sources \"https user images.githubusercontent.com 6933510 108605549 fb28e180 73b4 11eb 8520 7e29db0cc965.png\" \"Corgis\", \"https user images.githubusercontent.com 6933510 108883855 39690f80 7606 11eb 8eb1 e595c6c8d829.png\" \"Arrows\", \"https images.squarespace cdn.com content v1 5cb62a904d546e33119fa495 1589302981165 HHQ2A4JI07C43294HVPD ke17ZwdGBToddI8pDm48kA7bHnZXCqgRu4g0 U7hbNpZw zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3 s 4yszcp2ryTI0HqTOaaUohrI8PISCdr 3EAHMyS8K84wLA7X0UZoBreocI4zSJRMe1GOxcKMshLAGzx4R3EDFOm1kBS fluffy corgi?format 2500w\" \"Long Corgi\" img original load download img source typeof img original img if show grid with gridlines img original else img original end function trygetpixel img AbstractMatrix, x Float64, y Float64 rows, cols size img \"The linear map 1,1 ↦ 0,1 \" f t t 1.0 1.0 1.0 i floor Int, rows f y z j floor Int, cols f x rows cols z if 1 i ≤ rows && 1 j ≤ cols img i,j else white img 1,1 end end begin white c RGB RGB 1,1,1 white c RGBA RGBA 1,1,1,0.75 end function with gridlines img Array Any,2 n 16 sep i size img, 1 ÷ n sep j size img, 2 ÷ n result copy img stroke zero eltype img RGBA RGB 1,1,1 , 0.75 stroke RGBA 1, 1, 1, 0.75 result 1 sep i end, . stroke result , 1 sep j end . stroke a second time, to create a line 2 pixels wide result 2 sep i end, . stroke result , 2 sep j end . stroke result sep i n ÷2 . 1,2 , . RGBA 0,1,0,1 result , sep j n ÷2 . 1,2 , . RGBA 1,0,0,1 return result end "},{"url":"week2/transforming_images/","title":"Transformations with Images","tags":["lecture","module1"],"text":" A Pluto.jl notebook v0.19.12 frontmatter chapter 1 video \"https www.youtube.com watch?v uZYVjDDZW9A\" image \"https user images.githubusercontent.com 6933510 136196626 194e81c9 00f7 49f6 90c3 09945723b6a3.png\" section 4 order 4 title \"Transformations with Images\" layout \"layout.jlhtml\" youtube id \"uZYVjDDZW9A\" description \"\" tags \"lecture\", \"module1\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end PlutoUI.TableOfContents aside true md\"\"\" Intializing packages When running this notebook for the first time, this could take up to 15 minutes. Hang in there \"\"\" begin using PlutoUI using Colors, ColorVectorSpace, ImageShow, FileIO, ImageIO using Unitful using ImageFiltering using OffsetArrays using Plots Small patch to make images look more crisp https github.com JuliaImages ImageShow.jl pull 50 Base.showable MIME\"text html\", AbstractMatrix Colorant false end md\"\"\" Announcement Lectures will be nearly an hour \"\"\" rotabook PlutoUI.Resource \"https i.gr assets.com images S compressed.photo.goodreads.com books 1348902666l 1646354.jpg\" md\"\"\" Never run overtime a microcentury with UnitFul Running overtime is the one unforgivable error a lecturer can make. After fifty minutes one microcentury as von Neumann used to say everybody's attention will turn elsewhere even if we are trying to prove the Riemann hypothesis. One minute overtime can destroy the best of lectures. from \"Indiscrete Thoughts\" by Rota, Chpt 18, 10 Lessons I Wish I Had Been Taught \"\"\" century 100u\"yr\" a u\"yr\" is a special kind of string denoting a unit of a year century 2 century 200 century^2 g 9.8u\"m\" u\"s\"^2 uconvert u\"minute\", century 1e 6 convert into minutes the value of a microcentury PotentialEnergy 10u\"kg\" g 50u\"m\" uconvert u\"J\",PotentialEnergy md\"\"\" Adding units to numbers just works in Julia, and furthermore, does not slow down execution. We are sneaking in an example of the power of generic programming and Julia's type system, some of the underlying technology that makes us love working with Julia. More on this later in the book. Meanwhile if this helps you do your problem sets in some other class, go for it. \"\"\" md\"\"\" Reminder Try your own pictures everywhere \"\"\" md\"\"\" Transforming Images \"\"\" md\"\"\" 2.1. Downsampling Upsampling \"\"\" md\"\"\" How can we pixelate a corgi? Found this cute picture online, but we'll pixelate a real corgi. \"\"\" pixelated corgi load download \"https i.redd.it 99lhfbnwpgd31.png\" philip load download \"https user images.githubusercontent.com 6933510 107239146 dcc3fd00 6a28 11eb 8c7b 41aaf6618935.png\" bind r Slider 1 40, show value true, default 40 downsample philip philip 1 r end, 1 r end upsample philip kron downsample philip, fill 1,r,r md\"\"\" Note the use of kron and fill. See Wikipedia Kron https en.wikipedia.org wiki Kronecker product \"\"\" md\"\"\" Exercise Use the nose selection tool from Section 1.1 to pixelate a rectangle of an image. Warning you'll have to worry about sizes if not exact multiples. \"\"\" md\"\"\" 2.2 Linear Combinations Combining Images \"\"\" md\"\"\" One big idea in mathematics is the linear combination https en.wikipedia.org wiki Linear combination . The idea combines scaling an object combining two or more objects by combining scaled versions of multiple objects. \"\"\" md\"\"\" Let's scale some corgis. \"\"\" corgis load download \"https user images.githubusercontent.com 6933510 108605549 fb28e180 73b4 11eb 8520 7e29db0cc965.png\" bind c Slider 0 .1 3, show value true, default 1 c . corgis scaling the corgis changes intensity md\"\"\" You might wonder about the dot times or pointwise times . You can delete the dot, but it is recommended for clarity and performance. The dot emphasizes that the multiplication by c is happening pixel by pixel or that the scalar is being \"broadcast\" to every pixel. \"\"\" md\"\"\" Scaling too far saturates the image. Any r,g,b ≥ 1, saturates at 1. \"\"\" md\"\"\" We need another image. We could grab one from somewhere or we can just transform the one we have. Let's do the latter and turn the corgis upsidedown. \"\"\" upsidedown corgis corgis end 1 1 , md\"\"\" Now let's scaled version of the two images to see what that does. \"\"\" .5 upsidedown corgis . .5 corgis md\"\"\" Convex Combinations \"\"\" md\"\"\" If all the coefficients are positive and add to 1, we say we have a convex combination . Let's take α and 1 α as the two coefficients adding to 1, and scale the two corgi pictures with different α's, thereby giving different weights to the rightside up and upside down corgis. \"\"\" bind α Slider 0 .01 1 , show value true, default 1.0 α . corgis . 1 α . upsidedown corgis md\"\"\" The moment I did this with α .5, I noticed my brain's tendency to see the rightsisde up corgis even though both have equal weight. For me maybe around α .39 which gives weight .61 to the upside down corgis \"feels\" balanced to me. I think this is what the field of psychology called psychometrics tries to measure perhaps someone can tell me if there are studies of the brain's tendency to use world experience to prefer rightside up corgis, and in particular to put a numerical value to this tendency. \"\"\" md\"\"\" 10 seconds with google and I found there is a thing about faces The Face Inversion effect https en.wikipedia.org wiki Face inversion effect ~ text The%20face%20inversion%20effect%20is,same%20for%20non%2Dfacial%20objects.&text The%20most%20supported%20explanation%20for,is%20the%20configural%20information%20hypothesis and also the Thatcher Effect https en.wikipedia.org wiki Thatcher effect ~ text The%20Thatcher%20effect%20or%20Thatcher,obvious%20in%20an%20upright%20face seems related. ... the article suggests objects don't suffer in the same way as faces, so I put forth that the phenomenon applies to corgi faces as much as human faces, suggesting maybe that corgi faces are processed in the face processing part of the brain,not the object processing part of the brain. Corgis are human, after all, right? Note, this is 5 minutes of armchair science, not a professional opinion. \"\"\" md\"\"\" 2.3 Fun with Photoshop What does \"filter\" mean in this context? \"\"\" md\"\"\" Photshop Filter Reference https helpx.adobe.com photoshop using filter effects reference.html \"\"\" md\"\"\" Let's play with photoshop if for no other reason, let's see what image transformations are available considered useful by the pros. Some worth emphasizing are 1. Blur 2. Sharpen 3. Stylize Find Edges 3. Pixelate 4. Distort Some of these transformations e.g. Blur, Sharpen, Find Edges are examples of convolutions which are very efficient, and show up these days in machine learning particularly in image recognition. \"\"\" md\"\"\" 2.4 Image Filtering convolutions \"\"\" md\"\"\" Last semester Grant Sanderson 3Blue1Brown lectured in this course. This lecture on convolutions in image processing was popular. Let's watch an excerpt from 1 04 to 2 48 . We pick a few exercepts, but we wouldn't blame you if you just wanted to watch the whole video. \"\"\" html\"\"\" div notthestyle \"position relative right 0 top 0 z index 300 \" iframe src \"https www.youtube.com embed 8rrHTtUzyZA?start 64&end 168\" width 400 height 250 frameborder \"0\" allow \"accelerometer autoplay encrypted media gyroscope picture in picture\" allowfullscreen iframe div \"\"\" md\"\"\" Definition of convolutions and kernels \"\"\" md\"\"\" Wikipedia Page on Kernels https en.wikipedia.org wiki Kernel image processing Details \"\"\" md\"\"\" Computer Science Complexity The number of multiplications Number of Pixels in the Image Number of Cells in the kernel \"\"\" md\"\"\" Thought Problem Why are small kernels better than large kernels from a complexity viewpoint? \"\"\" md\"\"\" Computer Science Architectures GPUs or Graphical Processing Units Some important computations can be greatly accelerated through the use of specialized hardware such as the GPU processors that were originally designed as image renderers but it has turned out that these processors can be quite fast at other very regular computations. Convolutions is a very GPU friendly operation due to its regular structure. \"\"\" kernelize M OffsetArray M, 1 1, 1 1 begin identity 0 0 0 0 1 0 0 0 0 edge detect 0 1 0 1 4 1 0 1 0 sharpen identity . edge detect Superposition box blur 1 1 1 1 1 1 1 1 1 9 ∇x 1 0 1 1 0 1 1 0 1 2 centered deriv in x ∇y ∇x' kernels identity, edge detect, sharpen, box blur, ∇x, ∇y kernel keys \"identity\", \"edge detect\", \"sharpen\", \"box blur\", \"∇x\", \"∇y\" selections kernel keys . kernel keys kernel matrix Dict kernel keys . kernels md\" bind kernel name Select selections \" end kernel matrix kernel name imfilter corgis, kernelize kernel matrix kernel name Gray. 1.5 . abs. imfilter corgis, kernelize kernel matrix kernel name md\"\"\" Gaussian Filter \"\"\" md\"\"\" In our next Grant Sanderson segment from Fall 2020 4 35 to 7 00 , we hear about convolving images with a Gaussian kernel. \"\"\" html\"\"\" div notthestyle \"position relative right 0 top 0 z index 300 \" iframe src \"https www.youtube.com embed 8rrHTtUzyZA?start 275&end 420\" width 400 height 250 frameborder \"0\" allow \"accelerometer autoplay encrypted media gyroscope picture in picture\" allowfullscreen iframe div \"\"\" round. Kernel.gaussian 1 , digits 3 md\"\"\" We could have defined this ourselves with calls to the exponential function. \"\"\" begin G exp i^2 j^2 2 for i 2 2, j 2 2 round. G . sum G , digits 3 end md\"\"\" This is often known as Gausssian blur to emphasize the result of this operation. Adobe on Gaussian blur https www.adobe.com creativecloud photography discover gaussian blur.html . \"\"\" md\"\"\" Focus around 5 23 \"\"\" bind gparam Slider 0 9, show value true, default 1 kernel Kernel.gaussian gparam plotly surface kernel md\"\"\" Note black lines are contours \"\"\" md\"\"\" Computer Science Data Structure Offset Arrays \"\"\" kernel 0,0 kernel 2,2 M 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Z OffsetArray M, 1 1, 2 2 the indices c.I for c ∈ CartesianIndices Z Z 1, 2 md\"\"\" 2.5. Discrete vs Continuous \"\"\" md\"\"\" Some folks only like discrete objects, others continuous. The computer makes clear what many mathematicians already know, that while different language has evolved to describe discrete objects vs continuous objects, often the underlying conceptual idea is similar or the same. Here is one analogy \"\"\" md\"\"\" Blurring Kernels Integrals ≡ Sharpening Kernels Derivatives \"\"\" md\"\"\" Think about integrals vs derivatives in one dimension. If you replace f x with g x ∫ f t dt for x r ≤ t ≤ x r, that will blur or smooth out the features of f. However if you take the derivative,you will emphasize the changes, i.e., you will sharpen or \"edge detect.\" \"\"\" md\"\"\" 2.6 Respect my Boundaries \"\"\" md\"\"\" Applying the convolution on a boundary requires special thought because it is literally an edge case . Once again Grant said this so very well 2 53 4 19 \"\"\" html\"\"\" div notthestyle \"position relative right 0 top 0 z index 300 \" iframe src \"https www.youtube.com embed 8rrHTtUzyZA?start 173&end 259\" width 400 height 250 frameborder \"0\" allow \"accelerometer autoplay encrypted media gyroscope picture in picture\" allowfullscreen iframe div \"\"\" "},{"url":"week3/hw3/","title":"hw3","tags":[],"text":" A Pluto.jl notebook v0.19.12 using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end md\" homework 3, version 7 \" md\"\"\" Submission by student.name student.kerberos id mit.edu \"\"\" md\"\"\" Homework 3 Structure and Language `18.S191`, Spring 2021 This notebook contains built in, live answer checks In some exercises you will see a coloured box, which runs a test case on your code, and provides feedback based on the result. Simply edit the code, run it, and the check runs again. For MIT students there will also be some additional secret test cases that will be run as part of the grading process, and we will look at your notebook and write comments. Feel free to ask questions \"\"\" edit the code below to set your name and kerberos ID i.e. email without mit.edu student name \"Jazzy Doe\", kerberos id \"jazz\" you might need to wait until all other cells in this notebook have completed running. scroll around the page to see what's up md\"\"\" Intializing packages When running this notebook for the first time, this could take up to 15 minutes. Hang in there \"\"\" begin using Colors using PlutoUI using Compose using LinearAlgebra end bigbreak md\"\"\" Introduction \"\"\" md\"\"\" So far in the class the data that we have been dealing with has mainly been in the form of images. But, of course, we know that data comes in many other forms too, as we briefly discussed in the first lecture. In this homework we will look at another very important data source written text in natural language . The word \"natural\" here is to distinguish human natural languages from computer languages. We will both analyse actual text and try to generate random text that looks like natural language. Both the analysis and synthesis of natural language are key components of artificial intelligence and are the subject of much current research https en.wikipedia.org wiki GPT 3 . \"\"\" md\"\"\" Exercise 1 Language detection In this exercise we will create a very simple Artificial Intelligence . Natural language can be quite messy, but hidden in this mess is structure , which we will look for today. Let's start with some obvious structure in English text the set of characters that we write the language in. If we generate random text by sampling choosing random characters `Char` in Julia , it does not look like English \"\"\" rand Char, 5 sample 5 random characters String rand Char, 40 join into a string md\"\"\" `Char` in Julia is the type for a Unicode https en.wikipedia.org wiki Unicode character, which includes characters like `日` and `⛄`. \"\"\" md\"\"\" Instead, let's define an alphabet , and only use those letters to sample from. To keep things simple we will ignore punctuation, capitalization, etc., and use only the following 27 characters English letters plus \"space\" \"\"\" alphabet 'a' 'z' ' ' includes the space character md\"\"\" Let's sample random characters from our alphabet \"\"\" Text String rand alphabet, 40 md\"\"\" That already looks a lot better than our first attempt But it still does not look like English text we can do better. Frequency table English words are not well modelled by this random Latin characters model. Our first observation is that some letters are more common than others . To put this observation into practice, we would like to have the frequency table of the Latin alphabet. We could search for it online, but it is actually very simple to calculate ourselves The only thing we need is a representative sample of English text. The following samples are from Wikipedia, but feel free to type in your own sample You can also enter a sample of a different language, if that language can be expressed in the Latin alphabet. Remember that the html\" img src 'https cdn.jsdelivr.net gh ionic team ionicons 5.0.0 src svg eye outline.svg' style 'width 1em height 1em margin bottom .2em ' \" button on the left of a cell will show or hide the code. We also include a sample of Spanish, which we'll use later \"\"\" samples English \"\"\" Although the word forest is commonly used, there is no universally recognised precise definition, with more than 800 definitions of forest used around the world. 4 Although a forest is usually defined by the presence of trees, under many definitions an area completely lacking trees may still be considered a forest if it grew trees in the past, will grow trees in the future, 9 or was legally designated as a forest regardless of vegetation type. 10 11 The word forest derives from the Old French forest also forès , denoting \"forest, vast expanse covered by trees\" forest was first introduced into English as the word denoting wild land set aside for hunting 14 without the necessity in definition of having trees on the land. 15 Possibly a borrowing, probably via Frankish or Old High German, of the Medieval Latin foresta, denoting \"open wood\", Carolingian scribes first used foresta in the Capitularies of Charlemagne specifically to denote the royal hunting grounds of the King. The word was not endemic to Romance languages, e. g. native words for forest in the Romance languages derived from the Latin silva, which denoted \"forest\" and \"wood land \" confer the English sylva and sylvan confer the Italian, Spanish, and Portuguese selva the Romanian silvă and the Old French selve, and cognates in Romance languages, e. g. the Italian foresta, Spanish and Portuguese floresta, etc., are all ultimately derivations of the French word. \"\"\", Spanish \"\"\" Un bosque es un ecosistema donde la vegetación predominante la constituyen los árboles y matas.1​ Estas comunidades de plantas cubren grandes áreas del globo terráqueo y funcionan como hábitats para los animales, moduladores de flujos hidrológicos y conservadores del suelo, constituyendo uno de los aspectos más importantes de la biosfera de la Tierra. Aunque a menudo se han considerado como consumidores de dióxido de carbono atmosférico, los bosques maduros son prácticamente neutros en cuanto al carbono, y son solamente los alterados y los jóvenes los que actúan como dichos consumidores.2​3​ De cualquier manera, los bosques maduros juegan un importante papel en el ciclo global del carbono, como reservorios estables de carbono y su eliminación conlleva un incremento de los niveles de dióxido de carbono atmosférico. Los bosques pueden hallarse en todas las regiones capaces de mantener el crecimiento de árboles, hasta la línea de árboles, excepto donde la frecuencia de fuego natural es demasiado alta, o donde el ambiente ha sido perjudicado por procesos naturales o por actividades humanas. Los bosques a veces contienen muchas especies de árboles dentro de una pequeña área como la selva lluviosa tropical y el bosque templado caducifolio , o relativamente pocas especies en áreas grandes por ejemplo, la taiga y bosques áridos montañosos de coníferas . Los bosques son a menudo hogar de muchos animales y especies de plantas, y la biomasa por área de unidad es alta comparada a otras comunidades de vegetación. La mayor parte de esta biomasa se halla en el subsuelo en los sistemas de raíces y como detritos de plantas parcialmente descompuestos. El componente leñoso de un bosque contiene lignina, cuya descomposición es relativamente lenta comparado con otros materiales orgánicos como la celulosa y otros carbohidratos. Los bosques son áreas naturales y silvestre \"\"\" | unaccent, samples.English | Quote md\"\"\" Exercise 1.1 Data cleaning Looking at the sample, we see that it is quite messy it contains punctuation, accented letters and numbers. For our analysis, we are only interested in our 27 character alphabet i.e. `'a'` through `'z'` plus `' '` . We are going to clean the data using the Julia function `filter`. \"\"\" filter isodd, 6, 7, 8, 9, 5 md\"\"\" `filter` takes two arguments a function and a collection . The function is applied to each element of the collection, and it must return either `true` or `false` for each element. Such a function is often called a predicate . If the result is `true`, then that element is included in the final collection. Did you notice something cool? Functions are also just objects in Julia, and you can use them as arguments to other functions Fons thinks this is super cool. html\" br \" We have written a function `isinalphabet`, which takes a character and returns a boolean \"\"\" function isinalphabet character character ∈ alphabet end isinalphabet 'a' , isinalphabet ' ' md\"👉 Use `filter` to extract just the characters from our alphabet out of `messy sentence 1` \" messy sentence 1 \" wow 2020 ¥500 blingbling \" cleaned sentence 1 missing if isdefined messy sentence 1 not defined messy sentence 1 elseif isdefined cleaned sentence 1 not defined cleaned sentence 1 else if cleaned sentence 1 isa Missing still missing elseif cleaned sentence 1 isa Vector Char keep working md\"Use `String x ` to turn an array of characters `x` into a `String`.\" elseif cleaned sentence 1 filter isinalphabet, messy sentence 1 correct else keep working end end md\"\"\" html\" br \" We are not interested in the capitalization of letters i.e. `'A'` vs `'a'` , so we want to map these to lower case before we apply our filter. If we don't, all upper case letters would get deleted. Julia has a `map` function to do exactly this. Like `filter`, its first argument is the function we want to map over the vector in the second argument. \"\"\" md\"👉 Use the function `lowercase` to convert `messy sentence 2` into a lower case string, and then use `filter` to extract only the characters from our alphabet.\" messy sentence 2 \"Awesome 😍\" cleaned sentence 2 missing if isdefined messy sentence 2 not defined messy sentence 2 elseif isdefined cleaned sentence 2 not defined cleaned sentence 2 else if cleaned sentence 2 isa Missing still missing elseif cleaned sentence 2 isa Vector Char keep working md\"Use `String x ` to turn an array of characters `x` into a `String`.\" elseif cleaned sentence 2 filter isinalphabet, lowercase messy sentence 2 correct else keep working end end md\"\"\" html\" br \" Finally, we need to deal with accents simply deleting accented characters from the source text might deform it too much. We can add accented letters to our alphabet, but a simpler solution is to replace accented letters with the corresponding unaccented base character. We have written a function `unaccent` that does just that. \"\"\" french word \"Égalité \" unaccent french word import Unicode \"\"\" Turn `\"áéíóúüñ asdf\"` into `\"aeiouun asdf\"`. \"\"\" unaccent str Unicode.normalize str, stripmark true md\"\"\" html\" br \" 👉 Let's put everything together. Write a function `clean` that takes a string, and returns a cleaned version, where accented letters are replaced by their base characters upper case letters are converted to lower case it is filtered to only contain characters from `alphabet` \"\"\" function clean text return missing end clean \"Crème brûlée est mon plat préféré.\" if isdefined clean not defined clean else let input \"Aè x1\" output clean input if output isa Missing still missing elseif output isa Vector Char keep working md\"Use `String x ` to turn an array of characters `x` into a `String`.\" elseif output \"ae x\" correct else keep working end end end md\"\"\" bigbreak Exercise 1.2 Letter frequencies We are going to count the frequency of each letter in this sample, after applying your `clean` function. Can you guess which character is most frequent? \"\"\" first sample clean first samples function letter frequencies txt ismissing txt && return missing f count. string. alphabet , txt f . sum f end alphabet sample freqs letter frequencies first sample md\"\"\" The result is a 27 element array, with values between `0.0` and `1.0`. These values correspond to the frequency of each letter. `sample freqs i 0.0` means that the i th letter did not occur in your sample, and `sample freqs i 0.1` means that 10% of the letters in the sample are the i th letter. To make it easier to convert between a character from the alphabet and its index, we have the following function \"\"\" index of letter letter findfirst isequal letter , alphabet index of letter 'a' , index of letter 'b' , index of letter ' ' md\"\"\" html\" br \" 👉 Which letters from the alphabet did not occur in the sample? \"\"\" unused letters 'a', 'b', 'c' replace with your answer if isdefined unused letters not defined unused letters else if sample freqs missing md\"\"\" warning \"Oopsie \" You need to complete the previous exercises first. \"\"\" elseif unused letters isa Missing still missing elseif unused letters isa String keep working md\"Use `collect` to turn a string into an array of characters.\" elseif Set index of letter. unused letters Set findall isequal 0.0 , sample freqs correct else keep working end end hint md\"You can answer this question without writing any code have a look at the values of `sample freqs`.\" md\"\"\" bigbreak Now that we know the frequencies of letters in English, we can generate random text that already looks closer to English Random letters from the alphabet \"\"\" String rand alphabet, 400 | Quote md\"\"\" Random letters at the correct frequencies \"\"\" if sample freqs missing String rand sample letter sample freqs for in 1 400 | Quote end md\"\"\" By considering the frequencies of letters in English, we see that our model is already a lot better Our next observation is that some letter combinations are more common than others . Our current model thinks that `potato` is just as 'English' as `ooaptt`. In the next section, we will quantify these transition frequencies , and use it to improve our model. \"\"\" function rand sample frequencies x rand findfirst z z x, cumsum frequencies . sum frequencies end function rand sample letter frequencies alphabet rand sample frequencies end md\"\"\" bigbreak Exercise 1.3 Transition frequencies In the previous exercise we computed the frequency of each letter in the sample by counting their occurences, and then dividing by the total number of counts. In this exercise, we are going to count letter transitions , such as `aa`, `as`, `rt`, `yy`. Two letters might both be common, like `a` and `e`, but their combination, `ae`, is uncommon in English. To quantify this observation, we will do the same as in our last exercise we count occurences in a sample text , to create the transition frequency matrix . \"\"\" function transition counts cleaned sample count string a, b , cleaned sample for a in alphabet, b in alphabet end normalize array x x . sum x transition frequencies normalize array ∘ transition counts transition frequencies first sample md\"What we get is a 27 by 27 matrix . Each entry corresponds to a character pair. The row corresponds to the first character, the column is the second character. Let's visualize this \" show pair frequencies transition frequencies first sample md\"\"\" The brightness of each letter pair indicates how frequent that pair is here space is indicated as ` `. \"\"\" md\"\"\" Answer the following questions with respect to the cleaned English sample text , which we called `first sample`. Let's also give the transition matrix a name \"\"\" sample freq matrix transition frequencies first sample if first sample missing md\"\"\" danger \"Don't worry \" 👆 These errors will disappear automatically once you have completed the earlier exercises \"\"\" end md\"\"\"👉 What is the frequency of the combination `\"th\"`?\"\"\" th frequency missing md\"\"\"👉 What about `\"ht\"`?\"\"\" ht frequency missing if isdefined th frequency not defined th frequency elseif isdefined ht frequency not defined ht frequency else if th frequency isa Missing || ht frequency isa Missing still missing elseif th frequency ht frequency keep working md\"Looks like your answers should be flipped. Which combination is more frequent in English?\" elseif th frequency sample freq matrix index of letter 't' , index of letter 'h' && ht frequency sample freq matrix index of letter 'h' , index of letter 't' correct else keep working end end md\"\"\" 👉 Write code to find which le tt ers appeared doubled in our sample. \"\"\" double letters 'a', 'b', 'c' replace with your answer if isdefined double letters not defined double letters else let result double letters if result isa Missing still missing elseif result isa String keep working md\"Use `collect` to turn a string into an array of characters.\" elseif result isa AbstractVector Char || result isa AbstractSet Char keep working md\"Make sure that `double letters` is a `Vector`.\" elseif Set result Set alphabet diag sample freq matrix . 0 correct elseif push Set result , ' ' Set alphabet diag sample freq matrix . 0 almost md\"We also consider the space `' '` as one of the letters in our `alphabet`.\" else keep working end end end hint md\"First answer this question by looking at the pair frequency image.\" md\"\"\" 👉 Which letter is most likely to follow a W ? You are free to do this partially by hand, partially using code, whatever is easiest \"\"\" most likely to follow w 'x' replace with your answer if isdefined most likely to follow w not defined most likely to follow w else let result most likely to follow w if result isa Missing still missing elseif result isa Char keep working md\"Make sure that you return a `Char`. You might want to use the `alphabet` to index a character.\" elseif result alphabet map alphabet do c sample freq matrix index of letter 'w' , index of letter c end | argmax correct else keep working end end end md\"\"\" 👉 Which letter is most likely to precede a W ? You are free to do this partially by hand, partially using code, whatever is easiest \"\"\" most likely to precede w 'x' replace with your answer if isdefined most likely to precede w not defined most likely to precede w else let result most likely to precede w if result isa Missing still missing elseif result isa Char keep working md\"Make sure that you return a `Char`. You might want to use the `alphabet` to index a character.\" elseif result alphabet map alphabet do c sample freq matrix index of letter c , index of letter 'w' end | argmax correct else keep working end end end md\"\"\" 👉 What is the sum of each row? What is the sum of each column? What is the sum of the matrix? How can we interpret these values?\" \"\"\" row sums missing col sums missing row col answer md\"\"\" Blablabla \"\"\" bigbreak md\"\"\" We can use the measured transition frequencies to generate text in a way that it has the same transition frequencies as our original sample. Our generated text is starting to look like real language \"\"\" bind ex23 sample Select v String k for k, v in zip fieldnames typeof samples , samples md\"\"\" Random letters from the alphabet \"\"\" String rand alphabet, 400 | Quote md\"\"\" Random letters at the correct frequencies \"\"\" String rand sample letter letter frequencies ex23 sample for in 1 400 | Quote md\"\"\" Random letters at the correct transition frequencies \"\"\" sample text transition frequencies clean ex23 sample , 400 | Quote function sample text A, n first index rand sample vec sum A, dims 1 indices reduce 1 n init first index do word, prev last word freq normalize array A prev, next rand sample freq word..., next end String alphabet indices end md\"\"\" bigbreak Exercise 1.4 Language detection \"\"\" md\"\"\" It looks like we have a decent language model, in the sense that it understands transition frequencies in the language. In the demo above, try switching the language between join string. fieldnames typeof samples , \" and \" the generated text clearly looks more like one or the other, demonstrating that the model can capture differences between the two languages. What's remarkable is that our \"training data\" was just a single paragraph per language. In this exercise, we will use our model to write a classifier a program that automatically classifies a text as either join string. fieldnames typeof samples , \" or \" . This is not a difficult task you can download dictionaries for both languages, and count matches but we are doing something much more exciting we only use a single paragraph of each language, and we use a language model as classifier. \"\"\" html\" h4 id 'mystery detect' Mystery sample h4 p Enter some text here we will detect in which language it is written p \" dont delete me bind mystery sample TextField 70, 8 , default \"\"\" Small boats are typically found on inland waterways such as rivers and lakes, or in protected coastal areas. However, some boats, such as the whaleboat, were intended for use in an offshore environment. In modern naval terms, a boat is a vessel small enough to be carried aboard a ship. Anomalous definitions exist, as lake freighters 1,000 feet 300 m long on the Great Lakes are called \"boats\". \"\"\" try assert ismissing distances.English \"\"\" h2 It looks like this text is argmin distances h2 \"\"\" | HTML catch end mystery sample md\"\"\" Let's compute the transition frequencies of our mystery sample Type some text in the box above, and check whether the frequency matrix updates. \"\"\" transition frequencies mystery sample md\"\"\" Our model will compare the transition frequencies of our mystery sample to those of our two language samples. The closest match will be our detected language. The only question left is How do we compare two matrices? When two matrices are almost equal, but not exactly, we want to quantify the distance between them. 👉 Write a function called `matrix distance` which takes 2 matrices of the same size and finds the distance between them by 1. Subtracting corresponding elements 2. Finding the absolute value of the difference 3. Summing the differences \"\"\" function matrix distance A, B return missing do something with A . B end distances map samples do sample matrix distance transition frequencies mystery sample , transition frequencies sample end if isdefined matrix distance not defined matrix distance else try let A rand Float64, 5, 4 B rand Float64, 5, 4 output matrix distance A,B if output isa Missing still missing elseif output isa Number keep working md\"Make sure that `matrix distance` returns a number.\" elseif output 0.0 keep working md\"Two different matrices should have non zero distance.\" else if matrix distance A,B 0 || matrix distance B,A 0 keep working md\"The distance between two matrices should always be positive.\" elseif matrix distance A,A 0 almost md\"The distance between two identical matrices should be zero.\" elseif matrix distance 1 1 , 0 0 0.0 almost md\"`matrix distance 1 1 , 0 0 ` should not be zero.\" else correct end end end catch keep working md\"The function errored.\" end end md\"\"\" We have written a cell that selects the language with the smallest distance to the mystery language. Make sure sure that `matrix distance` is working correctly, and scroll up mystery detect to the mystery text to see it in action Further reading It turns out that the SVD of the transition matrix can mysteriously group the alphabet into vowels and consonants, without any extra information. See this paper http languagelog.ldc.upenn.edu myl Moler1983.pdf if you want to try it yourself We found that removing the space from `alphabet` to match the paper gave better results. bigbreak \"\"\" md\"\"\" Exercise 2 Language generation Our model from Exercise 1 has the property that it can easily be 'reversed' to generate text. While this is useful to demonstrate its structure, the produced text is mostly meaningless it fails to model words, let alone sentence structure. To take our model one step further, we are going to generalize what we have done so far. Instead of looking at letter combinations , we will model word combinations . And instead of analyzing the frequencies of bigrams combinations of two letters , we are going to analyze n grams . Dataset This also means that we are going to need a larger dataset to train our model on the number of English words and their combinations is much higher than the number of letters. We will train our model on the novel Emma 1815 , by Jane Austen https en.wikipedia.org wiki Emma novel . This work is in the public domain, which means that we can download the whole book as a text file from `archive.org`. We've done the process of downloading and cleaning already, and we have split the text into word and punctuation tokens. \"\"\" emma let raw text read download \"https ia800303.us.archive.org 24 items EmmaJaneAusten 753 emma pdf djvu.txt\" , String first words \"Emma Woodhouse\" last words \"THE END\" start index findfirst first words, raw text 1 stop index findlast last words, raw text end raw text start index stop index end function splitwords text clean up whitespace cleantext replace text, r\"\\s \" \" \" split on whitespace or other word boundaries tokens split cleantext, r\" \\s|\\b \" end emma words splitwords emma forest words splitwords samples.English md\"\"\" Exercise 2.1 bigrams revisited The goal of the upcoming exercises is to generalize what we have done in Exercise 1. To keep things simple, we split up our problem into smaller problems. The solution to any computational problem. First, here is a function that takes an array, and returns the array of all neighbour pairs from the original. For example, ```julia bigrams 1, 2, 3, 42 ``` gives ```julia 1,2 , 2,3 , 3,42 ``` We used integers as \"words\" in this example, but our function works with any type of word. \"\"\" function bigrams words starting positions 1 length words 1 map starting positions do i words i i 1 end end bigrams 1, 2, 3, 42 md\"\"\" 👉 Next, it's your turn to write a more general function `ngrams` that takes an array and a number n , and returns all subsequences of length n . For example ```julia ngrams 1, 2, 3, 42 , 3 ``` should give ```julia 1,2,3 , 2,3,42 ``` and ```julia ngrams 1, 2, 3, 42 , 2 bigrams 1, 2, 3, 42 ``` \"\"\" function ngrams words, n return missing end ngrams 1, 2, 3, 42 , 3 ngrams forest words, 4 let output ngrams 1, 2, 3, 42 , 2 if output isa Missing still missing elseif output isa Vector Vector keep working md\"Make sure that `ngrams` returns an array of arrays.\" elseif output 1,2 , 2,3 , 3,42 if ngrams 1,2,3 , 1 1 , 2 , 3 if ngrams 1,2,3 , 3 1,2,3 if ngrams \"a\" ,1 \"a\" correct else keep working md\"`ngrams` should work with any type, not just integers \" end else keep working md\"`ngrams x, 3 ` did not give a correct result.\" end else keep working md\"`ngrams x, 1 ` did not give a correct result.\" end else keep working md\"`ngrams x, 2 ` did not give the correct bigrams. Start out with the same code as `bigrams`.\" end end hint md\"Start out with the same code as `bigrams`, and use the Julia documentation to learn how it works. How can we generalize the `bigram` function into the `ngram` function? It might help to do this on paper first.\" md\"\"\" If you are stuck, you can write `ngrams words, n bigrams words ` ignoring the true value of n , and continue with the other exercises. Exercise 2.2 frequency matrix revisisted In Exercise 1 we use a 2D array to store the bigram frequencies, where each column or row corresponds to a character from the alphabet. To use trigrams we could store the frequencies in a 3D array, and so on. However, when counting words instead of letters we run into a problem A 3D array with one row, column and layer per word has too many elements to store on our computer \"\"\" md\"\"\" Emma consists of length Set emma words unique words. This means that there are Int floor length Set emma words ^3 10^9 billion possible trigrams that's too many \"\"\" md\"\"\" html\" br \" Although the frequency array would be very large, most entries are zero . For example, \"Emma\" is a common word, but the sequence of words \"Emma Emma Emma\" never occurs in the novel. We about the sparsity of the non zero entries in a matrix. When a matrix is sparse in this way, we can store the same information in a more efficient structure . Julia's `SparseArrays.jl` package https docs.julialang.org en v1 stdlib SparseArrays index.html might sound like a logical choice, but the arrays from that package support only 1D and 2D types, and we also want to directly index using strings, not just integers. So instead we will use a dictionary , or `Dict` in Julia. Take a close look at the next example. Note that you can click on the output to expand the data viewer. \"\"\" healthy Dict \"fruits\" \"🍎\", \"🍊\" , \"vegetables\" \"🌽\", \"🎃\", \"🍕\" healthy \"fruits\" md\"\"\" Did you notice something funny? The dictionary is unordered , this is why the entries were printed in reverse from the definition. You can dynamically add or change values of a `Dict` by assigning to `my dict key `. You can check whether a key already exists using `haskey my dict, key `. 👉 Use these two techniques to write a function `word counts` that takes an array of words, and returns a `Dict` with entries `word number of occurences`. For example ```julia word counts \"to\", \"be\", \"or\", \"not\", \"to\", \"be\" ``` should return ```julia Dict \"to\" 2, \"be\" 2, \"or\" 1, \"not\" 1 ``` \"\"\" function word counts words Vector counts Dict your code here return counts end word counts \"to\", \"be\", \"or\", \"not\", \"to\", \"be\" let output word counts \"to\", \"be\", \"or\", \"not\", \"to\", \"be\" if output nothing keep working md\"Did you forget to write `return`?\" elseif output Dict still missing md\"Write your function `word counts` above.\" elseif output isa Dict keep working md\"Make sure that `word counts` returns a `Dict`.\" elseif output Dict \"to\" 2, \"be\" 2, \"or\" 1, \"not\" 1 correct else keep working end end md\"\"\" 👉 Write code to find how many times `\"Emma\"` occurs in the book. \"\"\" emma count missing if emma count isa Missing still missing elseif emma count 865 correct else keep working end md\"\"\" Great Let's get back to our n grams. For the purpose of generating text, we are going to store a completion cache . This is a dictionary where each key is an n 1 gram, and the corresponding value is the vector of all those words which can complete it to an n gram. Let's look at an example ```julia let trigrams ngrams split \"to be or not to be that is the question\", \" \" , 3 cache completions cache trigrams cache Dict \"to\", \"be\" \"or\", \"that\" , \"be\", \"or\" \"not\" , \"or\", \"not\" \"to\" , ... end ``` So for trigrams the keys are the first 2 words of each trigram, and the values are arrays containing every third word of those trigrams. If the same n gram occurs multiple times e.g. \"said Emma laughing\" , then the last word \"laughing\" should also be stored multiple times. This will allow us to generate trigrams with the same frequencies as the original text. 👉 Write the function `completion cache`, which takes an array of ngrams i.e. an array of arrays of words, like the result of your `ngram` function , and returns a dictionary like described above. \"\"\" function completion cache grams cache Dict your code here cache end let trigrams ngrams split \"to be or not to be that is the question\", \" \" , 3 completion cache trigrams end md\"\"\" What is this cache telling us? In our sample text, the words \"to be\" were followed by \"or\" and by \"that\". So if we are generating text, and the last two words we wrote are \"to be\", we can look at the cache, and see that the next word can be either \"or\" or \"that\". \"\"\" completion cache ngrams circular forest words, 3 md\"\"\" Exercise 2.4 write a novel We have everything we need to generate our own novel The final step is to sample random ngrams, in a way that each next ngram overlaps with the previous one. We've done this in the function `generate from ngrams` below feel free to look through the code, or to implement your own version. \"\"\" \"\"\" generate from ngrams grams, num words Given an array of ngrams i.e. an array of arrays of words , generate a sequence of `num words` words by sampling random ngrams. \"\"\" function generate from ngrams grams, num words n length first grams cache completion cache grams we need to start the sequence with at least n 1 words. a simple way to do so is to pick a random ngram sequence rand grams ... we iteratively add one more word at a time for i ∈ n 1 num words the previous n 1 words tail sequence end n 2 end possible next words completions cache tail choice rand completions push sequence, choice end sequence end \"Compute the ngrams of an array of words, but add the first n 1 at the end, to ensure that every ngram ends in the the beginning of another ngram.\" function ngrams circular words, n ngrams words..., words 1 n 1 ... , n end \"\"\" generate source text AbstractString, num token n 3, use words true Given a source text, generate a `String` that \"looks like\" the original text by satisfying the same ngram frequency distribution as the original. \"\"\" function generate source text AbstractString, s n 3, use words true preprocess if use words splitwords else collect end words preprocess source text if length words n \"\" else grams ngrams circular words, n result generate from ngrams grams, s if use words join result, \" \" else String result end end end md\" Interactive demo Enter your own text in the box below, and use that as training data to generate anything \" bind generate demo sample TextField 50, 5 , default samples.English md\"\"\"Using bind generate sample n letters NumberField 1 5 grams for characters\"\"\" generate generate demo sample, 400 n generate sample n letters, use words false | Quote md\"\"\"Using bind generate sample n words NumberField 1 5 grams for words\"\"\" generate generate demo sample, 100 n generate sample n words, use words true | Quote md\"\"\" Automatic Jane Austen Uncomment the cell below to generate some Jane Austen text \"\"\" generate emma, 100 n 4 | Quote bigbreak if student.name \"Jazzy Doe\" md\"\"\" danger \"Before you submit\" Remember to fill in your name and Kerberos ID at the top of this notebook. \"\"\" end md\" Function library Just some helper functions used in the notebook.\" function Quote text AbstractString text | Markdown.Paragraph | Markdown.BlockQuote | Markdown.MD end function show pair frequencies A imshow let to rgb x RGB 0.36x, 0.82x, 0.8x to rgb. A . maximum abs. A end compimg imshow end function compimg img, labels c d for c in replace alphabet, ' ' \" \" , d in replace alphabet, ' ' \" \" xmax, ymax size img xmin, ymin 0, 0 arr j 1, i 1 for i 1 ymax, j 1 xmax compose context units UnitBox xmin, ymin, xmax, ymax , fill vec img , compose context , fill \"white\" , font \"monospace\" , text first. arr . .1, last. arr . 0.6, labels , rectangle first. arr , last. arr , fill 1.0, length arr , fill 1.0, length arr end hint text Markdown.MD Markdown.Admonition \"hint\", \"Hint\", text almost text Markdown.MD Markdown.Admonition \"warning\", \"Almost there \", text still missing text md\"Replace `missing` with your answer.\" Markdown.MD Markdown.Admonition \"warning\", \"Here we go \", text keep working text md\"The answer is not quite right.\" Markdown.MD Markdown.Admonition \"danger\", \"Keep working on it \", text yays md\"Fantastic \", md\"Splendid \", md\"Great \", md\"Yay ❤\", md\"Great 🎉\", md\"Well done \", md\"Keep it up \", md\"Good job \", md\"Awesome \", md\"You got the right answer \", md\"Let's move on to the next section.\" correct text rand yays Markdown.MD Markdown.Admonition \"correct\", \"Got it \", text not defined variable name Markdown.MD Markdown.Admonition \"danger\", \"Oopsie \", md\"Make sure that you define a variable called Markdown.Code string variable name \" todo text HTML \"\"\" div style \"background rgb 220, 200, 255 padding 2em border radius 1em \" h1 TODO h1 repr MIME\"text html\" , text div \"\"\" bigbreak html\" br br br br br \" "},{"url":"week3/newton_method/","title":"The Newton Method","tags":["lecture","module1"],"text":" A Pluto.jl notebook v0.19.12 frontmatter chapter 1 video \"https www.youtube.com watch?v Wjcx9sNSLP8\" image \"https user images.githubusercontent.com 6933510 136196605 b6119b9d 223c 44bc 97d5 ef7cfce66483.gif\" section 6 order 6 title \"The Newton Method\" layout \"layout.jlhtml\" youtube id \"Wjcx9sNSLP8\" description \"\" tags \"lecture\", \"module1\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin using Symbolics, ForwardDiff, Plots, PlutoUI, LaTeXStrings using ForwardDiff jacobian end md\"\"\" Solving equations and finding inverse transformations using the Newton method \"\"\" md\"\"\" In science and engineering we often need to solve systems of equations . If the equations are linear then linear algebra tells us a general method to solve them these are now routinely applied to solve systems of millions of linear equations. If the equations are non linear then things are less obvious. The main solution methods we know work by... reducing the nonlinear equations to a sequence of linear equations They do this by approximating the function by a linear function and solving that to get a better solution, then repeating this operation as many times as necessary to get a sequence of increasingly better solutions. This is an example of an iterative algorithm . A well known and elegant method, which can be used in many different contexts, is the Newton method . It does, however, have the disadvantage that it requires derivatives of the function. This can be overcome using automatic differentiation techniques. We will illustrate the Newton method using the `ForwardDiff.jl` package to carry out automatic differentiation, but we will also try to understand what's going on \"under the hood\". \"\"\" md\"\"\" The Newton method in 1D We would like to solve equations like f x g x . We rewrite that by moving all the terms to one side of the equation so that we can write h x 0 , with h x f x g x . A point x^ such that h x^ 0 is called a root or zero of h . The Newton method finds zeros, and hence solves the original equation. \"\"\" md\"\"\" The idea of the Newton method is to follow the direction in which the function is pointing We do this by building a tangent line at the current position and following that instead, until it hits the x axis. Let's look at that visually first \"\"\" md\"\"\" n bind n2 Slider 0 10, show value true, default 0 \"\"\" md\"\"\" x₀ bind x02 Slider 10 10, show value true, default 6 \"\"\" let f x x^2 2 standard Newton f, n2, 1 0.01 10, x02, 10, 70 end md\"\"\" n bind n Slider 0 10, show value true, default 0 \"\"\" md\"\"\" x₀ bind x0 Slider 10 10, show value true, default 6 \"\"\" let f x 0.2x^3 4x 1 standard Newton f, n, 10 0.01 10, x0, 10, 70 end md\"\"\" Using symbolic calculations to understand derivatives and nonlinear maps \"\"\" md\"\"\" We can use Julia's new symbolic capabilities to understand what's going on with a nonlinear polynomial function. Let's see what happens if we perturb a function f around a point z by a small amount \\eta . \"\"\" variables z, η f x x^m 2 f′ x ForwardDiff.derivative f, x md\"\"\" m bind m Slider 1 6, show value true \"\"\" f z f z η expand f z η md\"\"\" When \\eta is small, \\eta^2 is very small, so we can ignore it. We are left with terms that either don't contain \\eta constants , or multiply \\eta linear . The part that multiplies \\eta is the derivative \"\"\" f′ z f z η f′ z expand f z η f z η f′ z md\"\"\" The derivative gives the \" linear part\" of the function. `ForwardDiff.jl`, and forward mode automatic differentiation in general, effectively uses this although not symbolically in this sense to just propagate the linear part of each function through a calculation. \"\"\" md\"\"\" Mathematics of the Newton method \"\"\" md\"\"\" We can convert the idea of \"following the tangent line\" into equations as follows. You can also do so by just looking at the geometry in 1D, but that does not help in 2D. \"\"\" md\"\"\" Suppose we have a guess x 0 for the root and we want to find a hopefully better guess x 1 . Let's set x 1 x 0 \\delta , where x 1 and \\delta are still unknown. We want x 1 to be a root, so \"\"\" md\"\"\" f x 1 f x 0 \\delta \\simeq 0 \"\"\" md\"\"\" If we are already \"quite close\" to the root then \\delta should be small, so we can approximate f using the tangent line f x 0 \\delta \\, f' x 0 \\simeq 0 and hence \\delta \\simeq \\frac f x 0 f' x 0 so that x 1 x 0 \\frac f x 0 f' x 0 Now we can repeat so that x 2 x 1 \\frac f x 1 f' x 1 and in general x n 1 x n \\frac f x n f' x n . This is the Newton method in 1D. \"\"\" md\"\"\" Implementation in 1D \"\"\" function newton1D f, x0 f′ x ForwardDiff.derivative f, x \\prime TAB x0 37.0 starting point sequence x0 x x0 for i in 1 10 x f x f′ x end return x end newton1D x x^2 2, 37.0 sqrt 2 md\"\"\" Symbolic derivative in 2D \"\"\" md\"\"\" Let's see what happens when we perturb by small amounts \\delta in the x direction and \\epsilon in the y direction around the point a, b \"\"\" md\"\"\" p bind p Slider 0 0.01 1, show value true \"\"\" variables a, b, δ, ϵ image expand. T p a δ , b ϵ jacobian T p , a, b .| Text jacobian T p , a, b δ, ϵ image T p a, b simplify. expand. image T p a, b jacobian T p , a, b δ, ϵ md\"\"\" Newton for transformations in 2 dimensions T \\mathbb R ^2 \\to \\mathbb R ^2 \"\"\" md\"\"\" We want to find the inverse T^ 1 y , i.e. to solve the equation T x y for x . We use the same idea as in 1D, but now in 2D \"\"\" md\"\"\" T x 0 \\delta \\simeq 0 T x 0 J \\cdot \\delta \\simeq 0, where J DT x 0 is the Jacobian matrix of T at x 0 , i.e. the best linear approximation of T near to x 0 . \"\"\" md\"\"\" Hence \\delta is the solution of the system of linear equations \"\"\" md\"\"\" J \\cdot \\delta T x 0 Then we again construct the new approximation x 1 as x 1 x 0 \\delta . \"\"\" md\"\"\" In 2D we have an explicit formula for the inverse of the matrix. \"\"\" md\"\"\" Implementation in 2D \"\"\" function newton2D step T, x J ForwardDiff.jacobian T, x should use StaticVectors δ J \\ T x J^ 1 T x return x δ end \"Looks for x such that T x 0\" function newton2D T, x0, n 10 x x0 for i in 1 n x newton2D step T, x end return x end md\"\"\" Remember that Newton is designed to look for roots , i.e. places where T x 0 . We want T x y , so we need another layer \"\"\" \"Looks for x such that f x y, i.e. f x y 0\" function inverse f, y, x0 0, 0 return newton2D x f x y, x0 end inverse f y inverse f, y straight x0, y0, x, m y0 m x x0 function standard Newton f, n, x range, x0, ymin 10, ymax 10 f′ x ForwardDiff.derivative f, x p plot f, x range, lw 3, ylim ymin, ymax , legend false, size 400, 300 hline 0.0 , c \"magenta\", lw 3, ls dash scatter x0 , 0 , c \"green\", ann x0, 5, L\"x 0\", 10 for i in 1 n plot x0, x0 , 0, f x0 , c gray, alpha 0.5 scatter x0 , f x0 , c red m f′ x0 plot x range, straight x0, f x0 , x, m for x in x range , c blue, alpha 0.5, ls dash, lw 2 x1 x0 f x0 m scatter x1 , 0 , c \"green\", ann x1, 5, L\"x % i\", 10 x0 x1 end p | as svg end T α x, y , x α y^2, y α x^2 md\"\"\" α bind α Slider 0.0 0.01 1.0, show value true \"\"\" T α 0.3, 0.4 inverse T α 0.3, 0.4 T α ∘ inverse T α 0.3, 0.4 md\"\"\" Appendix \"\"\" expand ex simplify ex, polynorm true "},{"url":"week3/transformations2/","title":"Transformations II: Composability, Linearity and Nonlinearity","tags":["lecture","module1"],"text":" A Pluto.jl notebook v0.19.12 frontmatter chapter 1 video \"https www.youtube.com watch?v VDPf3RjoCpY\" image \"https user images.githubusercontent.com 6933510 136196619 0750544f cd6d 4ae3 ace7 60c24443d721.png\" section 5 order 5 title \"Transformations II Composability, Linearity and Nonlinearity\" layout \"layout.jlhtml\" youtube id \"VDPf3RjoCpY\" description \"\" tags \"lecture\", \"module1\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end PlutoUI.TableOfContents aside true md\"\"\" Intializing packages When running this notebook for the first time, this could take up to 15 minutes. Hang in there \"\"\" begin using PlutoUI using Colors, ColorVectorSpace, ImageShow, FileIO, ImageIO using PlutoUI using LinearAlgebra using ForwardDiff using NonlinearSolve using StaticArrays Small patch to make images look more crisp https github.com JuliaImages ImageShow.jl pull 50 Base.showable MIME\"text html\", AbstractMatrix Colorant false end img original load download corgis url img original load download longcorgi url img original load download theteam url corgis url \"https user images.githubusercontent.com 6933510 108605549 fb28e180 73b4 11eb 8520 7e29db0cc965.png\" longcorgi url \"https user images.githubusercontent.com 6933510 110868198 713faa80 82c8 11eb 8264 d69df4509f49.png\" theteam url \"https news.mit.edu sites default files styles news article image gallery public images 202004 edelman%2520philip%2520sanders.png?itok ZcYu9NFeg\" md\"\"\" After you select your image, we suggest moving this line above just above the top of your browser. \"\"\" md\"\"\" The fun stuff playing with transforms \"\"\" let range 1.5 .1 1.5 md\"\"\" This is a \"scrubbable\" matrix click on the number and drag to change A `` `` bind a Scrubbable range default 1.0 bind b Scrubbable range default 0.0 `` `` `` `` bind c Scrubbable range default 0.0 bind d Scrubbable range default 1.0 `` `` \"\"\" end md\"\"\" Grab a linear a0afe3ae 76b9 11eb 2301 cde7260ddd7f or nonlinear a290d5e2 7a02 11eb 37db 41bf86b1f3b3 transform, or make up your own \"\"\" T⁻¹ id T⁻¹ rotate α T⁻¹ shear α T⁻¹ lin A uses the scrubbable T⁻¹ shear α ∘ shear α T⁻¹ nonlin shear α T⁻¹ inverse nonlin shear α T⁻¹ nonlin shear α T⁻¹ xy T⁻¹ warp α T⁻¹ x,y , x α y^2,y α x^2 may be non invertible T⁻¹ x,y , x,y^2 T⁻¹ flipy ∘ x,y , β x α y β y , h y β y md\"\"\" zoom bind z Scrubbable .1 .1 3, default 1 \"\"\" md\"\"\" pan bind panx Scrubbable 1 .1 1, default 0 , bind pany Scrubbable 1 .1 1, default 0 \"\"\" md\"\"\" α bind α Slider 30 .1 30, show value true, default 0 β bind β Slider 10 .1 10, show value true, default 5 h bind h Slider .1 .1 10, show value true, default 5 \"\"\" 1 1 md\"\"\" pixels bind pixels Slider 1 1000, default 800, show value true \"\"\" md\"\"\" Show grid lines bind show grid CheckBox default true ngrid bind ngrid Slider 5 5 20, show value true, default 10 \"\"\" md\"\"\" Circular Frame bind circular CheckBox default true radius bind r Slider .1 .1 1, show value true, default 1 \"\"\" begin begin x, y transform ij to xy i,j, pixels X, Y translate panx, pany x,y X, Y T⁻¹∘scale 1 z ∘translate panx, pany x,y i, j transform xy to ij img,X,Y getpixel img,i,j circular circular, r r end for i 1 pixels, j 1 pixels end transform xy to ij img,0.0,0.0 md\"\"\" Above The original image is placed in a 1,1 x 1 1 box and transformed. \"\"\" A a b c d md\"\"\" Pedagogical note Why the Module 1 application image processing Image processing is a great way to learn Julia, some linear algebra, and some nonlinear mathematics. We don't presume the audience will become professional image processors, but we do believe that the principles learned transcend so many applications... and everybody loves playing with their own images \"\"\" md\"\"\" Last Lecture Leftovers \"\"\" md\"\"\" Interesting question about linear transformations If a transformation takes lines into lines and preserves the origin, does it have to be linear? Answer no The example of a perspective map takes all lines into lines, but paralleograms generally do not become parallelograms. \"\"\" md\"\"\" A nice interactive demo of perspective maps https www.khanacademy.org humanities renaissance reformation early renaissance1 beginners renaissance florence a linear perspective interactive from Khan academy. \"\"\" Resource \"https cdn.kastatic.org ka perseus images 1b351a3653c1a12f713ec24f443a95516f916136.jpg\" md\"\"\" Challenge exercise Rewrite this using Julia and Pluto \"\"\" md\"\"\" Julia style a little advanced Reminder about defining vector valued functions \"\"\" md\"\"\" Many people find it hard to read `f v v 1 v 2 , v 1 v 2 ` or ` f v v 1 v 2 , v 1 v 2 ` and instead prefer `f x,y x y , x y ` or ` f x,y , x y , x y `. All four of these will take a 2 vector to a 2 vector in the same way for the purposes of this lecture, i.e. `f 1,2 ` can be defined by any of the four forms. The forms with the ` ` are anonymous functions. They are still considered anonymous, even though we then name them `f`. \"\"\" md\"\"\" Functions with parameters The anonymous form comes in handy when one wants a function to depend on a parameter . For example `f α x,y , x αy, x αy ` allows you to apply the `f 7 ` function to the input vector ` 1, 2 ` by running `f 7 1, 2 ` . \"\"\" md\"\"\" Linear transformations a collection \"\"\" md\"\"\" Here are a few useful linear transformations \"\"\" begin id x, y SA x, y scalex α x, y , SA α x, y scaley α x, y , SA x, α y scale α x, y , SA α x, α y swap x, y SA y, x flipy x, y SA x, y rotate θ x, y , SA cos θ x sin θ y, sin θ x cos θ y shear α x, y , SA x α y, y end md\"\"\" In fact we can write down the most general linear transformation in one of two ways \"\"\" begin lin a, b, c, d x, y , a x b y, c x d y lin A v A v... linear algebra version using matrix multiplication end md\"\"\" The second version uses the matrix multiplication notation from linear algebra, which means exactly the same as the first version when A \\begin bmatrix a & b \\\\ c & d \\end bmatrix \"\"\" md\"\"\" Nonlinear transformations a collection \"\"\" begin translate α,β x, y , SA x α, y β affine, but not linear nonlin shear α x, y , SA x, y α x^2 warp α x, y , rotate α √ x^2 y^2 SA x, y xy r, θ SA r cos θ , r sin θ rθ x SA norm x , atan x 2 ,x 1 exponentialish x,y , log x 1.2 , log y 1.2 merc x,y , log x^2 y^2 2 , atan y,x reim log complex y,x end md\"\"\" Composition \"\"\" let x rand sin ∘ cos x ≈ sin cos x end md\"\"\" Composing functions in mathematics Wikipedia math https en.wikipedia.org wiki Function composition In math we talk about composing two functions to create a new function the function that takes x to \\sin \\cos x is the composition of the sine function and the cosine function. We humans tend to blur the distinction between the sine function and the value of \\sin x at some point x . The sine function is a mathematical object by itself. It's a thing that can be evaluated at as many x 's as you like. If you look at the two sides of ` sin ∘ cos x ≈ sin cos x ` and see that they are exactly the same, it's time to ask yourself what's a key difference? On the left a function is built ` sin ∘ cos ` which is then evaluated at `x`. On the right, that function is never built. \"\"\" md\"\"\" Composing functions in computer science wikipedia cs https en.wikipedia.org wiki Function composition computer science A key issue is a programming language is whether it's easy to name the composition in that language. In Julia one can create the function `sin ∘ cos` and one can readily check that ` sin ∘ cos x ` always yields the same value as `sin cos x `. \"\"\" md\"\"\" Composing functions in Julia Julia's `∘` operator https docs.julialang.org en v1 manual functions Function composition and piping follows the mathematical typography https en.wikipedia.org wiki Function composition Typography convention, as was shown in the `sin ∘ cos` example above. We can type this symbol as `\\circ TAB `. \"\"\" md\"\"\" Composition of software at a higher level The trend these days is to have higher order composition of functionalities. A good example would be that an optimization can wrap a highly complicated program which might include all kinds of solvers, and still run successfully. This might require the ability of the outer software to have some awareness of the inner software. It can be quite magical when two very different pieces of software \"compose\", i.e. work together. Julia's language construction encourages composability. We will discuss this more in a future lecture. \"\"\" md\"\"\" Find your own examples Take some of the Linear and Nonlinear Transformations see the Table of Contents and find some inverses by placing them in the `T ` section of \"The fun stuff\" at the top of this notebook. \"\"\" md\"\"\" Linear transformations can be written in math using matrix multiplication notation as \\begin pmatrix a & b \\\\ c & d \\end pmatrix \\begin pmatrix x \\\\ y \\end pmatrix . \"\"\" md\"\"\" By contrast, here are a few fun functions that cannot be written as matrix times vector. What characterizes the matrix ones from the non matrix ones? \"\"\" md\"\"\" This may be a little fancy, but we see that warp is a rotation, but the rotation depends on the point where it is applied. \"\"\" begin warp₂ α,x,y rotate α √ x^2 y^2 warp₂ α x, y , warp₂ α,x,y x,y end warp3 α x, y , rotate α √ x^2 y^2 x,y warp3 1 1,2 warp 1 5,6 warp₂ 1.0 5.0,6.0 md\"\"\" Linear transformations See a matrix, think beyond number arrays \"\"\" md\"\"\" Software writers and beginning linear algebra students see a matrix and see a lowly table of numbers. We want you to see a linear transformation that's what professional mathematicians see. \"\"\" md\"\"\" What defines a linear transformation? There are a few equivalent ways of giving a definition. \"\"\" md\"\"\" Linear transformation definitions \"\"\" md\"\"\" The intuitive definition The rectangles gridlines in the transformed image above e0b657ce 7a03 11eb 1f9d f32168cb5394 always become a lattice of congruent parallelograms. The easy operational but devoid of intuition definition A transformation is linear if it is defined by v \\mapsto A v matrix times vector for some fixed matrix A . The scaling and adding definition 1. If you scale and then transform or if you transform and then scale, the result is always the same T cv c \\, T v v is any vector, and c any number. 2. If you add and then transform or vice versa the result is the same T v 1 v 2 T v 1 T v 2 . v 1,v 2 are any vectors. The mathematician's definition A consolidation of the above definition. T is linear if T c 1 v 1 c 2 v 2 c 1 T v 1 c 2 T v 2 for all numbers c 1,c 2 and vectors v 1,v 2 . This can be extended to beyond 2 terms. \"\"\" md\"\"\" The matrix \"\"\" Resource \"https upload.wikimedia.org wikipedia en c c1 The Matrix Poster.jpg\" md\"\"\" No not that matrix \"\"\" md\"\"\" The matrix for a linear transformation T is easy to write down The first column is T 1, 0 and the second is T 0,1 . That's it \"\"\" md\"\"\" Once we have those, the linearity relation T x,y x \\, T 1,0 y \\, T 0,1 x \\, \\mathrm column\\ 1 y \\, \\mathrm column\\ 2 is exactly the definition of matrix times vector. Try it. \"\"\" md\"\"\" Matrix multiply You know how to do it, but why? \"\"\" md\"\"\" Did you ever ask yourself why matrix multiply has that somewhat complicated multiplying and adding going on? \"\"\" let A randn 2,2 B randn 2,2 v rand 2 lin A ∘ lin B v , lin A B v end md\"\"\" Important The composition of the linear transformation is the linear transformation of the multiplied matrices There is only one definition of matmul matrix multiply that realizes this fact. To see what it is exactly, remember the first column of `lin A ∘ lin B ` should be the result of computing the two matrix times vectors y A 1,0 then z A y , and the second column is the same for 0,1 . This is worth writing out if you have never done this. \"\"\" md\"\"\" Let's try doing that with random matrices \"\"\" begin P randn 2, 2 Q randn 2, 2 T₁ lin P ∘ lin Q T₂ lin P Q lin P Q 1, 0 , lin P ∘lin Q 1, 0 end test img load download corgis url test pixels 300 md\"\"\" `lin P Q ` \"\"\" begin begin x, y transform ij to xy i,j, test pixels X, Y T₁ x,y i, j transform xy to ij test img,X,Y getpixel test img,i,j end for i 1 test pixels, j 1 test pixels end md\"\"\" `lin P ∘lin Q ` \"\"\" begin begin x, y transform ij to xy i,j, test pixels X, Y T₂ x,y i, j transform xy to ij test img,X,Y getpixel test img,i,j end for i 1 test pixels, j 1 test pixels end md\"\"\" Coordinate transformations vs object transformations \"\"\" img size img img 50,56 md\"\"\" If you want to move an object to the right, the first thing you might think of is adding 1 to the x coordinate of every point. The other thing you could do is to subtract one from the first coordinate of the coordinate system. The latter is an example of a coordinate transform. \"\"\" md\"\"\" Coordinate transform of an array i, j vs points x, y \"\"\" md\"\"\" The original image has 1,1 in the upper left corner as an array but is thought of as existing in the entire plane. \"\"\" Resource \"https raw.githubusercontent.com mitmath 18S191 Spring21 notebooks week3 coord transform.png\" | white background begin function transform xy to ij img AbstractMatrix, x Float64, y Float64 convert coordinate system xy to ij center image, and use \"white\" when out of the boundary rows, cols size img m max cols, rows function to take xy to ij xy to ij translate rows 2, cols 2 ∘ swap ∘ flipy ∘ scale m 2 apply the function and \"snap to grid\" i, j floor. Int, xy to ij x, y end function getpixel img,i Int,j Int circular Bool false, r Real 200 grab image color or place default rows, cols size img m max cols,rows if circular c i rows 2 ^2 j cols 2 ^2 ≤ r m^2 4 else c true end if 1 i ≤ rows && 1 j ≤ cols && c img i, j else white img 1, 1 black img 1,1 end end function getpixel img,x Float64,y Float64 i,j transform xy to ij img,x,y getpixel img,i,j end function transform ij to xy i Int,j Int,pixels ij to xy scale 2 pixels ∘ flipy ∘ swap ∘ translate pixels 2, pixels 2 ij to xy i,j end end transform ij to xy 1,1,400 translate 400,400 1,1 md\"\"\" Inverses \"\"\" md\"\"\" If f is a function from 2 vectors to 2 vectors say , we define the inverse of f , denoted f^ 1 , to have the property that it \" undoes \" the effect of f , i.e. f f^ 1 v v and f^ 1 f v v . This equation might be true for all v or for some v in a region. \"\"\" md\"\"\" Example Scaling up and down \"\"\" let v rand 2 T rotate 30 ∘rotate 30 T v , v end let T scale 0.5 ∘ scale 2 v rand 2 T v .≈ v end md\"\"\" We observe numerically that `scale 2 ` and `scale .5 ` are mutually inverse transformations, i.e. each is the inverse of the other. \"\"\" md\"\"\" Inverses Solving equations \"\"\" md\"\"\" What does an inverse really do? Let's think about scaling again. Suppose we scale an input vector \\mathbf x by 2 to get an output vector \\mathbf x \\mathbf y 2 \\mathbf x Now suppose that you want to go backwards. If you are given \\mathbf y , how do you find \\mathbf x ? In this particular case we see that \\mathbf x \\frac 1 2 \\mathbf y . If we have a linear transformation, we can write \\mathbf y A \\, \\mathbf x with a matrix A . If we are given \\mathbf y and want to go backwards to find the \\mathbf x from that, we need to solve a system of linear equations . Usually , but not always , we can solve these equations to find a new matrix B such that \\mathbf x B \\, \\mathbf y , i.e. B undoes the effect of A . Then we have \\mathbf x B \\, A \\mathbf x , so that B A must be the identity matrix. We call B the matrix inverse of A , and write B A^ 1 . For 2 \\times 2 matrices we can write down an explicit formula for the matrix inverse, but in general we will need a computer to run an algorithm to find the inverse. \"\"\" md\"\"\" Inverting Linear Transformations \"\"\" let v rand 2 A randn 2,2 lin inv A ∘ lin A v , v end let A randn 2,2 B randn 2,2 inv A B ≈ inv B inv A end md\"\"\" ``A^ 1 \\begin pmatrix d & b \\\\ c & a \\end pmatrix ad bc \\quad `` if ``\\ A \\ \\begin pmatrix a & b \\\\ c & d \\end pmatrix . `` \"\"\" md\"\"\" Inverting nonlinear transformations \"\"\" md\"\"\" What about if we have a nonlinear transformation T can we invert it? In other words, if \\mathbf y T \\mathbf x , can we solve this to find \\mathbf x in terms of \\mathbf y ? In general this is a difficult question Sometimes we can do so analytically, but usually we cannot. Nonetheless, there are numerical methods that can sometimes solve these equations, for example the Newton method https en.wikipedia.org wiki Newton%27s method . There are several implementations of such methods in Julia, e.g. in the NonlinearSolve.jl package https github.com JuliaComputing NonlinearSolve.jl . We have used that to write a function `inverse` that tries to invert nonlinear transformations of our images. \"\"\" md\"\"\" The Big Diagram of Transforming Images \"\"\" Resource \"https raw.githubusercontent.com mitmath 18S191 Spring21 notebooks week3 comm2.png\" md\"\"\" Note that we are defining the map with the inverse of T so we can go pixel by pixel in the result. \"\"\" md\"\"\" Collisions \"\"\" Resource \"https raw.githubusercontent.com mitmath 18S191 Spring21 notebooks week3 collide.png\" | white background begin function inverse f, y, u0 SVector 0.0, 0.0 prob NonlinearProblem false u, p f u, p . y, u0 solver solve prob, NewtonRaphson , tol 1e 4 return solver.u end inverse f y inverse u, p f SVector u... , y end md\"\"\" Check out Linear Map Wikipedia https en.wikipedia.org wiki Linear map Transformation Matrix Wikipedia https en.wikipedia.org wiki Transformation matrix \"\"\" md\"\"\" Why are we doing this backwards? If one moves the colors forward rather than backwards you have trouble dealing with the discrete pixels. You may have gaps. You may have multiple colors going to the same pixel. An interpolation scheme or a newton scheme could work for going forwards, but very likely care would be neeeded for a satisfying general result. \"\"\" md\"\"\" Appendix \"\"\" det A det A img sources \"https user images.githubusercontent.com 6933510 108605549 fb28e180 73b4 11eb 8520 7e29db0cc965.png\" \"Corgis\", \"https images.squarespace cdn.com content v1 5cb62a904d546e33119fa495 1589302981165 HHQ2A4JI07C43294HVPD ke17ZwdGBToddI8pDm48kA7bHnZXCqgRu4g0 U7hbNpZw zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3 s 4yszcp2ryTI0HqTOaaUohrI8PISCdr 3EAHMyS8K84wLA7X0UZoBreocI4zSJRMe1GOxcKMshLAGzx4R3EDFOm1kBS fluffy corgi?format 2500w\" \"Long Corgi\", \"https previews.123rf.com images camptoloma camptoloma2002 camptoloma200200020 140962183 pembroke welsh corgi portrait sitting gray background.jpg\" \"Portrait Corgi\", \"https www.eaieducation.com images products 506618 L.jpg\" \"Graph Paper\" img if show grid with gridlines img original n ngrid else img original end begin white c RGB RGB 1,1,1 white c RGBA RGBA 1,1,1,0.75 black c RGB RGB 0,0,0 black c RGBA RGBA 0,0,0,0.75 end function with gridlines img Array Any,2 n 10 n 2n 1 rows, cols size img result copy img stroke zero eltype img RGBA RGB 1,1,1 , 0.75 stroke RGBA 1, 1, 1, 0.75 result floor. Int, LinRange 1, rows, n , . stroke result ceil. Int,LinRange 1, rows, n , . stroke result , floor. Int, LinRange 1, cols, n . stroke result , ceil. Int,LinRange 1, cols, n . stroke result rows ÷2 , . RGBA 0,1,0,1 result 1 rows ÷2 , . RGBA 0,1,0,1 result , cols ÷2 , . RGBA 1,0,0,1 result , 1 cols ÷2 , . RGBA 1,0,0,1 return result end white background x PlutoUI.ExperimentalLayout.Div x style \"background white\" "},{"url":"week4/dynamicprograms/","title":"Dynamic Programming","tags":["lecture","module1"],"text":" A Pluto.jl notebook v0.19.12 frontmatter chapter 1 video \"https www.youtube.com watch?v KyBXJV1zFlo\" image \"https user images.githubusercontent.com 6933510 136196599 c6ae60f0 9269 4134 bb0d 5bcab928bd2b.gif\" section 7 order 7 title \"Dynamic Programming\" layout \"layout.jlhtml\" youtube id \"KyBXJV1zFlo\" description \"\" tags \"lecture\", \"module1\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin import ImageIO using Plots, PlutoUI, Colors, Images end md\"\"\" Intro to Dynamic Programming \"\"\" md\"\"\" What is dynamic progamming? The word \"programming\" here is a rather archaic word but still in use for an optimization problem , as used, for example, in the phrase \"linear programming.\" Probably the word \"programming\" should be abandoned in this context, but no doubt it is too late. \"\"\" md\"\"\" Summing over paths problem \"\"\" md\"\"\" Let's start by looking at the following problem. Let's create a random matrix and follow paths on it. The paths start at one of the square on the top, and can only go downwards, either South East, South, or South West. We will add up the numbers visited along each path. Our goal is to find the path that has the smallest sum. So this is indeed an optimization problem we want to minimize the sum along these particular paths. \"\"\" md\"\"\" n bind n Slider 2 12, show value true, default 8 \"\"\" M rand 0 9, n, n begin paths allpaths n,n numpaths length paths md\"There are numpaths paths to check.\" end md\"\"\" Our goal is to add the numbers on a path and find the minimal path. The winner is number winnernum. \"\"\" md\"\"\" Path bind whichpath Slider 1 numpaths, show value true \"\"\" let path paths whichpath values M i,path i for i 1 n nv length values thetitle join \" values i \" for i 1 nv 1 \" values end sum values \" rectangle w, h, x, y Shape x . 0,w,w,0 , y . 0,0,h,h plot for i 1 n, j 1 n plot rectangle 1,1,i,j , opacity .2, color red, white 1 rem i j,2 end for i 1 n, j 1 n annotate j .5 ,n 2 i .5 , M i,j end The winning path for i 1 n 1 plot winner i 1 .5, winner i .5 , n i .5, n i 1.5 , color RGB 1,.6,.6 , linewidth 4 end for i 1 n 1 plot path i 1 .5, path i .5 , n i .5, n i 1.5 , color black, linewidth 4 end plot xlabel \"winner total winnertotal\", xguidefontcolor RGB 1,.5,.5 for i 1 n,j 1 n plot rectangle .4,.4,i .3,j .3 , opacity 1, color RGB 0,1,0 , linewidth 0,fillcolor RGBA 1,.85,.85,.2 , white 1 rem i j,2 end plot title thetitle plot legend false, aspectratio 1, xlims 1,n 1 , ylims 1,n 1 , axis nothing end md\"\"\" One way to solve this problem is the naive algorithm where we enumerate all the paths, calculate the sum for each, and take the minimum. However, as the matrix gets larger the total number of paths grows exponentially . \"\"\" md\"\"\" Possible research problem Investigate the statistics of the sums over all possible paths. \"\"\" md\"\"\" Fixing a single point on a path \"\"\" md\"\"\" Let's fix a given point i, j and focus only on all those paths that pass through i, j . \"\"\" md\"\"\" i bind fixi Scrubbable 1 n j bind fixj Scrubbable 1 n \"\"\" begin fixedpaths p for p∈paths if p fixi fixj number of fixedpaths length fixedpaths md\"Number of fixed paths number of fixedpaths\" end bind whichfixedpath Slider 1 number of fixedpaths begin path fixedpaths whichfixedpath values M i,path i for i 1 n nv length values thetitle join \" values i \" for i 1 nv 1 \" values end sum values \" rectangle w, h, x, y Shape x . 0,w,w,0 , y . 0,0,h,h plot for i 1 n, j 1 n plot rectangle 1,1,i,j , opacity .2, color red, white 1 rem i j,2 end for i 1 n, j 1 n annotate j .5 ,n 2 i .5 , M i,j end annotate fixj .5 ,n 2 fixi .5 , M fixi,fixj , red for i 1 n 1 i ≥ fixi ? c blue c black plot path i 1 .5, path i .5 , n i .5, n i 1.5 , color c, linewidth 4 end xlabel \"\" for i 1 n,j 1 n plot rectangle .4,.4,i .3,j .3 , opacity 1, color RGB 0,1,0 , linewidth 0,fillcolor RGBA 1,.85,.85,.2 , white 1 rem i j,2 end plot title thetitle plot legend false, aspectratio 1, xlims 1,n 1 , ylims 1,n 1 , axis nothing end md\"\"\" Suppose we fix the point on the penultimate row last but one . When we look at the paths below the fixed value, we're doing the same calculation over and over again. It doesn't seem sensible to keep re doing these calculations. The same holds as we move the fixed point further upwards. So instead of calculating by working \"forwards\", for each box we look at the minimum below it. \"\"\" md\"\"\" The idea of overlapping subproblems \"\"\" md\"\"\" The key point in this problem is that there are overlapping subproblems there are calculations that we don't need to repeat. The idea of dynamic programming is to remember the solution of those subproblems to get an exponential speed up in the calculation speed. \"\"\" begin struct Paths m Int n Int end Base.iterate p Paths fill 1,p.m , fill 1,p.m start the iteration with 1's Base.IteratorSize Type Paths SizeUnknown function Base.iterate p Paths, state if state ≠ fill p.n,p.m end when each row has an n newstate next state,p.n return newstate, newstate end end function next path,n k length path start from the end and find the first element that can be updated by adding 1 while k≥2 && path k n || path k 1 path k 1 1 k 1 end path k 1 add the one then reset the following elements for j k 1 length path path j max path j 1 1,1 end return path end function allpaths m,n v Vector Int paths Paths m,n for p ∈ paths push v,copy p end v end end md\"\"\" Summing Paths Demo \"\"\" begin winnernum argmin sum M i,p i for i 1 n for p∈paths winner paths winnernum winnertotal sum M i,winner i for i 1 n end "},{"url":"week4/hw4/","title":"hw4","tags":[],"text":" A Pluto.jl notebook v0.19.12 using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end md\" homework 3, version 5 \" md\"\"\" Submission by student.name student.kerberos id mit.edu \"\"\" md\"\"\" Homework 4 Dynamic programming `18.S191`, Spring 2021 This notebook contains built in, live answer checks In some exercises you will see a coloured box, which runs a test case on your code, and provides feedback based on the result. Simply edit the code, run it, and the check runs again. For MIT students there will also be some additional secret test cases that will be run as part of the grading process, and we will look at your notebook and write comments. Feel free to ask questions \"\"\" edit the code below to set your name and kerberos ID i.e. email without mit.edu student name \"Jazzy Doe\", kerberos id \"jazz\" you might need to wait until all other cells in this notebook have completed running. scroll around the page to see what's up md\"\"\" Intializing packages When running this notebook for the first time, this could take up to 15 minutes. Hang in there \"\"\" begin import ImageMagick using Images, TestImages, ImageFiltering using Statistics using PlutoUI using BenchmarkTools end all image urls \"https wisetoast.com wp content uploads 2015 10 The Persistence of Memory salvador deli painting.jpg\" \"Salvador Dali — The Persistence of Memory replica \", \"https i.imgur.com 4SRnmkj.png\" \"Frida Kahlo — The Bride Frightened at Seeing Life Opened\", \"https upload.wikimedia.org wikipedia commons thumb 5 5b Hilma af Klint Group IX SUW%2C The Swan No. 1 %2813947%29.jpg 477px Hilma af Klint Group IX SUW%2C The Swan No. 1 %2813947%29.jpg\" \"Hilma Klint The Swan No. 1\", \"https upload.wikimedia.org wikipedia commons thumb a a4 Piet Mondriaan%2C 1930 Mondrian Composition II in Red%2C Blue%2C and Yellow.jpg 300px Piet Mondriaan%2C 1930 Mondrian Composition II in Red%2C Blue%2C and Yellow.jpg\" \"Piet Mondriaan Composition with Red, Blue and Yellow\", \"https user images.githubusercontent.com 6933510 110993432 950df980 8377 11eb 82e7 b7ce4a0d04bc.png\" \"Mario\", md\"\"\" Choose your image bind image url Select all image urls Maximum image size bind max height str Select string. 50,100,200,500 pixels. Using a large image might lead to long runtimes in the later exercises. \"\"\" img decimate to height img original, max height img original load download image url max height parse Int, max height str \"Decimate an image such that its new height is at most `height`.\" function decimate to height img, height factor max 1, 1 size img, 1 ÷ height img 1 factor end, 1 factor end end md\"\"\" Cutting a seam Below is a function called `remove in each row img, pixels `. It takes a matrix `img` and a vector of integers, `pixels`, and shrinks the image by 1 pixel in width by removing the element `img i, pixels i ` in every row. This function is one of the building blocks of the Image Seam algorithm we saw in the lecture. Read it and convince yourself that it is correct. \"\"\" function remove in each row img Matrix, column numbers Vector m, n size img assert m length column numbers same as the number of rows local img′ similar img, m, n 1 create a similar image with one column less for i, j in enumerate column numbers img′ i, 1 j 1 . view img i, 1 j 1 img′ i, j end . view img i, j 1 end end img′ end removal test image Gray. rand 4,4 md\"Let's use our function to remove the diagonal from our image. Take a close look at the images to verify that we removed the diagonal. \" let seam 1,2,3,4 remove in each row removal test image, seam end md\"\"\" Removing the seam ` 1,1,1,1 ` is equivalent to removing the first column \"\"\" let seam 1,1,1,1 remove in each row removal test image, seam end md\"\"\" If we remove the same seam twice, we remove the first two rows \"\"\" let seam 1,1,1,1 result1 remove in each row removal test image, seam result2 remove in each row result1, seam result2 end bigbreak md\"\"\" Brightness and Energy \"\"\" md\"\"\" First, we will define a `brightness` function for a pixel a color as the mean of the red, green and blue values. You should use this function whenever the problem set asks you to deal with brightness of a pixel. \"\"\" begin brightness c RGB mean c.r, c.g, c.b brightness c RGBA mean c.r, c.g, c.b brightness c Gray gray c end Gray. brightness. img md\"\"\"We provide you with a convolve function below. \"\"\" convolve img, k imfilter img, reflect k uses ImageFiltering.jl package behaves the same way as the `convolve` function used in our lectures and homeworks float to color x RGB max 0, x , max 0, x , 0 hbox float to color. convolve brightness. img , Kernel.sobel 1 , float to color. convolve brightness. img , Kernel.sobel 2 , md\"\"\" finally we define the `energy` function which takes the Sobel gradients along x and y directions and computes the norm of the gradient for each pixel. \"\"\" energy ∇x, ∇y sqrt. ∇x.^2 . ∇y.^2 function energy img ∇y convolve brightness. img , Kernel.sobel 1 ∇x convolve brightness. img , Kernel.sobel 2 energy ∇x, ∇y end float to color. energy img bigbreak md\"\"\" Exercise 1 Building up to dynamic programming In this exercise and the following ones, we will use the computational problem of Seam carving. We will think through all the \"gut reaction\" solutions, and then finally end up with the dynamic programming solution that we saw in the lecture. In the process we will understand the performance and accuracy of each iteration of our solution. How to implement the solutions For every variation of the algorithm, your job is to write a function which takes a matrix of energies, and an index for a pixel on the first row, and computes a \"seam\" starting at that pixel. The function should return a vector of as many integers as there are rows in the input matrix where each number points out a pixel to delete from the corresponding row. it acts as the input to `remove in each row` . \"\"\" md\"\"\" Exercise 1.1 The greedy approach The first approach discussed in the lecture included below is the greedy approach you start from your top pixel, and at each step you just look at the three neighbors below. The next pixel in the seam is the neighbor with the lowest energy. \"\"\" html\"\"\" iframe width \"100%\" height \"450px\" src \"https www.youtube.com embed rpB6zQNsbQU?start 777&end 833\" frameborder \"0\" allow \"accelerometer autoplay encrypted media gyroscope picture in picture\" allowfullscreen iframe \"\"\" random seam m, n, i reduce a, b a..., clamp last a rand 1 1 , 1, n , 1 m 1 init i md\"\"\" 👉 Implement the greedy approach. \"\"\" function greedy seam energies, starting pixel Int m, n size energies you can delete the body of this function it's just a placeholder. random seam size energies ..., starting pixel end md\"Before we apply your function to our test image, let's try it out on a small matrix of energies displayed here in grayscale , just like in the lecture snippet above clicking on the video will take you to the right part of the video . Light pixels have high energy, dark pixels signify low energy.\" md\"Starting pixel bind greedy starting pixel Slider 1 size grant example, 2 show value true, default 5 \" greedy seam result greedy seam grant example, greedy starting pixel visualize seam algorithm grant example, greedy seam result let s sum grant example i,j for i, j in enumerate greedy seam result md\"\"\" Total energy round s,digits 1 \"\"\" end grant example 1 8 8 3 5 4 7 8 1 0 8 4 8 0 4 7 2 9 9 0 0 5 9 4 2 4 0 2 4 5 2 4 2 5 3 0 . 10 Gray. grant example begin function visualize seam algorithm test energies, algorithm Function, starting pixel Integer seam algorithm test energies, starting pixel visualize seam algorithm test energies, seam end function visualize seam algorithm test energies, seam Vector display img RGB. test energies for i, j in enumerate seam try display img i, j RGB 0.9, 0.3, 0.6 catch ex if ex isa BoundsError return keep working \"\" end the solution might give an illegal index end end display img end end md\" Let's try it on the bigger image \" begin reactive references to uncheck the checkbox when the functions are updated greedy seam, img, grant example md\"Compute shrunk image bind shrink greedy CheckBox \" end if shrink greedy local n min 200, size img, 2 greedy carved shrink n greedy seam, img, n md\"Shrink by bind greedy n Slider 1 n show value true \" end if shrink greedy greedy carved greedy n end md\"\"\" Exercise 1.2 Recursion A common pattern in algorithm design is the idea of solving a problem as the combination of solutions to subproblems. The classic example, is a Fibonacci number https en.wikipedia.org wiki Fibonacci number generator. The recursive implementation of Fibonacci looks something like this \"\"\" function fib n base case basis if n 0 || n 1 `||` means \"or\" return 1 end recursion induction return fib n 1 fib n 2 end md\"\"\" Notice that you can call a function from within itself which may call itself and so on until a base case is reached. Then the program will combine the result from the base case up to the final result. In the case of the Fibonacci function, we added the solutions to the subproblems `fib n 1 `, `fib n 2 ` to produce `fib n `. An analogy can be drawn to the process of mathematical induction in mathematics. And as with mathematical induction there are parts to constructing such a recursive algorithm Defining a base case Defining an recursion i.e. finding a solution to the problem as a combination of solutions to smaller problems. \"\"\" md\"\"\" 👉 Define a `least energy` function which returns 1. the lowest possible total energy for a seam starting at the pixel at i, j 2. the column to jump to on the next move in row i 1 , which is one of j 1 , j or j 1 , up to boundary conditions. Return these two values in a tuple. \"\"\" returns lowest possible sum energy at pixel i, j , and the column to jump to in row i 1. function least energy energies, i, j m, n size energies base case if i something return energies ... , ... no need for recursive computation in the base case end induction combine results from recursive calls to `least energy`. end least energy grant example, 1, 4 grant example if isdefined least energy not defined least energy else let result1 least energy grant example, 6, 4 if result1 isa Tuple keep working md\"Your function should return a tuple , like ` 1.2, 5 `.\" elseif result1 isa Tuple Float64,Int keep working md\"Your function should return a tuple , like ` 1.2, 5 `.\" else result least energy grant example, 1, 4 if result isa Tuple Float64,Int keep working md\"Your function should return a tuple , like ` 1.2, 5 `.\" else a, b result if a ≈ 0.3 && b 4 almost md\"Only search the at most three cells that are within reach.\" elseif a ≈ 0.6 && b 3 correct else keep working end end end end end md\"\"\" Expected output As shown in the lecture, the optimal seam from the point 1,4 should be \"\"\" grant example optimal seam 4, 3, 2, 2, 3, 3 md\"\"\" So we expect the output of `least energy grant example, 1, 4 ` to be \"\"\" sum grant example i, grant example optimal seam i for i in 1 6 , grant example optimal seam 2 hint md\"You can call the `least energy` function recursively within itself to obtain the least energy of the adjacent cells and add the energy at the current cell to get the total energy.\" md\"\"\" This is elegant and correct, but inefficient Let's look at the number of accesses made to the energies array needed to compute the least energy seam of a 10x10 image \"\"\" track access rand 10,10 do tracked least energy tracked, 1, 5 end md\"Whoa We will need to optimize this later \" begin struct AccessTrackerArray T,N AbstractArray T,N data Array T,N accesses Ref Int end Base.IndexStyle Type AccessTrackerArray IndexLinear Base.size x AccessTrackerArray size x.data Base.getindex x AccessTrackerArray, i Int... x.accesses 1 x.data i... Base.setindex x AccessTrackerArray, v, i... x.accesses 1 x.data i... v track access x AccessTrackerArray x, Ref 0 function track access f Function, x Array tracked track access x f tracked tracked.accesses end end md\"\"\" Exercise 1.3 Exhaustive search with recursion Now use the `least energy` function you defined above to define the `recursive seam` function which takes the energies matrix and a starting pixel, and computes the seam with the lowest energy from that starting pixel. This will give you the method used in the lecture to perform exhaustive search of all possible paths https youtu.be rpB6zQNsbQU?t 839 . \"\"\" function recursive seam energies, starting pixel m, n size energies Replace the following line with your code. rand 1 starting pixel for i 1 m end md\"\"\" We won't use this function to shrink our larger image, because it is too inefficient. Your notebook might get stuck But let's try it on the small example matrix from the lecture, to verify that we have found the optimal seam. \"\"\" recursive seam test recursive seam grant example, 4 if recursive seam test grant example optimal seam correct else keep working end md\"\"\" Exercise 1.4 State clearly why this algorithm does an exhaustive search of all possible paths. How does the number of possible seam grow as n increases for a `m×n` image? Big O notation is fine, or an approximation is fine . \"\"\" exhaustive observation md\"\"\" your answer here \"\"\" md\"\"\" Exercise 2 Memoization Memoization is the name given to the technique of storing results to expensive function calls that will be accessed more than once. As stated in the video, the function `least energy` is called repeatedly with the same arguments. In fact, we call it on the order of 3^n times, when there are only really m \\times n unique ways to call it Lets implement memoization on this function with first a dictionary https docs.julialang.org en v1 base collections Dictionaries for storage. \"\"\" md\"\"\" Exercise 2.1 Dictionary as storage Let's make a memoized version of least energy function which takes a dictionary and first checks to see if the dictionary contains the key i,j if it does, returns the value stored in that place, if not, will compute it, and store it in the dictionary at key i, j and return the value it computed. `memoized least energy energies, starting pixel, memory ` This function must recursively call itself, and pass the same `memory` object it received as an argument. You are expected to read and understand the documentation on dictionaries https docs.julialang.org en v1 base collections Dictionaries to find out how to 1. Create a dictionary 2. Check if a key is stored in the dictionary 3. Access contents of the dictionary by a key. \"\"\" function memoized least energy energies, i, j, memory Dict m, n size energies you should start by copying the code from your not memoized least energies function. end memoized least energy test memoized least energy grant example, 1, 4, Dict md\"\"\" Let's see how many matrix access we have now \"\"\" track access rand 10,10 do tracked memoized least energy tracked, 1, 5, Dict end let result track access rand 10,10 do tracked memoized least energy tracked, 1, 5, Dict end if result 0 nothing elseif result 200 correct else keep working md\"That's still too many accesses Did you forget to add a result to the `memory`?\" end end function memoized recursive seam energies, starting pixel we set up the the memory note the key type Tuple Int,Int and the value type Tuple Float64,Int . If you need to memoize something else, you can just use Dict without types. memory Dict Tuple Int,Int ,Tuple Float64,Int m, n size energies Replace the following line with your code. you should start by copying the code from your not memoized recursive seam function. end memoized recursive seam grant example, 4 grant example optimal seam let aresult track access rand 10,10 do tracked memoized recursive seam tracked, 5 end if aresult 200 if memoized recursive seam grant example, 4 grant example optimal seam correct else keep working md\"The returned seam is not correct. Did you implement the non memoized version correctly?\" end else keep working md\"Careful Your `memoized recursive seam` is still making too many memory accesses, you may not want to run the visualization below.\" end end begin reactive references to uncheck the checkbox when the functions are updated img, memoized recursive seam, shrink n md\"Compute shrunk image bind shrink dict CheckBox \" end if shrink dict local n min 20, size img, 2 dict carved shrink n memoized recursive seam, img, n md\"Shrink by bind dict n Slider 1 n, show value true \" end if shrink dict dict carved dict n end md\"\"\" Exercise 2.2 Matrix as storage optional The dictionary based memoization we tried above works well in general as there is no restriction on what type of keys can be used. But in our particular case, we can use a matrix as a storage, since a matrix is naturally keyed by two integers. 👉 Write a variant of `matrix memoized least energy` and `matrix memoized seam` which use a matrix as storage. \"\"\" function matrix memoized least energy energies, i, j, memory Matrix m, n size energies Replace the following line with your code. end hint md\"We recommend using a matrix with element type `Union Nothing, Tuple Float64,Int `, initialized to all `nothing`s. You can check whether the value at ` i,j ` has been computed before using `memory i,j nothing`.\" function matrix memoized seam energies, starting pixel memory Matrix Union Nothing,Tuple Float64,Int nothing, size energies use me instead of you use a different element type memory Matrix Any nothing, size energies m, n size energies Replace the following line with your code. starting pixel for i 1 m end begin matrix memoized seam, img md\"Compute shrunk image bind shrink matrix CheckBox \" end if shrink matrix local n min 20, size img, 2 matrix carved shrink n matrix memoized seam, img, n md\"Shrink by bind matrix n Slider 1 n, show value true \" end if shrink matrix matrix carved matrix n end bigbreak md\"\"\" Exercise 3 Dynamic programming without recursion Now it's easy to see that the above algorithm is equivalent to one that populates the memory matrix in a for loop. Exercise 3.1 👉 Write a function which takes the energies and returns the least energy matrix which has the least possible seam energy for each pixel. This was shown in the lecture, but attempt to write it on your own. \"\"\" function least energy matrix energies result copy energies m, n size energies your code here return result end if isdefined least energy matrix not defined least energy matrix elseif le test isa Matrix Real keep working md\"`least energy matrix` should return a 2D array of Float64 values.\" end le test least energy matrix img brightness spooky le test img brightness brightness. img spooky A Matrix Real map sqrt. A . maximum A do x RGB .8x, x, .8x end md\"\"\" Exercise 3.2 👉 Write a function which, when given the matrix returned by `least energy matrix` and a starting pixel on the first row , computes the least energy seam from that pixel. \"\"\" function seam from precomputed least energy energies, starting pixel Int least energies least energy matrix energies m, n size least energies Replace the following line with your code. starting pixel for i 1 m end begin img, seam from precomputed least energy md\"Compute shrunk image bind shrink bottomup CheckBox \" end if shrink bottomup local n min 40, size img, 2 bottomup carved shrink n seam from precomputed least energy, img, n md\"Shrink by bind bottomup n Slider 1 n, show value true \" end if shrink bottomup bottomup carved bottomup n end if isdefined seam from precomputed least energy not defined seam from precomputed least energy end if student.kerberos id \"jazz\" md\"\"\" danger \"Oops \" Before you submit , remember to fill in your name and kerberos ID at the top of this notebook \"\"\" end bigbreak md\" Function library Just some helper functions used in the notebook.\" function shrink n min seam Function, img Matrix Colorant , n, imgs show lightning true, n 0 && return push imgs, img e energy img seam energy seam sum e i, seam i for i in 1 size img, 1 , min j findmin map j seam energy min seam e, j , 1 size e, 2 min seam vec min seam e, min j img′ remove in each row img, min seam vec if show lightning push imgs, mark path img, min seam vec else push imgs, img′ end shrink n min seam, img′, n 1, imgs show lightning show lightning end function mark path img, path img′ RGB. img also makes a copy m size img, 2 for i, j in enumerate path if size img, 2 50 To make it easier to see, we'll color not just the pixels of the seam, but also those adjacent to it for j′ in j 1 j 1 img′ i, clamp j′, 1, m RGB 1,0,1 end else img′ i, j RGB 1,0,1 end end img′ end function pencil X f x RGB 1 x,1 x,1 x map f, X . maximum X end function decimate img, n img 1 n end, 1 n end end hint text Markdown.MD Markdown.Admonition \"hint\", \"Hint\", text almost text Markdown.MD Markdown.Admonition \"warning\", \"Almost there \", text still missing text md\"Replace `missing` with your answer.\" Markdown.MD Markdown.Admonition \"warning\", \"Here we go \", text keep working text md\"The answer is not quite right.\" Markdown.MD Markdown.Admonition \"danger\", \"Keep working on it \", text yays md\"Great \", md\"Yay ❤\", md\"Great 🎉\", md\"Well done \", md\"Keep it up \", md\"Good job \", md\"Awesome \", md\"You got the right answer \", md\"Let's move on to the next section.\" correct text rand yays Markdown.MD Markdown.Admonition \"correct\", \"Got it \", text not defined variable name Markdown.MD Markdown.Admonition \"danger\", \"Oopsie \", md\"Make sure that you define a variable called Markdown.Code string variable name \" function hbox x, y, gap 16 sy size y , sx size x w, h max sx 1 , sy 1 , gap sx 2 sy 2 slate fill RGB 1,1,1 , w,h slate 1 size x,1 , 1 size x,2 . RGB. x slate 1 size y,1 , size x,2 gap . 1 size y,2 . RGB. y slate end vbox x,y, gap 16 hbox x', y' ' bigbreak html\" br br br br br \" "},{"url":"week4/seamcarving/","title":"Seam Carving","tags":["lecture","module1"],"text":" A Pluto.jl notebook v0.19.12 frontmatter chapter 1 video \"https www.youtube.com watch?v KyBXJV1zFlo\" image \"https user images.githubusercontent.com 6933510 136196584 b3c806a8 aa61 48d9 9e73 30583fcc38bf.gif\" section 8 order 8 title \"Seam Carving\" layout \"layout.jlhtml\" youtube id \"KyBXJV1zFlo\" description \"\" tags \"lecture\", \"module1\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end md\"\"\" Seam carving on images \"\"\" md\"\"\" Scroll through the images in this notebook. The idea of seam carving is to shrink an image by removing the \"least interesting\" parts of the image, but without resizing the objects within the image. We want to remove the \"dead space\" within the image. We try to find a \"seam\", i.e. a connected path of pixels from top to bottom of the image, which consists of the \"least important\" pixels, by some measure. We then remove the pixels in that seam to give an image that is one pixel narrower. In order to do this, we need to decide how to measure which pixels are \"important\". \"\"\" md\"\"\" Fall 2020 MIT Class Video from Grant Sanderson Here is Grant Sanderson 3Blue1Brown explaining seam carving using this notebook from the Fall 2020 edition of this class. \"\"\" html\"\"\" div notthestyle \"position relative right 0 top 0 z index 300 \" iframe src \"https www.youtube.com embed rpB6zQNsbQU\" width 400 height 250 frameborder \"0\" allow \"accelerometer autoplay encrypted media gyroscope picture in picture\" allowfullscreen iframe div \"\"\" begin using ImageMagick using Colors, ColorVectorSpace, ImageShow, FileIO, ImageIO using ImageFiltering using Plots, PlutoUI Standard libraries using Statistics, LinearAlgebra Small patch to make images look more crisp https github.com JuliaImages ImageShow.jl pull 50 Base.showable MIME\"text html\", AbstractMatrix Colorant false end md\"\"\" The seam carving algorithm We need to specify a notion of importance of pixels. The seam will then sum up the importance of pixels over the seam and pick the seam which minimizes this total importance. We will assign importance as \"the extent to which a pixel sits inside an edge\". So we need to calculate the \"edgeness\" of each pixel. \"\"\" md\"\"\" 1. We will use convolution with Sobel filters for edge detection. 2. Then we will use that to write an algorithm that removes \"uninteresting\" bits of an image in order to shrink it. \"\"\" image urls \"https wisetoast.com wp content uploads 2015 10 The Persistence of Memory salvador deli painting.jpg\", \"https upload.wikimedia.org wikipedia commons thumb 1 17 Gustave Caillebotte Paris Street%3B Rainy Day Google Art Project.jpg 1014px Gustave Caillebotte Paris Street%3B Rainy Day Google Art Project.jpg\", \"https upload.wikimedia.org wikipedia commons thumb 1 17 Gustave Caillebotte Paris Street%3B Rainy Day Google Art Project.jpg 1014px Gustave Caillebotte Paris Street%3B Rainy Day Google Art Project.jpg\", \"https upload.wikimedia.org wikipedia commons thumb c cc Grant Wood American Gothic Google Art Project.jpg 480px Grant Wood American Gothic Google Art Project.jpg\", \"https wisetoast.com wp content uploads 2015 10 The Persistence of Memory salvador deli painting.jpg\", \"https upload.wikimedia.org wikipedia commons thumb 7 7d A Sunday on La Grande Jatte%2C Georges Seurat%2C 1884.jpg 640px A Sunday on La Grande Jatte%2C Georges Seurat%2C 1884.jpg\", \"https upload.wikimedia.org wikipedia commons thumb e ea Van Gogh Starry Night Google Art Project.jpg 758px Van Gogh Starry Night Google Art Project.jpg\", \"https web.mit.edu facilities photos construction Projects stata 1 large.jpg\", image url image urls 1 img load download image url arbitrarily choose the brightness of a pixel as mean of rgb brightness c AbstractRGB mean c.r, c.g, c.b Use a weighted sum of rgb giving more weight to colors we perceive as 'brighter' Based on https www.tutorialspoint.com dip grayscale to rgb conversion.htm brightness c AbstractRGB 0.3 c.r 0.59 c.g 0.11 c.b Gray. brightness. img md\"\"\" Edge detection filter Spoiler alert We use the Sobel edge detection filter we created in our Homework. ```math \\begin align G x & \\begin bmatrix 1 & 0 & 1 \\\\ 2 & 0 & 2 \\\\ 1 & 0 & 1 \\\\ \\end bmatrix \\star A\\\\ 10pt G y & \\begin bmatrix 1 & 2 & 1 \\\\ 0 & 0 & 0 \\\\ 1 & 2 & 1 \\\\ \\end bmatrix \\star A \\end align ``` Here, \\star denotes convolution. Here A is the array corresponding to your image. We can think of G x and G y as calculating discretized derivatives in the x and y directions. Then we combine them by finding the magnitude of the discretized gradient , in the sense of multivariate calculus, by defining G \\text total \\sqrt G x^2 G y^2 . \"\"\" md\"\"\" Here are the Sobel kernels for the derivatives in each direction \"\"\" Sy, Sx Kernel.sobel hbox show colored array Sx .parent, show colored array Sy .parent ,10 collect Int. 8 . Sx , collect Int. 8 . Sy begin img brightness brightness. img ∇x convolve img brightness, Sx ∇y convolve img brightness, Sy hbox show colored array ∇x , show colored array ∇y end plotly surface brightness. img md\"\"\" blue shows positive values red shows negative values G x \\hspace 180pt G y \"\"\" let ∇y convolve brightness. img , Sy ∇x convolve brightness. img , Sx zoom in on the clock vbox hbox img 300 end, 1 300 , img 300 end, 1 300 , hbox show colored array. ∇x 300 end, 1 300 , ∇y 300 end, 1 300 ... end function edgeness img Sy, Sx Kernel.sobel b brightness. img ∇y convolve b, Sy ∇x convolve b, Sx sqrt. ∇x.^2 ∇y.^2 end begin edged edgeness img hbox img, pencil edged hbox img, Gray. edgeness img maximum abs. edged end function shrink image image, ratio 5 height, width size image new height height ÷ ratio 1 new width width ÷ ratio 1 list mean image ratio i ratio i 1 , ratio j ratio j 1 , for j in 1 new width for i in 1 new height reshape list, new height, new width end function convolve M, kernel height, width size kernel half height height ÷ 2 half width width ÷ 2 new image similar M i, j loop over the original image m, n size M inbounds for i in 1 m for j in 1 n k, l loop over the neighbouring pixels accumulator 0 M 1, 1 for k in half height half height height 1 for l in half width half width width 1 Mi i k Mj j l First index into M if Mi 1 Mi 1 elseif Mi m Mi m end Second index into M if Mj 1 Mj 1 elseif Mj n Mj n end accumulator kernel k, l M Mi, Mj end end new image i, j accumulator end end return new image end function show colored array array pos color RGB 0.36, 0.82, 0.8 neg color RGB 0.99, 0.18, 0.13 to rgb x max x, 0 pos color max x, 0 neg color to rgb. array maximum abs. array end md\"\"\" Seam carving idea The idea of seam carving is to find a path from the top of the image to the bottom of the image where the path minimizes the edgness. In other words, this path minimizes the number of edges in the image that it crosses . We will call the edgeness the energy . \"\"\" md\"\"\" At every step in going down, the path is allowed to go south west, south or south east. We want to find a connected path, or seam , with the minimum possible sum of \"energies\" along the path. We start by writing a `least edgy` function which takes a matrix of energies and returns a new matrix. The new matrix has entries M i, j which gives the minimum possible energy when starting from the pixel i, j and going from there down to a pixel in the bottom row. \"\"\" e x,y ↙ ↓ ↘ pick the next path which gives the least overall energy e x 1,y 1 e x,y 1 e x 1,y 1 Basic calculation e x,y min e x 1,y 1 , e x,y , e x 1,y `dirs` records which direction we take from 1 SW, 0 S, 1 SE function least edgy E least E zeros size E dirs zeros Int, size E least E end, . E end, the minimum energy on the last row is the energy itself m, n size E Go from the last row up, finding the minimum energy for i in m 1 1 1 for j in 1 n j1, j2 max 1, j 1 , min j 1, n e, dir findmin least E i 1, j1 j2 least E i,j e least E i,j E i,j dirs i, j 1, 0, 1 dir j 1 end end return least E, dirs end The bright areas are screaming \"AVOID ME \" least e, dirs least edgy edgeness img show colored array least e md\"\"\" Here are the directions that we should take at each step \"\"\" direction the path should take at every pixel. reduce x, y x y \"\\n\", reduce , getindex. \" \", \"↙\", \"↓\", \"↘\" , , dirs 1 25, 1 60 . 3 , dims 2, init \"\" , init \"\" | Text md\" Remove seams\" md\"\"\" We now compress an image horizontally by successively removing a number of seams of lowest energy. \"\"\" function get seam at dirs, j m size dirs, 1 js fill 0, m js 1 j for i 2 m js i js i 1 dirs i 1, js i 1 end return tuple. 1 m, js end get seam at dirs, 2 path get seam at dirs, start column function mark path img, path img′ copy img m size img, 2 for i, j in path To make it easier to see, we'll color not just the pixels of the seam, but also those adjacent to it for j′ in j 1 j 1 img′ i, clamp j′, 1, m RGB 1,0,1 end end return img′ end md\"\"\" In the visualization below, the slider specifies which column we start with at the top. The pink seam is the best least total energy that will be snipped out. \"\"\" bind start column Slider 1 size img, 2 , show value true hbox mark path img, path , mark path show colored array least e , path function pencil X f x RGB 1 x,1 x,1 x map f, X . maximum X end e edgeness img let hbox mark path img, path , mark path pencil e , path end let least energy path of them all , k findmin least e 1, path get seam at dirs, k hbox mark path img, path , mark path show colored array least e , path end function rm path img, path img′ img , 1 end 1 one less column for i, j in path img′ i, 1 j 1 . img i, 1 j 1 img′ i, j end . img i, j 1 end end img′ end function shrink n img, n imgs marked imgs e edgeness img for i 1 n least E, dirs least edgy e , min j findmin view least E 1, seam get seam at dirs, min j img rm path img, seam Recompute the energy for the new image Note, this currently involves rerunning the convolution on the whole image, but in principle the only values that need recomputation are those adjacent to the seam, so there is room for a meanintful speedup here. e edgeness img e rm path e, seam push imgs, img push marked imgs, mark path img, seam end imgs, marked imgs end n examples min 200, size img, 2 returns two vectors of n successively smaller images The second images have markings where the seam is cut out carved, marked carved shrink n img, n examples md\"\"\" Seam carving in action \"\"\" md\"\"\" Here is the algorithm in action. Now the slider tells us on which step of the algorithm we are, having removed each least energy seam at each step \"\"\" bind n Slider 1 length carved md\"shrunk by n \" hbox img, marked carved n , sy size img vbox x,y, gap 16 hbox x', y' ' function hbox x, y, gap 16 sy size y , sx size x w, h max sx 1 , sy 1 , gap sx 2 sy 2 slate fill RGB 1,1,1 , w,h slate 1 size x,1 , 1 size x,2 . RGB. x slate 1 size y,1 , size x,2 gap . 1 size y,2 . RGB. y slate end size img size carved n "},{"url":"week4/structure/","title":"Taking Advantage of Structure","tags":["lecture","module1"],"text":" A Pluto.jl notebook v0.19.12 frontmatter chapter 1 video \"https www.youtube.com watch?v wZrVxbmX218\" image \"https user images.githubusercontent.com 6933510 136196581 ffdf4a3b f35c 4eb8 85a7 f07560bd421b.png\" section 9 order 9 title \"Taking Advantage of Structure\" layout \"layout.jlhtml\" youtube id \"wZrVxbmX218\" description \"\" tags \"lecture\", \"module1\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end PlutoUI.TableOfContents aside true md\" Examples of structure\" begin using Colors, ColorVectorSpace, ImageShow, FileIO, ImageIO using ImageShow.ImageCore using ColorSchemes using InteractiveUtils, PlutoUI using LinearAlgebra, SparseArrays, Statistics Small patch to make images look more crisp https github.com JuliaImages ImageShow.jl pull 50 Base.showable MIME\"text html\", AbstractMatrix Colorant false end md\"\"\" One hot vectors This example comes from machine learning. \"\"\" md\"\"\" A one hot vector has a single \"hot\" element, i.e. a single 1 in a sea of zeros. For example \"\"\" myonehatvector 0, 1, 0, 0, 0, 0 md\"\"\"How much \"information\" numbers do you need to represent a one hot vector? Is it n or is it two? \"\"\" md\"\"\" There are also \"1 cold\" vectors \"\"\" also one \"cold\" 1 . myonehatvector md\"\"\" Julia `structs` creating a new type in Julia \"\"\" md\"\"\" We can create our own new types in Julia. Let's create a new type to represent one hot vectors. It will be a subtype of `AbstractVector`, meaning that it behaves like a vector. \"\"\" struct OneHot AbstractVector Int n Int k Int end md\"\"\" We need to specify how long the vector is \"\"\" Base.size x OneHot x.n, md\"\"\" and how to extract the i th component \"\"\" Base.getindex x OneHot, i Int Int x.k i md\"\"\" Note that `x.k i` returns a Boolean value, `true` or `false`, which we are then converting to an `Int`. \"\"\" myonehotvector OneHot 6,2 myonehotvector 3 myonehotvector 2 md\"\"\" This behaves as if it were the original vector, but we are storing only 2 integers. This is an example of taking advantage of structure. \"\"\" md\"\"\" Julia dump and Dump \"\"\" md\"\"\" `dump` shows the internal data stored inside a given object \"\"\" with terminal do dump myonehotvector end md\"\"\" Since `dump` writes to a terminal, you can't use it directly inside Pluto, which is why we wrap it inside a `with terminal` block. You can also use the function `Dump` from `PlutoUI` \"\"\" Dump myonehotvector myonehotvector md\"\"\" Visualizing a one hot vector \"\"\" md\"\"\" n bind nn Slider 1 20, show value true \"\"\" md\"\"\" k bind kk Slider 1 nn, default 1, show value true \"\"\" x OneHot nn, kk show image x md\" Diagonal matrices\" md\"Another example is diagonal matrices. Here's how you might see them in high school \" denseD 5 0 0 0 6 0 0 0 10 md\"Julia has a better way of representing them \" D Diagonal denseD md\"\"\" It even displays nicely, with dots instead of zeros. We can also create a diagonal matrix from the values on the diagonal \"\"\" Diagonal 5, 6, 10 md\"How much information is stored for each representation? We can use Julia's `dump` function to find out \" Dump denseD Dump D md\"\"\" We see that `Diagonal` stores only the diagonal entries, not the zeros \"\"\" md\"\"\"We should always look for structure where it exists \"\"\" md\" Sparse matrices\" md\"A sparse matrix is a matrix that has many zeros, and is hence worth storing in a sparse representation \" denseM 0 0 9 0 0 0 12 0 4 md\"\"\" The above displays a sparse matrix in so called ` i, j, value ` form. We could store sparse matrices in this way \"\"\" M sparse denseM md\"\"\" Although it looks like it's stored like this, in fact the actual storage format is different. In the Julia `SparseArrays.jl` package, the storage format is compressed sparse column CSC format, which is generally considered favorable for arithmetic, matrix vector products and column slicing. Of course, for specific matrices, other formats might be better. `nzval` contains the nonzero matrix entries `rowval` is the \"i\" or row entry for the corresponding value in nzval length rowval length nzval `colptr j ` points into nzval and tells you the first nonzero in or after column j The last entry of colptr points beyond the end of nzval to indicate no more columns. length colptr number of columns 1 \"\"\" Dump sparse M md\"\"\" An example where CSC may not be a great choice is the following. The reason is that `colptr` must have an entry in each column \"\"\" M2 sparse 1, 2, 10^6 , 4, 9, 10^6 , 7, 8, 9 with terminal do dump M2 end M3 1 0 2 0 10 0 3 4 0 9 0 0 0 5 8 0 0 0 0 7 M4 M3 . 0 Dump sparse M4 sparse M4 md\"\"\" Random vectors \"\"\" md\"How much structure is there in a random vector?\" v rand 1 9, 1 000 000 md\"\"\"You might guess that there is \"no structure\". But you can actually think of randomness itself as a structure. For example, take the mean and standard deviation some would say that's the structure. \"\"\" mean v , std v , 5, sqrt 10 2 3 md\"\"\" If you repeat the calculation, to 3 or 4 digits the mean and standard deviation don't change, and are approximately equal to the theoretical values on the right. \"\"\" md\"\"\" We can also count how many times each digit occurs in the data set \"\"\" sum v . i for i in 1 9 md\"\"\" We see that each number occurs roughly the same number of times. \"\"\" md\"Statisticians and professors who've just graded exams might say that under certain circumstances the mean and the variance give you the necessary structure, and the rest can be thrown away.\" m sum v length v mean σ² sum v . m .^ 2 length v 1 σ sqrt σ² std v md\"Sometimes the summary statistics are all you want. But sometimes not. \" md\" Multiplication tables\" outer v, w x y for x ∈ v, y ∈ w just a multiplication table outer 1 10, 1 10 md\"Did you memorize this in third grade?\" bind k Slider 1 14, show value true outer 1 k, 1 k outer 2,4,6 , 10,100,1000 md\"\"\" A multiplication table is clearly a structure, but it's not sparse there are no zeros. Nonetheless you need much less information to reconstruct the matrix. \"\"\" md\"In the context of 1 k times 1 k, just one number k is needed.\" md\"If you look at the following matrix? Does it have any structure? It's certainly more hidden.\" outer rand 3 , rand 4 but it's just a multiplication table md\"\"\" You might guess by visualizing the matrix that it is a multiplication table \"\"\" show image outer rand 10 , rand 10 md\"We can factor out a multiplication table, if it's there \" md\"\"\" Julia Exceptions are thrown generated using `error` An exception is anything that can interrupt a program, e.g. invalid input data. \"\"\" function factor mult table v mult table , 1 w mult table 1, if v 1 ≠ 0 w v 1 end Good code has a check if outer v, w ≈ mult table return v, w else error \"Input is not a multiplication table\" end end factor outer 1, 2, 3 , 2, 2, 2 md\"\"\" A random 2x2 matrix is not a multiplication table. Most matrices are not given by multiplication tables. \"\"\" factor rand 2,2 md\" Let's add two or more multiplication tables \" A sum outer rand 3 ,rand 3 for i 1 2 md\"Is it possible, given the matrix, to find the structure? E.g. to show that a matrix is a sum of outer products multiplication table .\" md\"The answer is yes The Singular Value Decomposition SVD from algebra can find the structure \" md\"\"\" Let's take the SVD and calculate the sum of two outer products \"\"\" begin U, Σ, V svd A outer U , 1 , V , 1 Σ 1 outer U , 2 , V , 2 Σ 2 end md\"\"\" We see that we reconstruct the original matrix \" \"\"\" B rand 3,3 begin UU, ΣΣ, VV svd B outer UU ,1 , VV ,1 ΣΣ 1 outer UU ,2 , VV ,2 ΣΣ 2 end md\"and it can approximate too \" flag outer 1,1,1,2,2,2,1,1,1 , 1,1,1,1,1,1,1,1,1 cs distinguishable colors 100 cs flag cs flag flag' outer 1,1,1,2,2,2,1,1,1 , 1,1,1,1,1,1,1,1,1 outer 1,1,1,1,1,1,1,1,1 , 1,1,1,2,2,2,1,1,1 cs outer 1,1,1,2,2,2,1,1,1 , 1,1,1,1,1,1,1,1,1 outer 1,1,1,1,1,1,1,1,1 , 1,1,1,2,2,2,1,1,1 md\"\"\" Singular Value Decomposition SVD A tool to find structure \"\"\" tree url \"https user images.githubusercontent.com 6933510 110924885 d7f1b200 8322 11eb 9df7 7abf29c8db7d.png\" image load download tree url picture Float64. channelview image size picture pr, pg, pb eachslice picture, dims 1 RGB. pr, 0, 0 RGB. 0, pg, 0 RGB. 0, 0, pb begin Ur, Σr, Vr svd pr Ug, Σg, Vg svd pg Ub, Σb, Vb svd pb end bind n Slider 1 200, show value true RGB. sum outer Ur ,i , Vr ,i . Σr i for i in 1 n , sum outer Ug ,i , Vg ,i . Σg i for i in 1 n , sum outer Ub ,i , Vb ,i . Σb i for i in 1 n md\" Appendix\" md\" Syntax Learned\" md\"\"\" Syntax to be learned A `struct` is a great way to embody structure. `dump` and `Dump` to see what's inside a data structure. `Diagonal`, `sparse` `error` throws an exception `svd` Singular Value Decomposition \"\"\" dump, Diagonal, error, svd begin show image M get. ColorSchemes.rainbow , M . maximum M show image x AbstractVector show image x' end "},{"url":"week5/hw5/","title":"hw5","tags":[],"text":" A Pluto.jl notebook v0.19.12 using Markdown using InteractiveUtils md\" homework 5, version 3 \" md\"\"\" Submission by student.name student.kerberos id mit.edu \"\"\" md\"\"\" Homework 5 Structure `18.S191`, Spring 2021 This notebook contains built in, live answer checks In some exercises you will see a coloured box, which runs a test case on your code, and provides feedback based on the result. Simply edit the code, run it, and the check runs again. For MIT students there will also be some additional secret test cases that will be run as part of the grading process, and we will look at your notebook and write comments. Feel free to ask questions \"\"\" edit the code below to set your name and kerberos ID i.e. email without mit.edu student name \"Jazzy Doe\", kerberos id \"jazz\" you might need to wait until all other cells in this notebook have completed running. scroll around the page to see what's up md\"\"\" Intializing packages When running this notebook for the first time, this could take up to 15 minutes. Hang in there \"\"\" using PlutoUI bigbreak md\"\"\" Exercise 1 When is zero not quite zero? Students used to pure math are sometimes surprised to see numbers like `1e 15`, `1e 16`, or `1e 17` appearing in computations when `0` might have been expected. At first glance, this behaviour seems 'random' or 'noisy', but in this exercise, we will try to demonstrate some structure behind floating point artihmetic. Exercise 1.1 👉 Find all integers j with 1 ≤ j ≤ 1000 for which Julia's result satisfies `j 1 j ≠ 1`. \"\"\" md\"\"\" Try writing this without a `for` loop. Ideas ☝️ Use `filter`. ☝️ Comprehensions can have `if` clauses, as in ` j for j 1 1000 if 5 j 17 `. \"\"\" | hint md\"\"\" Notice that when you re run the computation, the result does not change. Floating point arithmetic is not random Exercise 1.2 👉 Take the smallest number `j` you found above and compute the error, i.e. the distance between `j 1 j ` and `1`. Is this an integer power of 2? Which one? `log2` might help. \"\"\" md\"\"\" Exercise 1.3 Caculate all of the following 32 23 736 3.2 23 73.6 3.2 2.3 7.36 \"\"\" md\"\"\" We wanted to show you that floating point arithmetic has structure to it. It is not the fuzz or slop that you may have seen as experimental errors in maybe a chemistry or physics class. If you are interested, we may show more later in the semester. \"\"\" md\"\"\" Exercise 2 Rank one matrices In this exercise we will go into some more detail about how to define types in Julia in order to make a structured matrix type, similar to the `OneHotVector` type from class. To begin, we will make a type to represent a rank 1 matrix. A rank 1 matrix is a matrix whose columns are all multiples of each other. This already tells us a lot about the matrix in fact, we can represent any such matrix as the outer product of two vectors `v` and `w`. Only the two vectors will be stored the matrix elements will be calculated on demand, i.e. when we index into the object. \"\"\" md\"\"\" Exercise 2.1 Let's make a `FirstRankOneMatrix` type that contains two vectors of floats, `v` and `w`. Here `v` represents a column and `w` the multpliers for each column. We include in the same cell, due to requirements of Pluto a constructor that takes a single vector `v` and duplicates it. \"\"\" begin struct FirstRankOneMatrix Your code here v Vector Float64 w Vector Float64 end Add the extra constructor here FirstRankOneMatrix v FirstRankOneMatrix v, v end hint md\"\"\" The extra constructor should have the same name as the type it should take in a single argument `v`, and use it for both the column and the multipliers. \"\"\" md\"\"\" 👉 Create an object of type `FirstRankOneMatrix` representing the multiplication table of the numbers from 1 to 10 and the numbers from 1 to 12. Call it `ten twelve`. \"\"\" ten twelve missing Your code here let if isdefined ten twelve not defined ten twelve else if ten twelve isa Missing still missing elseif ten twelve isa FirstRankOneMatrix keep working md\"`ten twelve` should be a `FirstRankOneMatrix`.\" elseif ten twelve.v 1 10 && ten twelve.w 1 12 || ten twelve.w 1 10 && ten twelve.v 1 12 correct else keep working end end end md\"\"\" Exercise 2.2 extending Base methods Right now, our `FirstRankOneMatrix` is just a container for two arrays. To make it behave like a matrix, we add methods to functions in `Base`, Julia's standard set of functions. Most of the functions you have used so far come from base, for example \"\"\" sqrt Base.sqrt size Base.size filter Base.filter md\"\"\" These are built in functions, and each function comes with a set of methods pre defined in Julia's source code which is mostly written in Julia . Uncomment the next cell to see the full list of methods for `size`. We will add a method to this list \"\"\" methods size md\"\"\" Let's extend the `size` and `getindex` methods so that they can also work with our rank 1 matrices. This will allow us to easily access the size and entries of the matrix. \"\"\" md\"\"\" 👉 Extend `Base.size` for the type `FirstRankOneMatrix` to return the size as a tuple of values corresponding to each direction. \"\"\" function Base.size M FirstRankOneMatrix return missing Your code here end Base.size ten twelve let if isdefined RankOneMatrix not defined RankOneMatrix else R2 FirstRankOneMatrix 1,2 , 3,4,5 if ismissing Base.size R2 still missing elseif size R2 2, 3 keep working md\"`Base.size` is not implemented correctly.\" else correct end end end md\"\"\" 👉 Extend `Base.getindex` for the type `FirstRankOneMatrix` to return the i, j th entry of the outer product. \"\"\" function Base.getindex M FirstRankOneMatrix, i, j return missing Your code here end Base.getindex ten twelve, 5, 11 let if isdefined FirstRankOneMatrix not defined FirstRankOneMatrix else R2 FirstRankOneMatrix 1,2 , 3,4,5 if ismissing Base.getindex R2, 1, 1 still missing md\"Implement both `Base.size` and `Base.getindex`.\" elseif ismissing Base.size R2 still missing md\"Implement both `Base.size` and `Base.getindex`.\" elseif size R2 2, 3 keep working md\"`Base.size` is not implemented correctly.\" else shouldbe 3 4 5 6 8 10 r all CartesianIndices shouldbe do I isapprox R2 Tuple I ... , shouldbe I , rtol 1 3 end if r correct else keep working md\"`Base.getindex` is not implemented correctly.\" end end end end md\"\"\" Exercise 2.3 If you ask Julia to display the value of an object of type `FirstRankOneMatrix`, you will notice that it doesn't do what we are used to, which is probably to display the whole matrix that it corresponds to. Let's see \"\"\" ten twelve md\"\"\" This is what matrices normally look like in Julia \"\"\" ones 10, 12 An example matrix two dimensional array md\"\"\" One possible workaround for this is to create a new function specifically to display a matrix of our custom type. 👉 Make a function `print as matrix` that prints the entries of a matrix of type `FirstRankOneMatrix` in a grid format. We'll test that it works below with the matrix `R` we already created. \"\"\" function print as matrix M FirstRankOneMatrix Your code here end md\"\"\" We should now be able to see our `FirstRankOneMatrix` type matrix displayed in the terminal In Pluto, we have to use `with terminal` to capture and display output printed to the terminal . \"\"\" with terminal do print as matrix ten twelve end let example FirstRankOneMatrix 1,2 , 3,4 if ismissing print as matrix example still missing end end hint md\"\"\" Check the docs for functions like `print`, `println`, `lpad` and `rpad`. Also, you don't have to know exactly how the `do` keyword works for now, but feel free to read about it it can be useful with iterating \"\"\" md\"\"\" Exercise 2.4 AbstractMatrix In fact, Julia together with Pluto can do some of this work for us Julia provides facilities to make our life easier when we tell Julia that our type behaves like an array. We do so by making the type a subtype of `AbstractMatrix`. This will let our type inherit the methods and attributes that come with the `AbstractMatrix` type by default including some display functions that Pluto notebooks use. Let's do all this on a new rank one matrix type `RankOneMatrix`. As we do this, we will also remove the restriction to `Float64` type entries by using a parametrised type `T`. Parametrised types allow us flexibility to handle different types of entries without repeating a lot of code we won't go too in depth about these for now. \"\"\" begin struct RankOneMatrix T AbstractMatrix T v AbstractVector T w AbstractVector T end Add the two extra constructors Should we make these missing by default? if so remove hint below RankOneMatrix v RankOneMatrix v, v end md\"\"\" In the cell above, we added a second 'outer' constructor that takes a single vector as argument. 👉 Make sure that you can use both constructors by trying them out below. \"\"\" hint md\"\"\" If you want to specify that your argument is a range, use the `AbstractRange` type. \"\"\" md\"\"\" 👉 Add `getindex` and `size` methods for this new type. These will allow us to access entries of our custom matrices with the usual index notation `M i,j `, as well as quickly retrieving their dimensions. \"\"\" function Base.size M RankOneMatrix return missing Your code here end function Base.getindex M RankOneMatrix, i, j return missing Your code here end R2 RankOneMatrix 1,2 , 3,4,5 Base.getindex R2, 2, 3 Base.size R2 let if isdefined RankOneMatrix not defined RankOneMatrix else R2 RankOneMatrix 1,2 , 3,4,5 if ismissing Base.size R2 still missing elseif size R2 2, 3 keep working md\"`Base.size` is not implemented correctly.\" else correct end end end let if isdefined RankOneMatrix not defined RankOneMatrix else R2 RankOneMatrix 1,2 , 3,4,5 if ismissing Base.getindex R2, 1, 1 still missing md\"Implement both `Base.size` and `Base.getindex`.\" elseif ismissing Base.size R2 still missing md\"Implement both `Base.size` and `Base.getindex`.\" elseif size R2 2, 3 keep working md\"`Base.size` is not implemented correctly.\" else shouldbe 3 4 5 6 8 10 r all CartesianIndices shouldbe do I isapprox R2 Tuple I ... , shouldbe I , rtol 1 3 end if r correct else keep working md\"`Base.getindex` is not implemented correctly.\" end end end end md\"\"\" 👉 Create an object of the new type for the 10 \\times 10 multiplication matrix, using a single range. \"\"\" M RankOneMatrix 1 10 missing Your code here md\"\"\" You should see two things Firstly, the matrix now contains integers, instead of floats this is thanks to our parametrised type . And secondly, Julia automatically displays the matrix as we wanted, once you have defined `getindex` and `size`, provided you have told Julia that your type is a subtype of `AbstractArray` \"\"\" md\"\"\" Julia also allows us to automatically convert the matrix to a normal \"dense\" matrix, using either `collect` or `Array`. Let's try these out. You may need to re run the cell below after completing the exercises. \"\"\" collect M typeof collect M md\"\"\" Fun fact we did not define a method for `Base.collect`, and yet it works This is because we told Julia that our `RankOneMatrix` is a subtype of `AbstractMatrix`, for which `Base.collect` already has a method defined in Julia's source code. This fallback method uses `Base.getindex` and `Base.size`, which we did define. \"\"\" md\"\"\" Exercise 2.5 Why do we need a special type to represent special types of structured matrices? One reason is that not only do they give a more efficient representation in space requiring less memory to store , they can also be more efficient in time, i.e. faster . For example, let's look at matrix vector mutiplication . This is a fundamental part of many, many algorithms in scientific computing, and because of this, we usually want it to be as fast as possible. For a rank one matrix given by M v w^T , the matrix vector product M \\cdot x is given by w \\cdot x v . Note that w \\cdot x is a number scalar which is multiplying the vector element by element. This computation is much faster than the usual matrix vector multiplication we are taking advantage of structure \"\"\" md\"\"\" 👉 Define a function `matvec` that takes a `RankOneMatrix` `M` and a `Vector` `x` and carries out matrix vector multiplication. We will be able to compare the result with doing the matrix vector product using the corresponding dense matrix. \"\"\" function matvec M RankOneMatrix, x return missing Your code here end if isdefined matvec not defined matvec else let M RankOneMatrix 1 10 if ismissing matvec M, ones 10 still missing end incorrect false for i in 1 5 r ones 10 . i for j in 1 10 if matvec M, r j collect M r j incorrect true end end end if incorrect keep working else correct end end end bigbreak md\"\"\" Exercise 3 Low rank matrices \"\"\" md\"\"\" In this exercise we will combine rank 1 matrices into low rank matrices, which are sums of rank 1 matrices. Just like in the previous exercise, we will make custom types for these matrices, and we will be able to compute the entries of a matrix on demand as we request them instead of storing all of them always . \"\"\" md\"\"\" Exercise 3.1 👉 Make a rank 2 matrix type `RankTwoMatrix` that contains two rank 1 matrices `A` and `B`. For simplicity, you can use the `FirstRankOneMatrix` type. Include in the same cell a constructor for `RankTwoMatrix` that takes two vectors and makes the rank one matrices from those vectors. Note In principle we should check when constructing the type that the input matrices have the same dimensions, but we will just assume that they do. \"\"\" begin struct RankTwoMatrix T AbstractMatrix T Your code here A RankOneMatrix T B RankOneMatrix T end Add a constructor that uses two vectors ranges RankTwoMatrix v1, v2 RankTwoMatrix RankOneMatrix v1 , RankOneMatrix v2 end md\"\"\" Exercise 3.2 👉 Construct a rank two matrix out of the rank 1 matrix representing the multiplication table of 1.0 10.0 , together with the multiplication table of 0.0 0.1 0.9 . Note that both range arguments must contain floats, so that we can add up entries. \"\"\" md\"\"\" Exercise 3.3 👉 As with last time, extend the `getindex` and `size` methods for the `RankTwoMatrix` type. Keep in mind they are already defined for `RankOneMatrix`. \"\"\" function Base.getindex M RankTwoMatrix, i, j return missing Your code here end function Base.size M RankTwoMatrix return missing Your code here end let if isdefined RankTwoMatrix not defined RankTwoMatrix else R1 RankOneMatrix 1,2 , 3,4,5 R2 RankTwoMatrix R1, R1 if ismissing Base.size R2 still missing elseif size R2 2, 3 keep working md\"`Base.size` is not implemented correctly.\" else correct end end end let if isdefined RankTwoMatrix not defined RankTwoMatrix else R1a RankOneMatrix 1,2 , 3,4,5 R1b RankOneMatrix 2,1 , 3,4,5 R2 RankTwoMatrix R1a, R1b if ismissing Base.getindex R2, 1, 1 still missing md\"Implement both `Base.size` and `Base.getindex`.\" elseif ismissing Base.size R2 still missing md\"Implement both `Base.size` and `Base.getindex`.\" elseif size R2 2, 3 keep working md\"`Base.size` is not implemented correctly.\" else shouldbe 3 4 5 6 8 10 s2 shouldbe shouldbe 2,1 , r all CartesianIndices s2 do I isapprox R2 Tuple I ... , s2 I , rtol 1 3 end if r correct else keep working md\"`Base.getindex` is not implemented correctly.\" end end end end md\"\"\" Exercise 3.4 Making a custom type for rank 2 matrices is a step forward from rank 1 matrices instead of storing two vectors, we store two rank 1 matrices themselves. What if we want to represent a rank 3 matrix? We would need to store three rank 1 matrices, instead of just two. What about rank 4, rank 5, and so on? We can go even further and make a general custom type `LowRankMatrix` for rank k matrices, for general ideally low k . In this case, we should store two main things the list of rank 1 matrices that our low rank matrix is made up of, and also the rank of the matrix which is how many rank 1 matrices we are storing . 👉 Complete the definition for the type `LowRankMatrix`. Remember to store both the rank 1 matrices and the rank of the matrix itself. \"\"\" struct LowRankMatrix AbstractMatrix Float64 Your code here Ms Vector RankOneMatrix rank Int end md\"\"\" Exercise 3.5 👉 Extend the `getindex` and `size` methods to work with the `LowRankMatrix` type. As before, remember that these are already defined for `RankOneMatrix`. \"\"\" function Base.getindex M LowRankMatrix, i, j return missing Your code here end function Base.size M LowRankMatrix return missing Your code here end let comp1, comp2 RankOneMatrix 1.0 1.0 10.0 , RankOneMatrix 0.0 0.1 0.9 ex3 LowRankMatrix comp1, comp2 , 2 end let if isdefined LowRankMatrix not defined LowRankMatrix else R1 RankOneMatrix 1,2 , 3,4,5 R2 LowRankMatrix R1, R1 ,2 if ismissing Base.size R2 still missing elseif size R2 2, 3 keep working md\"`Base.size` is not implemented correctly.\" else correct end end end let if isdefined LowRankMatrix not defined LowRankMatrix else R1a RankOneMatrix 1,2 , 3,4,5 R1b RankOneMatrix 2,1 , 3,4,5 R2 LowRankMatrix R1a, R1b ,2 if ismissing Base.getindex R2, 1, 1 still missing md\"Implement both `Base.size` and `Base.getindex`.\" elseif ismissing Base.size R2 still missing md\"Implement both `Base.size` and `Base.getindex`.\" elseif size R2 2, 3 keep working md\"`Base.size` is not implemented correctly.\" else shouldbe 3 4 5 6 8 10 s2 shouldbe shouldbe 2,1 , r all CartesianIndices s2 do I isapprox R2 Tuple I ... , s2 I , rtol 1 3 end if r correct else keep working md\"`Base.getindex` is not implemented correctly.\" end end end end md\"\"\" Exercise 3.6 👉 Extend the method `matvec` to work with our custom type `LowRankMatrix` and a `Vector` . Remember that `matvec` is already defined for `RankOneMatrix`. \"\"\" function matvec M LowRankMatrix, x return missing Your code here end if isdefined matvec not defined matvec else let comp1, comp2 RankOneMatrix 1.0 1.0 10.0 , RankOneMatrix 0.0 0.1 0.9 if ismissing comp1 | ismissing comp2 still missing end ex4 LowRankMatrix comp1, comp2 , 2 if ismissing ex4 still missing end if ismissing matvec ex4, ones 10 still missing end incorrect false for i in 1 10 r ones 10 . i v, c matvec ex4, r , collect ex4 r for j in 1 10 if abs v j c j 1e 10 incorrect true break end end end if incorrect keep working else correct end end end hint md\"\"\" How would we implement `matvec` for a rank 2 matrix making use of the two stored rank 1 matrices? Can you generalize this to the rank k case, when we have many rank 1 matrices? \"\"\" md\"\"\" Exercise 3.7 One of the big advantages of our rank 1 matrices is its space efficiency to \"store\" a n\\times n matrix, we only need to actually store two vectors of n entries, as opposed of n^2 total entries. Rank 2 matrices are a litte less efficient we store two rank 1 matrices, or four vectors of n vertices. As we increase the rank, we lose space efficiency, at the cost of being able to represent more kinds of matrices. 👉 For what rank will a matrix of rank k need the same amount of storage as the dense version? Explain your answer. \"\"\" answer md\"\"\" From rank ... Because .... \"\"\" bigbreak md\"\"\" Exercise 4 The SVD for structured matrices In a math class, you may or may not learn about the singular value decomposition SVD . From a computational thinking point of view, whether you have seen this before or not we hope will not matter. Here we would like you to get to \"know\" the SVD , through experience, rather than through a math lecture. This is how we see \"computational thinking\" after all. Definitely do not look up some eigenvalue definition. \"\"\" using LinearAlgebra md\"\"\" Exercise 4.1 The `LinearAlgebra` package defines a function `svd` that computes the decomposition for us. Have a look at the result of calling the `svd` function. Try not to get intimidated by the large output you may need to scroll the cell output , and look at the docs for `svd`. \"\"\" biggie rand 100,100 svd biggie md\"\"\" 👉 What are the singular values of `biggie`? \"\"\" singular values of biggie missing if isdefined singular values of biggie not defined singular values of biggie else if singular values of biggie isa Missing still missing elseif singular values of biggie isa AbstractVector keep working md\"Return the singular values as a vector .\" elseif isapprox singular values of biggie, svdvals biggie , rtol 1e 5 correct else keep working end end bigbreak md\"\"\" Exercise 4.2 If we try to run the `svd` function on a `RankOneMatrix`, you will see that it does not work. The error is telling us that no `svd` method has been defined for our type . Let's extend the `svd` function to work on objects of our type. \"\"\" A RankOneMatrix rand 3 ,rand 4 svd A md\"\"\" 👉 Extend `svd` to work directly on a rank one matrix, by writing a new method. Keep things simple. Inside your method, call `LinearAlgebra.svd` on a type that it is already defined for . \"\"\" function LinearAlgebra.svd A RankOneMatrix return missing end LinearAlgebra.svd A try A RankOneMatrix 1,2,3 , 5,6,7 result LinearAlgebra.svd A if result isa Missing still missing elseif result isa LinearAlgebra.SVD almost md\"Like all other `svd` methods implemented in `LinearAlgebra` , your method should return an SVD factorization of type `LinearAlgebra.SVD` .\" else reconstructed result.U ,1 1 result.S 1 1 result.Vt 1 1, if sum abs. A . reconstructed 1e 5 correct else keep working end end catch e if e isa MethodError && e.f LinearAlgebra.svd still missing md\"Define a new method for `LinearAlgebra.svd` that takes a `RankOneMatrix` as argument.\" else rethrow e end end md\"\"\" Exercise 4.3 👉 Look at the singular values, how many of them are approximately non zero? Does that make sense? \"\"\" md\"\"\" This number the number of singular values that are positive is something you will or have learn ed in a linear algebra class it is known as the rank of a matrix, and is usually defined through a complicated elimination procedure. 👉 Write a function `numerical rank` that calculates the singular values of a matrix `A`, and returns how many of them are approximately zero. To keep things simple, you can assume that \"approximately zero\" means less than `tol 1e5`. \"\"\" function numerical rank A AbstractMatrix tol 1e 5 return missing end numerical rank A numerical rank rand 3,3 let if isdefined numerical rank not defined numerical rank else result1 numerical rank 1 2 0 0 0 1e 10 5 10 0 if result1 isa Missing still missing elseif result1 isa Integer keep working md\"You should return a number.\" elseif result1 1 keep working else result2 numerical rank 1 3 0 0 0 1e 10 5 10 0 if result2 2 correct else keep working end end end end md\"\"\" Exercise 4.4 👉 Write a function that takes an argument k and generates the sum of k random rank one matrices of size mxn, and counts the number of essentially non zero singular values. Hint you can do this with a `for` loop, but it can also be done with `sum`, e.g. `sum i for i 1 10 `. \"\"\" function k rank ones k, m, n return missing end k rank ones 1, 3, 3 let if isdefined k rank ones not defined k rank ones else result k rank ones 1, 3, 4 if result isa Missing still missing elseif result isa AbstractMatrix keep working md\"Make sure that you return a matrix.\" elseif size result 3, 4 keep working md\"Make sure that you return a matrix of the correct size.\" else numerical rank A count 1e 5 , svdvals A if numerical rank result 1 correct else result2 k rank ones 2, 10, 4 if result2 isa AbstractMatrix keep working md\"Make sure that you return a matrix.\" elseif size result2 10, 4 keep working md\"Make sure that you return a matrix of the correct size.\" elseif numerical rank result2 2 correct else keep working end end end end end md\"\"\" Exercise 4.5 👉 What is the answer when m and n are both ≥ k ? What if one of m or n is k ? \"\"\" bigbreak md\" Function library Just some helper functions used in the notebook.\" hint text Markdown.MD Markdown.Admonition \"hint\", \"Hint\", text almost text Markdown.MD Markdown.Admonition \"warning\", \"Almost there \", text still missing text md\"Replace `missing` with your answer.\" Markdown.MD Markdown.Admonition \"warning\", \"Here we go \", text keep working text md\"The answer is not quite right.\" Markdown.MD Markdown.Admonition \"danger\", \"Keep working on it \", text yays md\"Fantastic \", md\"Splendid \", md\"Great \", md\"Yay ❤\", md\"Great 🎉\", md\"Well done \", md\"Keep it up \", md\"Good job \", md\"Awesome \", md\"You got the right answer \", md\"Let's move on to the next question.\" correct text rand yays Markdown.MD Markdown.Admonition \"correct\", \"Got it \", text not defined variable name Markdown.MD Markdown.Admonition \"danger\", \"Oopsie \", md\"Make sure that you define a variable called Markdown.Code string variable name \" todo text HTML \"\"\" div style \"background rgb 220, 200, 255 padding 2em border radius 1em \" h1 TODO h1 repr MIME\"text html\" , text div \"\"\" bigbreak html\" br br br br br \" "},{"url":"week5/pca/","title":"Principal Component Analysis","tags":["lecture","module2"],"text":" A Pluto.jl notebook v0.19.12 frontmatter chapter 2 video \"https www.youtube.com watch?v iuKrM NzxCk\" image \"https user images.githubusercontent.com 6933510 136196577 512cee99 aebf 48a9 97b8 358d5ca561ca.png\" section 1 order 1 title \"Principal Component Analysis\" layout \"layout.jlhtml\" youtube id \"iuKrM NzxCk\" description \"\" tags \"lecture\", \"module2\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin import ImageMagick using PlutoUI using Colors, ColorSchemes, Images using Plots using LaTeXStrings using Statistics, LinearAlgebra standard libraries end PlutoUI.TableOfContents aside true md\"\"\" Introduction Understanding data In this notebook we will start looking at more general kinds of data , not only images, and we'll try to extract some information from the image using statistical methods, namely principal component analysis https en.wikipedia.org wiki Principal component analysis . This method tries to answer the questions \"which 'directions' are the most important in the data\" and \"can we reduce the dimensionality https en.wikipedia.org wiki Dimensionality reduction number of useful variables of the data\"? This can be viewed as another take on the question of finding and exploiting structure in data. It also leads towards ideas of machine learning . \"\"\" md\"\"\" Rank of a matrix \"\"\" md\" Flags\" md\"Let's start off by recalling ideas about multiplication tables or outer products \" outer v, w x y for x in v, y in w outer 1 10, 1 12 md\"\"\" Each column is a multiple in general not an integer multiple of any other column and each row is a multiple of any other row. This is an example of a structured matrix , i.e. one in which we need to store less information to store the matrix than the full m \\times n table of numbers even though no element is 0 . For example, for an outer product we only need m n numbers, which is usually much less. \"\"\" md\"Some flags give simple examples of outer products, for example\" flag outer 1, 0.1, 2 , ones 6 ones 6 show image flag flag2 outer 1, 0.1, 2 , 1, 1, 1, 3, 3, 3 show image flag2 md\"\"\" Note that outer products are not always immediate to recognise just by looking at an image But you should be able to recognise that there is some kind of structure. \"\"\" md\" Matrix rank\" md\"\"\" If a matrix can be written exactly as a single multiplication table outer product, we say that its rank is 1, and we call it a rank 1 matrix. Similarly, if it can be written as the sum of two outer products, it has rank 2 , etc. \"\"\" md\"Let's see what a random rank 1 matrix looks like \" w 300 image outer 1 0.4 rand 50 , rand w show image image md\"\"\" It has a characteristic checkerboard or patchwork look. \"\"\" md\"\"\" Here's a random rank 2 matrix \"\"\" begin image2 outer 1 0.4 rand 50 , rand w outer rand 52 , rand w show image image2 end md\"\"\" We see that it starts to look less regular. \"\"\" md\"\"\" Exercise Make an interactive visualisation of a random rank n matrix where you can vary n . \"\"\" md\"\"\" Effect of noise \"\"\" md\"\"\" Now what happens if we add a bit of noise , i.e. randomness, to a rank 1 matrix? \"\"\" noisy image image . 0.03 . randn. show image image show image noisy image md\"\"\"The noisy image now has a rank larger than 1. But visually we can see that it is \"close to\" the original rank 1 matrix. Given this matrix, how could we discover that it is close to a structured, rank 1 matrix? We would like to be able to find this out and say that the matrix is close to a simple one.\"\"\" md\" Images as data\" md\"\"\" Now let's treat the image as a data matrix , so that each column of the image matrix is a vector representing one observation of data. In data science it is often the rows that correspond to observations. Let's try to visualize those vectors, taking just the first two rows of the image as the x and y coordinates of our data points \"\"\" show image image 1 2, 1 20 image 1 2, 1 20 begin xx image 1, yy image 2, end md\" From images to data\" md\"\"\" We would like to visualise this data with the `Plots.jl` package, passing it the x and y coordinates as arguments and plotting a point at each x i, y i pair. We obtain the following plot of the original rank 1 matrix and the noisy version \"\"\" gr begin xs noisy image 1, ys noisy image 2, scatter xs, ys, label \"noisy\", m ., alpha 0.3, ms 4, ratio 1 scatter xx, yy, leg topleft, label \"rank 1\", ms 3, alpha 0.3, size 500, 400 , m square, c red, framestyle origin title \"Plotting a rank 1 matrix gives a straight line \" end md\"We see that the exact rank 1 matrix has columns that lie along a line through the origin in this representation, since they are just multiples of one another. E.g. If x 1, y 1 and x 2, y 2 are two columns with x 2 cx 1 and y 2 cy 1 , then y 2 x 2 y 1 x 1 , so they lie along the same line through the origin. The approximate rank 1 matrix has columns that lie close to the line \" md\"So, given the data, we want to look at it do see if it lies close to a line or not. How can we do so in an automatic way? \" md\"\"\" Measuring data cloud \"size\" using statistics \"\"\" md\"Looking at this cloud of data points, a natural thing to do is to try to measure it How wide is it, and how tall?\" md\"\"\"For example, let's think about calculating the width of the cloud, i.e. the range of possible x values of the data. For this purpose the y values are actually irrelevant. \"\"\" md\"\"\" A natural idea would be to just scan the data and take the maximum and minimum values. However, real data often contains anomalously large values called outliers , which would dramatically affect this calculation. Instead we need to use a statistical method where we weight the data and average over all the data points. This process will hopefully be affected less by outliers, and will give a more representative idea of the size of the bulk of the data. \"\"\" md\"\"\" A first step in analysing data is often to centre it data around 0 by subtracting the mean, sometimes called \"de meaning\" \"\"\" begin xs centered xs . mean xs ys centered ys . mean ys end scatter xs centered, ys centered, ms 5, alpha 0.5, ratio 1, leg false, framestyle origin md\"\"\" Measuring a \"width\" of a data set \"\"\" md\"\"\" A natural way to measure the width of a data set could be to measure some kind of width separately in both the x and y directions, in other words by projecting the data onto one of the axes, while ignoring the other one. Let's start with the x coordinates of the centred data and try to average them. If we literally average them we will get 0 since we have subtracted the mean . We could ask \"on average how far away from the origin is the data\". This would give the mean absolute deviation https en.wikipedia.org wiki Average absolute deviation \"\"\" begin scatter xs centered, ys centered, ms 5, alpha 0.5, ratio 1, leg false, framestyle origin scatter xs centered, zeros size xs centered , ms 5, alpha 0.1, ratio 1, leg false, framestyle origin for i in 1 length xs centered plot xs centered i , ys centered i , xs centered i , 0 , ls dash, c black, alpha 0.1 end plot end mean abs. xs centered md\"\"\" This is a perfectly good computational measure of distance. However, there is another measure which is easier to reason about theoretically analytically \"\"\" md\"\"\" Root mean square distance Standard deviation \"\"\" md\"\"\" The standard deviation is the root mean square distance of the centered data from the origin. In other words, we first square the distances or displacements from the origin, then take the mean of those, giving the variance . However, since we have squared the original distances, this gives a quantity with units \"distance ^2 \", so we need to take the square root to get back to a measurable length \"\"\" begin σ x √ mean xs centered.^2 root mean square distance from 0 σ y √ mean ys centered.^2 end md\"This gives the following approximate extents standard deviations of the cloud \" begin scatter xs centered, ys centered, ms 5, alpha 0.5, ratio 1, leg false, framestyle origin vline 2 σ x, 2 σ x , ls dash, lw 2, c green hline 2 σ y, 2 σ y , ls dash, lw 2, c blue annotate 2σ x 0.93, 0.03, text L\"2\\sigma x\", 14, green annotate 2σ x 0.88, 0.03, text L\" 2\\sigma x\", 14, green annotate 0.05, 2σ y 1.13, text L\"2\\sigma y\", 14, blue annotate 0.06, 2σ y 1.14, text L\" 2\\sigma y\", 14, blue end md\"\"\" We expect most around 95% of the data to be contained within the interval \\mu \\pm 2 \\sigma , where \\mu is the mean and \\sigma is the standard deviation. This assumes that the data is normally distributed , which is not actually the case for the data generated above. \"\"\" md\" Correlated data\" md\"\"\" However, from the figure it is clear that x and y are not the \"correct directions\" to use for this data set. It would be more natural to think about other directions the direction in which the data set is mainly pointing roughly, the direction in which it's longest , together with the approximately perpendicular direction in which it is narrowest. We need to find from the data which directions these are, and the extent width of the data cloud in those directions. However, we cannot obtain any information about those directions by looking separately at x coordinates and y coordinates, since within the same bounding boxes that we just calculated the data can be distributed in many different ways. Rather, the information that we need is encoded in the relationship between the values of x i and y i for the points in the data set . For our data set, when x is large and negative, y is also rather negative when x is 0, y is near 0 , and when x is large and positive, so is y . We say that x and y are correlated literally they are mutually \"co\" related, such that knowing some information about one of them allows us to predict something about the other. For example, if I measure a new data point from the same process and I find that x is around 0.25 then I would expect y to be within the range 0.05 to 0.2 , and it would be very surprising if y were 0.5. \"\"\" md\"\"\" Although there are standard methods to calculate this correlation, we prefer to hone our intuition using computational thinking instead \"\"\" md\"\"\" We want to think about different directions , so let's introduce an angle \\theta to describe the direction along which we are looking. We want to calculate the width of the cloud along that direction . Effectively we are changing coordinates to a new coordinate, oriented along the line. To do this requires more linear algebra than we are assuming in this course, but let's see what it looks like \"\"\" md\" Rotating the axes\" md\"\"\"By rotating the axes we can \"look in different directions\" and calculate the width of the data set \"along that direction\". What we are really doing is a perpendicular projection of the data onto that direction.\"\"\" M xs centered ys centered ' eigvals cov M' . 199 variances σs.^2 . 199 imax argmax M 1, svdvals M M p1 begin scatter M 1, , M 2, , ratio 1, leg false, ms 2.5, alpha 0.5, framestyle origin projected cos θ sin θ M . cos θ sin θ ' scatter projected 1, , projected 2, , m 3, alpha 0.1, c green lines x reduce vcat, M 1, i , projected 1, i , NaN for i in 1 size M, 2 lines y reduce vcat, M 2, i , projected 2, i , NaN for i in 1 size M, 2 for i in 1 size M, 2 plot M 1, i , projected 1, i , M 2, i , projected 2, i , ls dash, c black, alpha 0.1 end plot lines x, lines y, ls dash, c black, alpha 0.1 plot 0.7 . cos θ , sin θ , 0.7 . cos θ , sin θ , lw 1, arrow true, c red, alpha 0.3 xlims 0.7, 0.7 ylims 0.7, 0.7 scatter M 1, imax , M 2, imax , ms 3, alpha 1, c yellow annotate 0, 1.2, text \"align arrow with cloud\", red, 10 end p2 begin M2 R θ M scatter M2 1, , M2 2, ,ratio 1, leg false, ms 2.5, alpha 0.3, framestyle origin, size 500, 500 plot 0.6, 0 , 0.6, 0 , lw 3, arrow true, c red, xaxis false, yaxis false, xticks , yticks scatter M2 1, imax , M2 2, imax , ms 3, alpha 1, c yellow xlims 0.7, 0.7 ylims 0.7, 0.7 scatter M2 1, , zeros size xs centered , ms 3, alpha 0.1, ratio 1, leg false, framestyle origin, c green lines2 x reduce vcat, M2 1, i , M2 1, i , NaN for i in 1 size M2, 2 lines2 y reduce vcat, M2 2, i , 0, NaN for i in 1 size M2, 2 for i in 1 size M2, 2 plot M2 1, i , M2 2, i , M2 1, i , 0 , ls dash, c black, alpha 0.1 end plot lines2 x, lines2 y, ls dash, c black, alpha 0.1 σ std M2 1, vline 2σ, 2σ , ls dash, lw 2 plot 0.5 cos θ , cos θ , 0.5 sin θ , sin θ , c black, alpha 0.5, lw 1, arrow true plot 0.5 sin θ , sin θ , 0.5 cos θ , cos θ , c black, alpha 0.5, lw 1, arrow true plot 0.5 cos θ , cos θ , 0.5 sin θ , sin θ , c black, alpha 0.5, lw 1, arrow true plot 0.5 sin θ , sin θ , 0.5 cos θ , cos θ , c black, alpha 0.5, lw 1, arrow true title \"σ round σ, digits 4 \" annotate 2σ 0.05, 0.05, text \"2σ\", 10, green annotate 2σ 0.05, 0.05, text \" 2σ\", 10, green end gr R θ cos θ sin θ sin θ cos θ md\"In the following figure, we are rotating the axis red arrow around in the left panel. In the right panel we are viewing the data from the point of view of that new coordinate direction, in other words projecting onto that direction, effectively as if we rotated our head so the red vector was horizontal \" p1 md\"\"\" degrees bind degrees Slider 0 360, default 28, show value true \"\"\" md\"\"\" Rotating the data \"\"\" θ π degrees 180 radians plot p2 md\"\"\" We see that the extent of the data in the direction \\theta varies as \\theta changes. Let's plot the variance in direction \\theta as a function of \\theta \"\"\" begin variance θ var R θ M 1, variance θ AbstractArray variance θ 1 end p3 begin plot 0 360, variance. range 0, 2π, length 361 , leg false, size 400, 200 scatter degrees , σ^2 xlabel \"θ\" ylabel \"variance in direction θ\" end σs svdvals M 1 . σs M md\"\"\"The direction in which the variance is maximised gives the most important direction It is the direction along which the data \"points\", or the direction which best distinguishes different data points. This is often called the first principal component in statistics, or the first singular vector in linear algebra. We can also now quantify how close the data is to lying along that single line, using the width in the perpendicular direction if that width is \"much smaller\" than the width in the first principal direction then the data is close to being rank 1. \"\"\" md\"The simplest way to maximise this function is to evaluate it everywhere and find one of the places where it takes the maximum value \" begin θs 0 0.01 2π fs variance. θs θmax θs argmax fs θmin θs argmin fs fmax variance θmax fmin variance θmin end begin scatter xs centered, ys centered, ms 5, alpha 0.3, ratio 1, leg false, framestyle origin plot 0, 0 , 2 sqrt fmax . cos θmax , sin θmax , arrow true, lw 3, c red plot 0, 0 , 2 sqrt fmin . cos θmin , sin θmin , arrow true, lw 3, c red end md\"\"\" Note that the directions that maximise and minimise variance are perpendicular. This is always the case, as shown using the Singular Value Decomposition SVD in linear algebra. There are different ways to think about this procedure. We can think of it as effectively \"fitting an ellipse\" to the data, where the widths of the ellipse axes show the relative importance of each direction in the data. Alternatively we can think of it as fitting a multivariate normal distribution by finding a suitable covariance matrix. \"\"\" begin circle cos. θs sin. θs ' stretch 2 sqrt fmax 0 0 2 sqrt fmin ellipse R θmax stretch circle plot ellipse 1, , ellipse 2, , series shape, alpha 0.4, fill true, c orange end md\"\"\" Note also that an ellipse is the image of the unit circle under a linear transformation. We are effectively learning what the best linear transformation is that transforms the unit circle into our data cloud. \"\"\" md\" Higher dimensions\" md\"\"\" Can we generalise this to dimensions higher than 2? Let's think about 3D. If we take columns of the first three rows of the original image, we have vectors in 3D. If we plot these vectors in 3D, a rank 1 matrix will give a straight line in 3D, while a rank 2 matrix will give a plane in 3D. Rank 2 noise gives a noisy cloud lying close to a plane. Similarly to what we did above, we need to calculate the ellipsoid that best fits the data. The widths of the axes of the ellipsoid tell us how close to being a line or a plane rank 1 or rank 2 the data is. \"\"\" md\"In more than 3D we can no longer visualise the data, but the same idea applies. The calculations are done using the SVD. If the widths of the ellipsoid in some directions are very small, we can ignore those directions and hence reduce the dimensionality of the data, by changing coordinates to the principal components.\" md\"\"\" What is the Singular Value Decomposition SVD ? \"\"\" md\"\"\" The Singular Value Decomposition SVD is a way of writing any matrix in terms of simpler matrices. Thinking in terms of linear transformations, any linear transformation T has the same effect as a sequence of three simple transformations T rotation₂ ∘ stretch ∘ rotation₁ In terms of matrices, for any matrix M it is possible to write M U \\, \\Sigma \\, V^\\text T where U and V are orthogonal matrices, i.e. they satisfy U U^\\text T I and V V^\\text T I , and \\Sigma is a diagonal matrix. Orthogonal matrices have determinant \\pm 1 , so they leave areas unchanged. They are rotations, possibly combined with reflections. There are algorithms from numerical linear algebra to calculate this decomposition. In Julia we call the `svd` function, e.g. \"\"\" let M 2 1 1 1 svd M end md\"\"\" Let's look at the action of the matrix on the unit disc. To generate points in the unit disc we generate points in 1, 1 ^2 and reject those lying outside \"\"\" begin unit disc 1.0 . 2.0 . rand 2 for i in 1 2000 unit disc reduce hcat, x for x in unit disc if x 1 ^2 x 2 ^2 1 end scatter unit disc 1, , unit disc 2, , ratio 1, leg false, alpha 0.5, ms 3 pp1 begin scatter unit disc 1, , unit disc 2, , ratio 1, leg false, alpha 0.5, title \"stretch rotate\" result 1 tt tt tt 1 unit disc scatter result 1, , result 2, , alpha 0.2 ylims 3, 3 xlims 3, 3 end pp2 begin UU, Sigma, VV svd 1 tt tt tt 1 scatter unit disc 1, , unit disc 2, , ratio 1, leg false, alpha 0.5, title \"stretch\" result2 Diagonal Sigma unit disc scatter result2 1, , result2 2, , alpha 0.2 ylims 3, 3 xlims 3, 3 end md\"\"\" t bind tt Slider 0 0.01 1, show value true \"\"\" plot pp2, pp1 md\"\"\" Rotations in 300 dimensions \"\"\" md\"\"\" We have been thinking of 300 points in 2 dimensions. Instead, we could think about 2 points in 300 dimensions . In some sense, this is what \"transpose really does\" \"\"\" md\"\"\" The V in the SVD is another rotation that we \"cannot see\" in the above pictures. In our case it is a rotation in 300 dimensions But in fact we can visualise it as follows, where we multiply our data by a 300 \\times 300 orthogonal matrix We first take a random anti symmetric matrix, i.e. one for which M M^\\text t . We then turn that into an orthogonal matrix by taking the so called matrix exponential . \"\"\" begin dim size M, 2 anti symmetric randn dim, dim anti symmetric anti symmetric' end bind t Slider 0 0.0002 1, show value true, default 0.0 begin M rotated M exp t anti symmetric scatter M rotated 1, , M rotated 2, , leg false, alpha 0.5, scatter M 1, , M 2, , alpha 0.5 ylims 0.3, 0.3 xlims 0.6, 0.6 end md\"\"\" We see that the data rotates around in 300 dimensions, but always is projected to the same ellipse. \"\"\" U, Σ, V svd M, full true M18 M V scatter M18 1, , M18 2, , alpha 0.5, leg false, ratio 1, xlim 5, 5 md\" Appendix\" begin show image M get. Ref ColorSchemes.rainbow , M . maximum M show image x AbstractVector show image x' end loss M1, M2 sum M1 i M2 i ^2 for i in 1 length M1 if ismissing M2 i function split up v, m, n return v 1 m , v m 1 m n , v m n 1 2m n , v 2m n 1 2m 2n end function ff v, m, n v1, w1, v2, w2 split up v, m, n loss outer v1, w1 outer v2, w2 , M3 end ff2 v ff v, m, n ff rand total , m, n "},{"url":"week5/random_vars/","title":"Sampling and Random Variables","tags":["lecture","module2"],"text":" A Pluto.jl notebook v0.19.12 frontmatter chapter 2 video \"https www.youtube.com watch?v 7HrpoFZzITI\" image \"https user images.githubusercontent.com 6933510 136196576 70e45c9d ef0e 4498 bf61 58d9ae854c3e.png\" section 2 order 2 title \"Sampling and Random Variables\" layout \"layout.jlhtml\" youtube id \"7HrpoFZzITI\" description \"\" tags \"lecture\", \"module2\" using Markdown using InteractiveUtils This Pluto notebook uses bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of bind gives bound variables a default value instead of an error . macro bind def, element quote local iv try Base.loaded modules Base.PkgId Base.UUID \"6e696c72 6542 2067 7265 42206c756150\" , \"AbstractPlutoDingetjes\" .Bonds.initial value catch b missing end local el esc element global esc def Core.applicable Base.get, el ? Base.get el iv el el end end begin import ImageMagick using Plots, PlutoUI, Colors, Images, StatsBase, Distributions using Statistics end PlutoUI.TableOfContents aside true md\"\"\" Julia Useful tidbits \"\"\" md\"\"\" The package that each function comes from is shown in brackets, unless it comes from `Base`. \"\"\" md\"\"\" Julia `Base` library no `using` required `if...else...end` `Dict` Julia's dictionary type `÷` or `div` integer division type `\\div` tab `sum S ` sum of elements in the collection `S`, e.g. an array `count S ` count the number of true elements of a Boolean collection `rand S ` random sampling from a collection `S` `Statistics.jl` pre loaded standard library just needs `using` `mean S ` calculate the mean of a collection `S` `std S ` calculate the standard deviation of a collection `S` `StatsBase.jl` `countmap` `Plots.jl` `histogram x ` Plot a histogram of data vector `x` Plots `bar d ` Plot a bar graph of categorical data Plots `Colors.jl` `distinguishable colors n ` Make `n` distinguishable colours Colors \"\"\" md\"\"\" Random sampling with `rand` \"\"\" md\"\"\" The `rand` function in Julia is quite versatile it tries to generate, or sample , a random object from the argument that you pass in \"\"\" rand 1 6 rand 2, 3, 5, 7, 11 rand \"MIT\" rand 'a' 'z' typeof 'a' 'z' rand random number between 0 and 1 rand methods rand md\"\"\" We can take random objects from a collection of objects of any type, for example \"\"\" distinguishable colors 10 typeof distinguishable colors 10 rand distinguishable colors 3 from Colors.jl package md\"\"\" Several random objects \"\"\" md\"\"\" To sample several random objects from the same collection, we could write an array comprehension \"\"\" rand 1 6 for i in 1 10 md\"\"\" But in fact, just adding another argument to `rand` does the trick \"\"\" rand 1 6, 10 md\"\"\" In fact, you can also generate not only random vectors, but also random matrices \"\"\" rand 1 6, 10, 12 rand distinguishable colors 5 , 10, 10 md\"\"\" We can also use random images \"\"\" penny image load download \"https www.usacoinbook.com us coins lincoln memorial cent.jpg\" begin head penny image , 1 end÷2 tail penny image , end÷2 end end rand head, tail , 5, 5 md\"\"\" Uniform sampling \"\"\" md\"\"\" So far, each use of `rand` has done uniform sampling , i.e. each possible object as the same probability. Let's count heads and tails using the `countmap` function from the `StatsBase.jl` package \"\"\" tosses rand \"head\", \"tail\" , 10000 toss counts countmap tosses \"tail\" 3 typeof \"tail\" 3 toss counts \"tail\" md\"\"\" We see that `countmap` returns a dictionary `Dict` , which maps keys to values we will say more about dictionaries in another chapter. \"\"\" prob tail toss counts \"tail\" length tosses md\"\"\" As we increase the number of tosses, we \"expect\" the probability to get closer to 1 2 . \"\"\" md\"\"\" Tossing a weighted coin \"\"\" md\"\"\" How could we model a coin that is weighted , so that it is more likely to come up heads? We want to assign a probability p 0.7 to heads, and q 0.3 to tails. \"\"\" md\"\"\" One way would be to generate random integers between 1 and 10 and assign heads to a subset of the possible results with the desired probability, e.g. 1 7 get heads, and 8 10 get tails \"\"\" function simple weighted coin outcome if rand 1 10 ≤ 7 \"heads\" else could have elseif \"tails\" end return outcome end function simple weighted coin2 if rand 1 10 ≤ 7 \"heads\" else could have elseif \"tails\" end end result for i in 1 10 end result nothing simple weighted coin2 md\"\"\" Note that `if` statements have a return value in Julia. \"\"\" md\"\"\" How could we generalise this to an arbitrary probability p ∈ 0, 1 ? We can generate a uniform floating point number between 0 and 1, and check if it is less than p . This is called a Bernoulli trial . \"\"\" rand rand 0.314159 md\"\"\" Note that comparisons also return a value in Julia. Here we have switched from heads tails to true false as the output. \"\"\" md\"\"\" Let's make that into a function \"\"\" bernoulli p rand p bernoulli 0.7 md\"\"\" p bind p Slider 0.0 0.01 1.0, show value true, default 0.7 \"\"\" countmap bernoulli p for i in 1 1000 md\"\"\" Bar charts and histograms \"\"\" md\"\"\" Once we have generated several random objects, it is natural to want to count how many times each one occurred. \"\"\" md\"\"\" Let's roll a fair die 1000 times \"\"\" md\"\"\" An obvious way to find the counts would be to run through the data looking for 1s, then run through again looking for 2s, etc. \"\"\" rolls . 1 count rolls . 1 counts count rolls . i for i in 1 6 md\"\"\" Note that this is not the most efficient algorithm \"\"\" md\"\"\" We can plot categorical data using a bar chart , `bar` in Plots.jl. This counts each discrete item. \"\"\" rolls rand 1 6, 100000 try modifying 100 by adding more zeros begin bar counts, alpha 0.5, leg false, size 500, 300 hline length rolls 6 , ls dash title \"number of die rolls length rolls \" ylims 0, length rolls 3 end md\"\"\" Probability densities Rolling multiple dice \"\"\" roll dice n sum rand 1 12, n experiment roll dice n experiment sum randn ^2 for i in 1 n trials 10^6 data experiment for t in 1 trials md\"\"\" Converging shape \"\"\" data md\"\"\" n bind n Slider 1 50, show value true \"\"\" histogram data, alpha 0.5, legend false, bins 200, c lightsalmon1, title \"n n\" c RGB 0.1, 0.2, 0.3 md\"\"\" Here we have switched from a bar chart to a histogram , which counts the number of items falling into a given range or bin . When n is small this tends to look like a bar chart, but it looks like a \"smooth bar chart\" as n gets larger, due to the aggregation . \"\"\" md\"\"\" Does the above histogram look like a bell to you? \"\"\" begin bell load download \"https encrypted tbn0.gstatic.com images?q tbn ANd9GcRmxRAIQt L X99A 4FoP3vsC l WHlC3TtAw&usqp CAU\" bell 1 end 9÷10, end md\"\"\" Normalising the y axis \"\"\" md\"\"\" Notice that the shape of the curve seems to converge to a bell shaped curve, but the axes do not. What can we do about this? We need to normalise so that the total shaded area is 1. We can use the histogram option `norm true` to do so. \"\"\" histogram data, alpha 0.5, legend false, bins 50, norm true, c lightsalmon1, title \"n n\", ylims 0, 0.05 md\"\"\" Normalising the x axis \"\"\" md\"\"\" As we changed n above, the range of values on the x axis also changed. We want to find a way to rescale x at the same time so that both axes and shape stop changing as we increase n . We need to make sure that the data is centred in the same place we will choose 0. And we need to make sure that the width is the same we will divide by the standard deviation. \"\"\" σ std data mean data , std data normalised data data . mean data . std data histogram normalised data, bins 5 1 2σ 1 σ 5, norm true, alpha 0.5, leg false, ylim 0, 0.41 , size 500, 300 plot x exp x^2 2 √ 2π , lw 2, c red, alpha 0.5 md\"\"\" Note that in the limit, the data becomes continuous , no longer discrete. The probability of any particular value is 0 We then talk about a probability density function , f x the integral of this function over the interval a, b gives the probability of being in that interval. \"\"\" md\"\"\" Options for plotting functions \"\"\" md\"\"\" Other options for the `histogram` function options `legend false` turns off the legend key , i.e. the plot labels `bins 50` specifies the number of bins can also be a vector of bin edges `linetype stephist` use steps instead of bars `alpha` a general plot option specifying transparency 0 invisible 1 opaque `c` or `color` a general plot option for the colour `lw` line width default 1 There are several different ways to specify colours. Here http juliagraphics.github.io Colors.jl stable namedcolors is a list of named colours, but you can also specify `RGB 0.1, 0.2, 0.3 `. \"\"\" md\"\"\" Note that `linetype stephist` will give a stepped version of the histogram \"\"\" md\"\"\" Sampling from other distributions \"\"\" md\"\"\" dof bind dof Slider 1 50, show value true \"\"\" chisq data rand Chisq dof , 100000 histogram chisq data, norm true, bins 100, size 500, 300 , leg false, alpha 0.5, xlims 0, 10 √ dof histogram sum randn .^2 for 1 dof for 1 100000 , norm true, alpha 0.5, leg false "}]